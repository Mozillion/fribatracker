{"version":3,"sources":["webpack:///webpack/bootstrap c5e8fa2fb09a01c8e8f9","webpack:///./~/validator/lib/util/assertString.js","webpack:///./~/xstream/index.js","webpack:///./~/snabbdom-jsx/snabbdom-jsx.js","webpack:///./~/@cycle/isolate/lib/index.js","webpack:///./~/ramda/dist/ramda.js","webpack:///./~/validator/lib/util/merge.js","webpack:///./~/validator/lib/isFQDN.js","webpack:///./~/validator/lib/toDate.js","webpack:///./~/validator/lib/util/toString.js","webpack:///./~/xstream/core.js","webpack:///./~/validator/index.js","webpack:///./~/validator/lib/alpha.js","webpack:///./~/validator/lib/blacklist.js","webpack:///./~/validator/lib/isByteLength.js","webpack:///./~/validator/lib/isEmail.js","webpack:///./~/validator/lib/isFullWidth.js","webpack:///./~/validator/lib/isHalfWidth.js","webpack:///./~/validator/lib/isHexadecimal.js","webpack:///./~/validator/lib/isIP.js","webpack:///./~/validator/lib/isISO8601.js","webpack:///./~/validator/lib/ltrim.js","webpack:///./~/validator/lib/rtrim.js","webpack:///./~/validator/lib/toFloat.js","webpack:///./~/xstream/extra/dropRepeats.js","webpack:///./~/symbol-observable/index.js","webpack:///./~/symbol-observable/lib/index.js","webpack:///./~/symbol-observable/lib/ponyfill.js","webpack:///./~/validator/lib/contains.js","webpack:///./~/validator/lib/equals.js","webpack:///./~/validator/lib/escape.js","webpack:///./~/validator/lib/isAfter.js","webpack:///./~/validator/lib/isAlpha.js","webpack:///./~/validator/lib/isAlphanumeric.js","webpack:///./~/validator/lib/isAscii.js","webpack:///./~/validator/lib/isBase64.js","webpack:///./~/validator/lib/isBefore.js","webpack:///./~/validator/lib/isBoolean.js","webpack:///./~/validator/lib/isCreditCard.js","webpack:///./~/validator/lib/isCurrency.js","webpack:///./~/validator/lib/isDataURI.js","webpack:///./~/validator/lib/isDate.js","webpack:///./~/validator/lib/isDecimal.js","webpack:///./~/validator/lib/isDivisibleBy.js","webpack:///./~/validator/lib/isFloat.js","webpack:///./~/validator/lib/isHexColor.js","webpack:///./~/validator/lib/isISBN.js","webpack:///./~/validator/lib/isISIN.js","webpack:///./~/validator/lib/isIn.js","webpack:///./~/validator/lib/isInt.js","webpack:///./~/validator/lib/isJSON.js","webpack:///./~/validator/lib/isLength.js","webpack:///./~/validator/lib/isLowercase.js","webpack:///./~/validator/lib/isMACAddress.js","webpack:///./~/validator/lib/isMD5.js","webpack:///./~/validator/lib/isMobilePhone.js","webpack:///./~/validator/lib/isMongoId.js","webpack:///./~/validator/lib/isMultibyte.js","webpack:///./~/validator/lib/isNull.js","webpack:///./~/validator/lib/isNumeric.js","webpack:///./~/validator/lib/isSurrogatePair.js","webpack:///./~/validator/lib/isURL.js","webpack:///./~/validator/lib/isUUID.js","webpack:///./~/validator/lib/isUppercase.js","webpack:///./~/validator/lib/isVariableWidth.js","webpack:///./~/validator/lib/isWhitelisted.js","webpack:///./~/validator/lib/matches.js","webpack:///./~/validator/lib/normalizeEmail.js","webpack:///./~/validator/lib/stripLow.js","webpack:///./~/validator/lib/toBoolean.js","webpack:///./~/validator/lib/toInt.js","webpack:///./~/validator/lib/trim.js","webpack:///./~/validator/lib/unescape.js","webpack:///./~/validator/lib/whitelist.js"],"names":[],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAQ,oBAAoB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wEAAgE,UAAU;AAC1E;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;AC5FA;;AAEA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;ACXA;AACA;AACA;AACA;AACA,+CAA8C,cAAc;AAC5D;AACA,kC;;;;;;ACNA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAa;AACb,wCAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oDAAmD;AACnD;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gCAA+B,QAAQ;AACvC,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2CAA0C,SAAS;AACnD;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,wCAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;AC1HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,SAAS;AACpB;AACA,YAAW,OAAO;AAClB;AACA,aAAY,SAAS;AACrB;AACA;AACA;AACA;AACA,4BAA2B,oBAAoB;AAC/C;AACA;AACA;AACA;AACA,yBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B,oBAAoB;AACjD,+CAA8C,cAAc;AAC5D;AACA,kC;;;;;;ACzFA;AACA;AACA;AACA;;AAEA,EAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAoC,KAAK,kBAAkB,KAAK;AAChE,4BAA2B;AAC3B;AACA,eAAc;;AAEd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,gBAAgB;AAC/B,gBAAe,gBAAgB;AAC/B,iBAAgB,MAAM;AACtB;AACA;AACA,2CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,iBAAgB,QAAQ;AACxB;AACA;AACA,0BAAyB;AACzB,4BAA2B;AAC3B,wBAAuB,EAAE;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB;AACA,iBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA,iCAAgC;AAChC;AACA,uGAAsG;AACtG;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,gBAAgB;AAC/B,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB,MAAM;AACtB;AACA;AACA,2CAA0C;AAC1C;AACA;AACA;AACA;AACA,wCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,iBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,iBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,kBAAiB;AACjB;AACA,kBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,iBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,kBAAiB;AACjB;AACA,kBAAiB;AACjB;AACA,kBAAiB;AACjB;AACA;AACA;AACA,kBAAiB;AACjB;AACA,kBAAiB;AACjB;AACA,kBAAiB;AACjB;AACA,kBAAiB;AACjB;AACA,kBAAiB;AACjB;AACA,kBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,MAAM;AACrB,gBAAe,SAAS;AACxB,iBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,iBAAgB,SAAS;AACzcAAa;AACbgBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB;AAChB;AACA;AACA;AACA,yBAAwB;AACxB,0BAAyB;AACzB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,OAAO;AACtB,gBAAe,gBAAgB;AAC/B;AACA,iBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA,+CAA8C;AAC9C,+CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,MAAM;AACrB,iBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC;AACrC,sCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,iBAAgB,SAAS;AACzB;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA,oDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,QAAQ;AACvB,gBAAe,QAAQ;AACvB,iBAAgB,QAAQ;AACxB;AACA;AACA;AACA,+BAA8B;AAC9B,gCAA+B;AAC/B,gCAA+B;AAC/B,iCAAgC;AAChC;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,MAAM;AACrB,iBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC;AACrC,sCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,MAAM;AACrB,iBAAgB,MAAM;AACtB;AACA;AACA;AACA,4CAA2C;AAC3C,4CAA2C;AAC3C,4CAA2C;AAC3C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,MAAM;AACrB;AACA,iBAAgB,MAAM;AACtB;AACA;AACA;AACA,kDAAiD;AACjD,mCAAkC;AAClC,oDAAmD;AACnD;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,MAAM;AACrB,iBAAgB;AAChB;AACA;AACA;AACA;AACA,qCAAoC;AACpC;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B,KAAK,KAAK;AACtC,gBAAe,OAAO;AACtB,gBAAe,EAAE;AACjB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA,8BAA6B,WAAW,EAAE,OAAO;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B,KAAK,KAAK;AACxC,gBAAe,MAAM;AACrB,gBAAe,EAAE;AACjB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA,+CAA8C,IAAI,IAAI,OAAO,EAAE,OAAO,IAAI,IAAI;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB,EAAE;AAC3B,gBAAe,SAAS;AACxB,gBAAe,OAAO;AACtB,iBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA,mEAAkE,KAAK,EAAE,OAAO;AAChF,sBAAqB;AACrB;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,iBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB,iBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB;AAChB;AACA;AACA;AACA,uBAAsB;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,EAAE;AACjB,iBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,+BAA8B;AAC9B,oCAAmC;AACnC,kCAAiC;AACjC,6CAA4C;AAC5C;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,iBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA,wBAAuB,KAAK,GAAG,KAAK,GAAG,KAAK;AAC5C,wBAAuB,KAAK,GAAG,KAAK;AACpC,2CAA0C,QAAQ,KAAK,GAAG,KAAK;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,KAAK,KAAK;AACjC,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA,4BAA2B,iBAAiB,EAAE,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB,KAAK,KAAK;AACnC,gBAAe,MAAM;AACrB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA,4CAA2C,IAAI,IAAI,QAAQ,EAAE,OAAO,IAAI;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA,+BAA8B;AAC9B;AACA;AACA,sBAAqB;AACrB;AACA;AACA,2BAA0B;AAC1B;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,MAAM;AACrB,iBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA,wDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,0CAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,iBAAgB;AAChB;AACA;AACA,+BAA8B;AAC9B,gCAA+B;AAC/B,iCAAgC;AAChC,sBAAqB,WAAW,EAAE;AAClC;AACA;AACA;AACA,2OAA0O;AAC1O;AACA,UAAS;AACT;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,YAAY,KAAK,KAAK,KAAK;AACxC,gBAAe,OAAO;AACtB;AACA,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA,4BAA2B,+BAA+B,8BAA8B;AACxF;AACA;AACA;AACA,sBAAqB;AACrB;AACA,+CAA8C,OAAO,4BAA4B,8BAA8B;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB;AACA,gBAAe,MAAM;AACrB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA,wBAAuB,KAAK,GAAG,KAAK,GAAG,KAAK;AAC5C,0CAAyC,OAAO;AAChD,0CAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB;AACA,gBAAe,MAAM;AACrB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA,wBAAuB,KAAK,GAAG,KAAK,GAAG,KAAK;AAC5C,+CAA8C;AAC9C,+CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB;AACA,gBAAe,MAAM;AACrB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA,wBAAuB,WAAW,GAAG,UAAU;AAC/C,8CAA6C,OAAO;AACpD,8CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB;AACA,gBAAe,MAAM;AACrB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA,wBAAuB,WAAW,GAAG,UAAU;AAC/C,mDAAkD;AAClD,mDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,MAAM;AACrB,iBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA,kDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB;AACxB,gBAAe,MAAM;AACrB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA,yDAAwD,OAAO;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB;AACA,gBAAe,MAAM;AACrB;AACA,iBAAgB,KAAK;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA,wEAAuE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,EAAE;AACjB,iBAAgB;AAChB;AACA;AACA;AACA,wBAAuB;AACvB,wBAAuB;AACvB,wBAAuB;AACvB,4BAA2B;AAC3B,4BAA2B;AAC3B;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB;AAChB;AACA;AACA;AACA,yBAAwB;AACxB,yBAAwB;AACxB,yBAAwB;AACxB,6BAA4B;AAC5B,6BAA4B;AAC5B;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB,KAAK;AACvB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB,QAAQ;AACxB;AACA;AACA;AACA,sBAAqB,cAAc,EAAE;AACrC,sBAAqB,YAAY,EAAE;AACnC,uBAAsB,EAAE;AACxB;AACA,0BAAyB;AACzB;AACA,2BAA0B;AAC1B,2BAA0B;AAC1B,2BAA0B;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB,KAAK;AACvB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC;AACrC,qCAAoC;AACpC;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,EAAE;AACjB,iBAAgB;AAChB;AACA;AACA;AACA,+BAA8B;AAC9B,+BAA8B;AAC9B,iCAAgC;AAChC,iCAAgC;AAChC,gCAA+B;AAC/B,mCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,iBAAgB,EAAE;AAClB;AACA;AACA,2BAA0B;AAC1B;AACA;AACA,qCAAoC;AACpC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,iBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,EAAE,iBAAiB;AAC1C,uBAAsB,WAAW,EAAE,OAAO;AAC1C;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB;AAChB;AACA;AACA;AACA,uBAAsB;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,EAAE;AACjB,gBAAe,MAAM;AACrB,iBAAgB,MAAM;AACtB;AACA;AACA,yCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,iBAAgB,MAAM;AACtB;AACA;AACA,sDAAqD;AACrD;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,MAAM;AACrB,iBAAgB,MAAM;AACtB;AACA;AACA,kDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,EAAE;AACrB,gBAAe,OAAO;AACtB,gBAAe,EAAE;AACjB,iBAAgB;AAChB;AACA;AACA,4BAA2B,EAAE;AAC7B,6BAA4B;AAC5B,6BAA4B;AAC5B,+BAA8B;AAC9B,0CAAyC;AACzC,0CAAyC;AACzC,+BAA8B;AAC9B,4BAA2B,EAAE;AAC7B;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,iBAAgB,QAAQ,yEAAyE;AACjG;AACA;AACA,+BAA8B;AAC9B,iCAAgC;AAChC,6BAA4B,EAAE;AAC9B,4BAA2B,WAAW,EAAE;AACxC,4BAA2B,iCAAiC,EAAE;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,iBAAgB,QAAQ;AACxB;AACA;AACA,2BAA0B;AAC1B,gCAA+B;AAC/B,wBAAuB;AACvB,yBAAwB;AACxB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,KAAK;AAClB,gBAAe,OAAO;AACtB,iBAAgB,MAAM;AACtB;AACA;AACA,qBAAoB,iBAAiB,EAAE;AACvC;AACA;AACA;AACA;AACA;AACA,4BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,KAAK;AAClB,gBAAe,OAAO;AACtB,iBAAgB,MAAM;AACtB;AACA;AACA,iCAAgC,cAAc;AAC9C;AACA;AACA,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,iBAAgB,OAAO;AACvB;AACA;AACA,0BAAyB;AACzB,iCAAgC;AAChC;AACA;AACA;AACA,MAAK;;AAEL;AACA,qEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,EAAE;AACjB,iBAAgB;AAChB;AACA;AACA;AACA,wBAAuB;AACvB,wBAAuB;AACvB,wBAAuB;AACvB,4BAA2B;AAC3B,4BAA2B;AAC3B;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB;AAChB;AACA;AACA;AACA,yBAAwB;AACxB,yBAAwB;AACxB,yBAAwB;AACxB,6BAA4B;AAC5B,6BAA4B;AAC5B;AACA;AACA;AACA,MAAK;;AAEL;AACA,2EAA0E;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,gBAAe,MAAM;AACrB,iBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,6CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA,gFAA+E;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,gBAAe,MAAM;AACrB,iBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,gDAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB,MAAM;AACtB;AACA;AACA;AACA,6CAA4C;AAC5C,+BAA8B;AAC9B,gCAA+B;AAC/B;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA,+BAA8B;AAC9B,8BAA6B;AAC7B,+BAA8B;AAC9B,8BAA6B;AAC7B,gCAA+B;AAC/B,gCAA+B;AAC/B;AACA;AACA,uBAAsB;AACtB,uBAAsB;AACtB;AACA;AACA,6BAA4B;AAC5B,6BAA4B;AAC5B,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,EAAE;AACjB,iBAAgB;AAChB;AACA;AACA;AACA,6BAA4B;AAC5B,6BAA4B;AAC5B;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,gBAAe,EAAE;AACjB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,oCAAmC;AACnC;AACA,6DAA4D;AAC5D,8CAA6C;AAC7C;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,KAAK,KAAK,KAAK,KAAK;AACjC,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB;AAChB;AACA;AACA;AACA,sBAAqB,4BAA4B,GAAG,YAAY;AAChE,mBAAkB;AAClB;AACA,iDAAgD,KAAK;AACrD,6BAA4B,WAAW,EAAE,OAAO;AAChD;AACA;AACA,0BAAyB;AACzB,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc,KAAK,MAAM;AACzB,gBAAe,MAAM;AACrB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA,0BAAyB,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,OAAO;AACzD,0BAAyB,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,OAAO;AACzD;AACA;AACA,uCAAsC;AACtC,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAwC,EAAE,KAAK,EAAE,KAAK;AACtD,gBAAe,SAAS;AACxB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,6BAA4B,0CAA0C;AACtE,6BAA4B,0CAA0C;AACtE,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,EAAE;AACjB,iBAAgB;AAChB;AACA;AACA;AACA,6BAA4B;AAC5B,6BAA4B;AAC5B;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,gBAAe,EAAE;AACjB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,oCAAmC;AACnC;AACA,oEAAmE;AACnE,qDAAoD;AACpD;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA,6BAA4B;AAC5B;AACA,8BAA6B;AAC7B,8BAA6B;AAC7B;AACA;AACA,uBAAsB;AACtB,uBAAsB;AACtB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA,uBAAsB;AACtB,uBAAsB;AACtB,8BAA6B;AAC7B;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB,iBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;AACA,iCAAgC;AAChC,gCAA+B;AAC/B;AACA;AACA,gCAA+B;AAC/B;AACA,+BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB;AAChB;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,MAAM;AACrB,iBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA,iDAAgD;AAChD,iDAAgD;AAChD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,iBAAgB,QAAQ;AACxB;AACA;AACA;AACA,yBAAwB;AACxB,0BAAyB;AACzB,sBAAqB;AACrB,sBAAqB;AACrB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,EAAE;AACjB,iBAAgB;AAChB;AACA;AACA;AACA,4BAA2B;AAC3B,6BAA4B;AAC5B,8BAA6B;AAC7B;AACA,6BAA4B;AAC5B,6BAA4B;AAC5B;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB;AAChB;AACA;AACA,wCAAuC;AACvC,yCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B;AAC5B,gBAAe,OAAO;AACtB,gBAAe,EAAE;AACjB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAgD,OAAO,QAAQ,oBAAoB,GAAG,oBAAoB,GAAG,oBAAoB;AACjI;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,sDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,iBAAgB,MAAM;AACtB;AACA;AACA,wBAAuB;AACvB,wBAAuB;AACvB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,iBAAgB,SAAS;AACzB;AACA;AACA;AACA,4BAA2B;AAC3B,wCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,QAAQ;AACvB,gBAAe,QAAQ;AACvB,iBAAgB,QAAQ;AACxB;AACA;AACA;AACA,8BAA6B;AAC7B,+BAA8B;AAC9B,+BAA8B;AAC9B,gCAA+B;AAC/B;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,KAAK;AACpB,gBAAe,EAAE;AACjB,gBAAe,EAAE;AACjB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gEAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,EAAE;AACjB,iBAAgB;AAChB;AACA;AACA;AACA,kCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB,KAAK;AAC9B,gBAAe,MAAM;AACrB,gBAAe,OAAO;AACtB,iBAAgB,EAAE;AAClB;AACA;AACA;AACA,iCAAgC,IAAI,MAAM,EAAE;AAC5C,iCAAgC,IAAI,MAAM,EAAE;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,MAAM;AACrB,gBAAe,OAAO;AACtB,iBAAgB,EAAE;AAClB;AACA;AACA,0CAAyC,IAAI,MAAM,EAAE;AACrD,0CAAyC,IAAI,MAAM,EAAE;AACrD;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,wBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,MAAM;AACrB,gBAAe,EAAE;AACjB,iBAAgB;AAChB;AACA;AACA;AACA,sDAAqD,IAAI,MAAM,EAAE;AACjE;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB,KAAK,KAAK;AAC9B,gBAAe,MAAM;AACrB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA,iCAAgC,uBAAuB,EAAE,OAAO;AAChE,sCAAqC,uBAAuB,EAAE,OAAO;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB,KAAK,KAAK;AAC9B,gBAAe,MAAM;AACrB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA,oCAAmC,uBAAuB,EAAE,OAAO;AACnE,yCAAwC,uBAAuB,EAAE,OAAO;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAkC,KAAK,KAAK;AAC5C,gBAAe,SAAS;AACxB;AACA,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA,oCAAmC,uBAAuB,EAAE,OAAO;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,MAAM;AACrB,iBAAgB,MAAM;AACtB;AACA;AACA;AACA,mDAAkD;AAClD;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB,KAAK;AACvB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB,EAAE;AAClB;AACA;AACA;AACA,0BAAyB,OAAO,EAAE;AAClC,2BAA0B,EAAE;AAC5B;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,OAAO;AACtB,gBAAe,EAAE;AACjB,iBAAgB;AAChB;AACA;AACA;AACA,oCAAmC,WAAW,EAAE;AAChD,oCAAmC,SAAS,EAAE;AAC9C,qCAAoC,EAAE;AACtC;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B;AAC5B,wCAAuC;AACvC;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,0CAAyC,UAAU;AACnD,gBAAe,SAAS;AACxB,gBAAe,OAAO;AACtB,gBAAe,EAAE;AACjB,iBAAgB;AAChB;AACA;AACA;AACA,+CAA8C,WAAW,EAAE;AAC3D;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB,KAAK;AACzB,gBAAe,MAAM;AACrB,gBAAe,OAAO;AACtB,iBAAgB,MAAM;AACtB;AACA;AACA,kCAAiC,WAAW,EAAE;AAC9C,uCAAsC,WAAW,EAAE;AACnD;AACA;AACA,uBAAsB,6CAA6C,EAAE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB,MAAM;AACtB;AACA;AACA,2BAA0B;AAC1B,6BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB;AACA,gBAAe,EAAE;AACjB,gBAAe,MAAM;AACrB,iBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,oDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,iBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,MAAM;AACrB,iBAAgB,MAAM;AACtB;AACA;AACA,+CAA8C;AAC9C;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,cAAc;AAC7B,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA,oDAAmD;AACnD,oDAAmD;AACnD;AACA;AACA,qDAAoD;AACpD;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,aAAa;AAC5B,iBAAgB;AAChB;AACA;AACA,kCAAiC;AACjC,+BAA8B;AAC9B,4BAA2B;AAC3B,2BAA0B;AAC1B;AACA,8BAA6B;AAC7B,6BAA4B;AAC5B,4BAA2B;AAC3B,2BAA0B;AAC1B;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB;AACA,gBAAe,EAAE;AACjB,gBAAe,MAAM;AACrB,iBAAgB,MAAM;AACtB;AACA;AACA;AACA,6DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,KAAK;AACpB,gBAAe,EAAE;AACjB,gBAAe,EAAE;AACjB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,8BAA6B,WAAW,EAAE,QAAQ;AAClD,8BAA6B,WAAW,EAAE,QAAQ;AAClD;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,EAAE;AACjB,iBAAgB;AAChB;AACA;AACA,iDAAgD;AAChD,wDAAuD;AACvD,kDAAiD;AACjD,mDAAkD;AAClD,oCAAmC;AACnC;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,MAAM;AACrB,iBAAgB,MAAM;AACtB;AACA;AACA,wCAAuC,cAAc;AACrD,qCAAoC;AACpC;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,MAAM;AACrB,iBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA,oCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,aAAa;AAC5B,iBAAgB;AAChB;AACA;AACA,qCAAoC;AACpC,yCAAwC;AACxC,qCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,MAAM;AACrB,iBAAgB;AAChB;AACA;AACA,oDAAmD;AACnD,0CAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,iFAAgF;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,MAAM;AACrB,iBAAgB;AAChB;AACA;AACA,0DAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA,+BAA8B;AAC9B;AACA;AACA,wBAAuB;AACvB;AACA;AACA,oCAAmC;AACnC,oCAAmC;AACnC;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,iBAAgB;AAChB;AACA;AACA;AACA,+BAA8B;AAC9B,4BAA2B;AAC3B,yBAAwB;AACxB,wBAAuB;AACvB;AACA,2BAA0B;AAC1B,0BAAyB;AACzB,yBAAwB;AACxB,wBAAuB;AACvB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,EAAE;AACjB,iBAAgB;AAChB;AACA;AACA;AACA,8CAA6C;AAC7C,8CAA6C;AAC7C,8CAA6C;AAC7C,8CAA6C;AAC7C,gCAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,MAAM;AACrB,iBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA,qDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,MAAM;AACrB,iBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA,2DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,iBAAgB,EAAE;AAClB;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,OAAO;AACtB,iBAAgB,MAAM;AACtB;AACA;AACA,oCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,UAAU;AACvB,gBAAe,OAAO;AACtB,iBAAgB,MAAM;AACtB;AACA;AACA;AACA,wBAAuB,iBAAiB,EAAE;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,UAAU;AACvB,gBAAe,OAAO;AACtB,iBAAgB,MAAM;AACtB;AACA;AACA;AACA,iCAAgC,cAAc;AAC9C;AACA;AACA,4BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,iBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA,gCAA+B;AAC/B,oDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA,cAAa;AACb;AACA,MAAK;;AAEL;AACA;AACA,uCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,iBAAgB,SAAS;AACzB;AACA;AACA,2CAA0C,QAAQ,EAAE;AACpD,gDAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,EAAE;AACrB,gBAAe,EAAE;AACjB,iBAAgB;AAChB;AACA;AACA,sBAAqB,EAAE;AACvB,uBAAsB;AACtB,2BAA0B;AAC1B,yBAAwB;AACxB,0BAAyB;AACzB,wBAAuB;AACvB,6BAA4B;AAC5B;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,uDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,iBAAgB;AAChB;AACA;AACA;AACA,gDAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,iBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,iCAAgC;AAChC,gCAA+B;AAC/B;AACA;AACA,gCAA+B;AAC/B;AACA,+BAA8B;AAC9B;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB,iBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,0CAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB;AACA;AACA;AACA,gBAAe,EAAE;AACjB,iBAAgB,MAAM;AACtB;AACA;AACA;AACA,6BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,MAAM;AACrB,iBAAgB,MAAM;AACtB;AACA;AACA;AACA,+CAA8C;AAC9C,kCAAiC,IAAI,GAAG,eAAe;AACvD,4CAA2C;AAC3C,4CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB;AACA,gBAAe,EAAE;AACjB;AACA,iBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,oCAAmC;AACnC,4BAA2B;AAC3B;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,iBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,EAAE;AACjB,gBAAe,gBAAgB;AAC/B,iBAAgB,MAAM;AACtB;AACA;AACA;AACA,wCAAuC;AACvC,wCAAuC;AACvC;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,MAAM;AACrB,iBAAgB,SAAS;AACzB;AACA;AACA,iEAAgE;AAChE,iEAAgE;AAChE,uDAAsD;AACtD,uDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,KAAK;AAClB,gBAAe,OAAO;AACtB,iBAAgB,MAAM;AACtB;AACA;AACA,uBAAsB,iBAAiB,EAAE;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,KAAK;AAClB,gBAAe,OAAO;AACtB,iBAAgB,MAAM;AACtB;AACA;AACA,iCAAgC,cAAc;AAC9C;AACA;AACA,2BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,KAAK;AACpB,gBAAe,EAAE;AACjB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,4BAA2B,WAAW,EAAE;AACxC,4BAA2B,WAAW,EAAE;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB;AACA,gBAAe,EAAE;AACjB;AACA,iBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B;AAC9B,uCAAsC;AACtC;AACA;AACA;AACA,MAAK;;AAEL;AACA,8CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,uBAAuB,KAAK,UAAU;AACnD,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,mBAAkB,iCAAiC,EAAE;AACrD,mBAAkB,iCAAiC,EAAE;AACrD,mBAAkB,iCAAiC,EAAE;AACrD,mBAAkB,iCAAiC,EAAE;AACrD,mBAAkB,iCAAiC,EAAE;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,iBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAkC;AAClC;AACA;AACA;AACA,cAAa;AACb,sCAAqC;AACrC;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,iBAAgB,MAAM;AACtB;AACA;AACA;AACA,yCAAwC;AACxC;AACA,6BAA4B;AAC5B;AACA,iCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,8DAA6D,gBAAgB;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,iBAAgB,MAAM;AACtB;AACA;AACA,+CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAgC;AAChC,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,iBAAgB,OAAO;AACvB;AACA;AACA,kDAAiD,OAAO;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,iBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf,iBAAgB;AAChB;AACA;AACA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf,iBAAgB;AAChB;AACA;AACA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,gBAAe,QAAQ;AACvB,iBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa;AACbkBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,iBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,iBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,mCAAkC;AAClC,qCAAoC;AACpC;AACA;AACA,iCAAgC;AAChC;AACA,mCAAkC;AAClC;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,EAAE,KAAK;AACpB,gBAAe,EAAE;AACjB,iBAAgB,EAAE;AAClB;AACA;AACA,8BAA6B,IAAI,IAAI;AACrC;AACA,4CAA2C;AAC3C;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,iBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,EAAE;AACjB,iBAAgB;AAChB;AACA;AACA;AACA,8CAA6C;AAC7C,8CAA6C;AAC7C,8CAA6C;AAC7C,8CAA6C;AAC7C,gCAA+B;AAC/B;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,MAAM;AACrB,iBAAgB;AAChB;AACA;AACA;AACA,kDAAiD;AACjD,kDAAiD;AACjD,kDAAiD;AACjD,kDAAiD;AACjD,oCAAmC;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,MAAM;AACrB,iBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA,8DAA6D;AAC7D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,EAAE;AACjB,iBAAgB;AAChB;AACA;AACA,4BAA2B;AAC3B,8BAA6B;AAC7B,4CAA2C;AAC3C;AACA,wBAAuB;AACvB,wBAAuB;AACvB,4BAA2B;AAC3B;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,MAAM;AACrB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,4CAA2C;AAC3C;AACA,+BAA8B,uBAAuB,EAAE,OAAO;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS,IAAI;AACb;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,iBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,iBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,iCAAgC;AAChC;AACA,yCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,aAAa;AAC5B,iBAAgB;AAChB;AACA;AACA;AACA,yCAAwC;AACxC,wBAAuB;AACvB;AACA,2BAA0B;AAC1B,wBAAuB;AACvB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,iBAAgB;AAChB;AACA;AACA;AACA,+BAA8B;AAC9B,4BAA2B;AAC3B,yBAAwB;AACxB,wBAAuB;AACvB;AACA,2BAA0B;AAC1B,0BAAyB;AACzB,yBAAwB;AACxB,wBAAuB;AACvB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB;AACA,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,iBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA,gBAAe,8BAA8B;AAC7C,gBAAe,8BAA8B;AAC7C,gBAAe,8BAA8B;AAC7C,gBAAe,gCAAgC;AAC/C,gBAAe;AACf;AACA;AACA,gBAAe,8BAA8B;AAC7C,gBAAe,gCAAgC;AAC/C,gBAAe,6BAA6B;AAC5C,gBAAe;AACf;AACA;AACA;AACA,oBAAmB,gCAAgC,GAAG,4BAA4B;AAClF;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,SAAS;AACxB,gBAAe,MAAM;AACrB,iBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,6CAA4C;AAC5C;AACA;AACA,4CAA2C;AAC3C;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,KAAK,KAAK;AACvB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,KAAK,KAAK;AACvB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA,oEAAmE;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,iBAAgB;AAChB;AACA;AACA;AACA,kCAAiC;AACjC,2BAA0B;AAC1B,2BAA0B;AAC1B,6BAA4B;AAC5B,yBAAwB,EAAE;AAC1B,wBAAuB,UAAU,EAAE;AACnC;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,iBAAgB;AAChB;AACA;AACA;AACA,yCAAwC;AACxC,wBAAuB;AACvB;AACA,2BAA0B;AAC1B,wBAAuB;AACvB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,MAAM;AACrB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA,kDAAiD;AACjD,0CAAyC;AACzC;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA2D,iBAAiB;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,MAAM;AACrB,iBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA,sCAAqC;AACrC;AACA,4BAA2B,iBAAiB,EAAE,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,cAAa,IAAI;AACjB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,OAAO;AACtB,iBAAgB;AAChB;AACA;AACA;AACA,2BAA0B;AAC1B;AACA;AACA,0DAAyD,OAAO;AAChE;AACA;AACA;AACA;AACA;AACA,UAAS,IAAI;AACb,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B,EAAE,KAAK,EAAE,KAAK;AAC5C,gBAAe,SAAS;AACxB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB;AAChB;AACA;AACA;AACA;AACA,0BAAyB,4BAA4B;AACrD,0BAAyB,4BAA4B;AACrD,mBAAkB;AAClB;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,MAAM;AACrB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,MAAM;AACrB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAsC;AACtC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B,UAAU;AACxC,gBAAe,MAAM;AACrB,gBAAe,EAAE;AACjB,gBAAe,OAAO;AACtB,iBAAgB,QAAQ;AACxB;AACA;AACA;AACA,0BAAyB,WAAW,iBAAiB;AACrD,0BAAyB,WAAW,iBAAiB;AACrD,0BAAyB;AACzB;AACA;AACA,uCAAsC;AACtC;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,KAAK;AACxB,gBAAe,cAAc;AAC7B,gBAAe,MAAM;AACrB,iBAAgB,MAAM;AACtB;AACA;AACA;AACA,4BAA2B,KAAK,GAAG,KAAK,GAAG;AAC3C,0CAAyC;AACzC;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB,KAAK,OAAO,KAAK;AACtC,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,iBAAgB,MAAM;AACtB;AACA;AACA,yBAAwB;AACxB,yBAAwB;AACxB;AACA,gDAA+C,QAAQ,uBAAuB,GAAG,uBAAuB;AACxG;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,EAAE;AACjB,gBAAe,EAAE;AACjB,iBAAgB;AAChB;AACA;AACA;AACA,yBAAwB;AACxB,yBAAwB;AACxB,0BAAyB;AACzB,0BAAyB;AACzB;AACA;AACA,0CAAyC;AACzC;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB;AACA,gBAAe,EAAE;AACjB,gBAAe,MAAM;AACrB,iBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,yCAAwC;AACxC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA2D;AAC3D,gBAAe,SAAS;AACxB;AACA,gBAAe,EAAE;AACjB,gBAAe,SAAS;AACxB,gBAAe,MAAM;AACrB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,8BAA6B,wBAAwB;AACrD,8BAA6B,wBAAwB;AACrD;AACA,8BAA6B,wBAAwB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS,IAAI;AACb,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB;AACA,gBAAe,SAAS;AACxB;AACA,gBAAe,EAAE;AACjB,gBAAe,MAAM;AACrB,iBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,gDAA+C;AAC/C;AACA;AACA,kDAAiD;AACjD;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,MAAM;AACrB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,2CAA0C;AAC1C;AACA,8BAA6B,uBAAuB,EAAE,OAAO;AAC7D;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,OAAO;AACtB,iBAAgB,MAAM;AACtB;AACA;AACA,+BAA8B;AAC9B;AACA;AACA,iDAAgD,SAAS,IAAI,IAAI,IAAI,IAAI;AACzE,iDAAgD;AAChD;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA,oCAAmC;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,MAAM;AACrB,iBAAgB;AAChB;AACA;AACA;AACA,kDAAiD;AACjD,kDAAiD;AACjD,kDAAiD;AACjD,kDAAiD;AACjD,oCAAmC;AACnC;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,MAAM;AACrB,iBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,oEAAmE;AACnE;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,iBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA,wBAAuB,KAAK,GAAG,KAAK;AACpC,wBAAuB,KAAK,GAAG,KAAK;AACpC,sDAAqD,QAAQ,KAAK,GAAG,KAAK,GAAG,KAAK;AAClF;AACA;AACA;AACA,MAAK;;AAEL;AACA,8CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,UAAU,KAAK,UAAU;AACtC,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB;AAChB;AACA;AACA;AACA;AACA,mCAAkC,WAAW;AAC7C;AACA,mBAAkB,KAAK,EAAE;AACzB,mBAAkB,WAAW,EAAE;AAC/B,mBAAkB,iBAAiB,EAAE;AACrC,mBAAkB,WAAW,EAAE;AAC/B;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B,sBAAsB,EAAE;AACrD,8BAA6B,sBAAsB,EAAE;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAsB;AACtB,uBAAsB;AACtB,uBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,iBAAgB,MAAM;AACtB;AACA;AACA,sDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,yBAAyB,wBAAwB,KAAK;AACnE,gBAAe,OAAO;AACtB;AACA,iBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAqD;AACrD,2CAA0C;AAC1C,8BAA6B,QAAQ,kBAAkB,SAAS;AAChE;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,KAAK;AACpB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB,oCAAoC,EAAE;AAC1D;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,MAAM;AACrB,iBAAgB;AAChB;AACA;AACA;AACA,2CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB,oBAAmB;AACnB,qBAAoB;AACpB;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B,EAAE,YAAY,EAAE;AAC7C,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB,iBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB;AACA,gBAAe,MAAM;AACrB,iBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAwD;AACxD;AACA;AACA,+DAA8D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC;AACrC,gBAAe,SAAS;AACxB,gBAAe,MAAM;AACrB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA,4CAA2C,UAAU;AACrD,2CAA0C,SAAS;AACnD;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,MAAM;AACrB,iBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA,oDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,qDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,gBAAe,EAAE;AACjB,iBAAgB;AAChB;AACA;AACA,qCAAoC;AACpC;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB,KAAK,KAAK,KAAK;AACjC,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB;AAChB;AACA;AACA;AACA,uBAAsB;AACtB,uBAAsB;AACtB,oCAAmC;AACnC,oCAAmC;AACnC;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC;AACrC,gBAAe,SAAS;AACxB,gBAAe,MAAM;AACrB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,8BAA6B,wBAAwB;AACrD,8BAA6B,wBAAwB;AACrD;AACA,8BAA6B,wBAAwB;AACrD;AACA;AACA,yBAAwB,0BAA0B;AAClD,yBAAwB,wBAAwB;AAChD;AACA,yBAAwB,wBAAwB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,KAAK,MAAM,IAAI;AAC9C,gBAAe,SAAS;AACxB,gBAAe,MAAM;AACrB,iBAAgB,OAAO;AACvB;AACA;AACA,0BAAyB,sBAAsB,GAAG,sBAAsB;AACxE;AACA,mBAAkB,MAAM,sBAAsB,QAAQ;AACtD;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,MAAM;AACrB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA,qCAAoC;AACpC,sCAAqC;AACrC;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,iBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA,mCAAkC;AAClC;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,+BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,4BAA2B,WAAW,EAAE;AACxC,8BAA6B,WAAW,EAAE,gBAAgB;AAC1D,sCAAqC,WAAW,EAAE,QAAQ;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,+CAA8C;AAC9C,mDAAkD;AAClD,0DAAyD;AACzD;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,6BAA4B,IAAI,YAAY,EAAE;AAC9C,+BAA8B,IAAI,YAAY,EAAE,gBAAgB,IAAI;AACpE,uCAAsC,IAAI,YAAY,EAAE,QAAQ,IAAI;AACpE;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,4BAA2B,WAAW,EAAE;AACxC,8BAA6B,WAAW,EAAE,gBAAgB;AAC1D,sCAAqC,WAAW,EAAE,QAAQ;AAC1D;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,iBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA,0CAAyC;AACzC;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,iBAAgB;AAChB;AACA;AACA,+BAA8B;AAC9B,wBAAuB;AACvB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,iBAAgB;AAChB;AACA;AACA,iCAAgC;AAChC,qCAAoC;AACpC,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,MAAM;AACrB,iBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C,kCAAkC;AAC5E,sBAAqB,wBAAwB,GAAG,WAAW;AAC3D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,YAAY;AAC3B,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,YAAY;AAC3B,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA,wCAAuC;AACvC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,iBAAgB;AAChB;AACA;AACA;AACA,+DAA8D;AAC9D,iEAAgE;AAChE;AACA,+CAA8C;AAC9C,yCAAwC;AACxC;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,0DAAyD;AACzD,0DAAyD;AACzD;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,iBAAgB;AAChB;AACA;AACA;AACA,uCAAsC;AACtC,gDAA+C;AAC/C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,kCAAiC,kBAAkB,EAAE;AACrD;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB,wCAAwC;AAC7D;AACA;;AAEA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,YAAY;AAC3B,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAoC,QAAQ,WAAW,eAAe;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,6DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,YAAY;AAC3B,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,EAAE,YAAY,EAAE;AACnC,gBAAe,SAAS;AACxB,iBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAmD;AACnD;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,4CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,MAAM;AACrB,iBAAgB,QAAQ;AACxB;AACA;AACA;AACA,sCAAqC;AACrC,sCAAqC;AACrC,sCAAqC;AACrC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,iBAAgB,MAAM;AACtB;AACA;AACA;AACA,kDAAiD;AACjD,kDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,iBAAgB,MAAM;AACtB;AACA;AACA;AACA,uDAAsD;AACtD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,iBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;AACA,0CAAyC;AACzC;AACA;AACA;AACA,oDAAmD;AACnD;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB,UAAU,KAAK;AACxC,gBAAe,MAAM;AACrB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA,iCAAgC,uBAAuB,EAAE,OAAO;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAoC,QAAQ,WAAW,eAAe;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,iBAAgB;AAChB;AACA;AACA,4BAA2B;AAC3B,+BAA8B;AAC9B,mCAAkC;AAClC,yBAAwB,uBAAuB,EAAE,QAAQ,6BAA6B;AACtF,0DAAyD;AACzD;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,iBAAgB,MAAM;AACtB;AACA;AACA;AACA,gDAA+C;AAC/C;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB,QAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB,QAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,iBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB;AACnB,oBAAmB;AACnB;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA;AACA,sEAAqE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAsB;AACtB,uBAAsB;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,aAAa;AAC5B,gBAAe,aAAa;AAC5B,iBAAgB;AAChB;AACA;AACA;AACA,8BAA6B;AAC7B,4CAA2C;AAC3C,oCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,iBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB;AACnB,kBAAiB;AACjB;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA,gBAAe,OAAO;AACtB,iBAAgB,SAAS;AACzB;AACA;AACA;AACA,2CAA0C;AAC1C;AACA,4CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,cAAc;AAC7B,gBAAe,MAAM;AACrB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA,mCAAkC;AAClC,oCAAmC;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,iBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,0BAAyB;AACzB,0BAAyB;AACzB,0BAAyB;AACzB,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,cAAc;AAC7B,gBAAe,OAAO;AACtB,iBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA,2DAA0D;AAC1D;AACA,yCAAwC;AACxC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,iBAAgB,MAAM;AACtB;AACA;AACA;AACA,2DAA0D;AAC1D,2DAA0D;AAC1D;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,iBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA,wBAAuB,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK;AACpD,wBAAuB,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK;AACpD,oDAAmD,QAAQ,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK;AACxF;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB;AAChB;AACA;AACA;AACA,iCAAgC;AAChC,iCAAgC;AAChC;AACA;AACA;AACA,yGAAwG;AACxG;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,MAAM;AACrB,iBAAgB,MAAM;AACtB;AACA;AACA,uDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,iBAAgB,MAAM;AACtB;AACA;AACA,kCAAiC;AACjC,8BAA6B;AAC7B,kCAAiC;AACjC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,iBAAgB,MAAM;AACtB;AACA;AACA;AACA,oDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,iBAAgB,MAAM;AACtB;AACA;AACA;AACA,2CAA0C;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,IAAG;AACH,wBAAuB,UAAU,EAAE;AACnC,IAAG;AACH;AACA;;AAEA,EAAC;;;;;;;;;;;;;;;;;;AC9nRD;;AAEA;AACA;AACA,EAAC;AACD;AACA;AACA,qEAAoE;AACpE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;;;;;;;;;;;;;;ACjBA;;AAEA;AACA;AACA,EAAC;AACD;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAgD,GAAG,aAAa,GAAG;AACnE;AACA;AACA;AACA,wBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;ACxDA;;AAEA;AACA;AACA,EAAC;AACD;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;AACA;AACA;AACA;AACA,qC;;;;;;AClBA;;AAEA;AACA;AACA,EAAC;;AAED,qGAAoG,mBAAmB,EAAE,mBAAmB,kGAAkG;;AAE9O;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,qC;;;;;;ACrBA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC,OAAO;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT,qCAAoC,WAAW,EAAE;AACjD,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAoC,qBAAqB;AACzlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAuD,yBAAyB,EAAE;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA8C,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,YAAY;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,YAAY;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB;AACA,iBAAgB;AAChB;AACA;AACA;AACA,2CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA,4BAA2B,4BAA4B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA,oCAAmC,SAAS,EAAE;AAC9C;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA,oCAAmC,cAAc,EAAE;AACnD;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,gBAAe,yBAAyB;AACxC,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA,yBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,QAAQ;AACvB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,IAAI;AACnB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA,uCAAsC,uBAAuB,EAAE;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B,4CAA4C;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAwD,OAAO;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,YAAY;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA,iBAAgB;AAChB;AACA;AACA;AACA,yBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA,iBAAgB;AAChB;AACA;AACA;AACA,yBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA,+CAA8C,cAAc;AAC5D;AACA,iC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACp0DA;;AAEA;AACA;AACA,EAAC;;AAED;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,gBAAgB;;AAE7F;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qC;;;;;;AC7RA;;AAEA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,wBAAuB,2BAA2B;AAClD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,0BAAyB,2BAA2B;AACpD;AACA;AACA;AACA,E;;;;;;ACzDA;;AAEA;AACA;AACA,EAAC;AACD;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;AACA;AACA;AACA,qC;;;;;;ACjBA;;AAEA;AACA;AACA,EAAC;;AAED,qGAAoG,mBAAmB,EAAE,mBAAmB,kGAAkG;;AAE9O;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;AChCA;;AAEA;AACA;AACA,EAAC;AACD;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kDAAiD,GAAG,yEAAyE,GAAG;AAChI,oDAAmD,GAAG;AACtD;AACA,wDAAuD,GAAG;AAC1D;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,2CAA0C,UAAU,2CAA2C,WAAW;AAC1G;AACA;;AAEA,uCAAsC,mCAAmC;AACzE;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,kBAAiB,uBAAuB;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA,qC;;;;;;ACrFA;;AAEA;AACA;AACA,EAAC;AACD;AACA;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,gBAAgB;;AAE7F;;AAEA;AACA;AACA;AACA,E;;;;;;ACnBA;;AAEA;AACA;AACA,EAAC;AACD;AACA;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,gBAAgB;;AAE7F;;AAEA;AACA;AACA;AACA,E;;;;;;ACnBA;;AAEA;AACA;AACA,EAAC;AACD;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,gBAAgB;;AAE7F;;AAEA;AACA;AACA;AACA;AACA,qC;;;;;;ACnBA;;AAEA;AACA;AACA,EAAC;AACD;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,gBAAgB;;AAE7F,uBAAsB,IAAI,OAAO,IAAI,OAAO,IAAI,OAAO,IAAI;AAC3D,4BAA2B,IAAI;;AAE/B;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;AACH;AACA,oCAAmC;;AAEnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA,oBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA,wBAAuB;AACvB;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;AChFA;;AAEA;AACA;AACA,EAAC;AACD;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;AACA,6CAA4C,EAAE,MAAM,EAAE,yGAAyG,EAAE;AACjK,4B;;;;;;ACrBA;;AAEA;AACA;AACA,EAAC;AACD;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;AACA;AACA;AACA;AACA,qC;;;;;;AClBA;;AAEA;AACA;AACA,EAAC;AACD;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,qC;;;;;;ACxBA;;AAEA;AACA;AACA,EAAC;AACD;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;AACA;AACA;AACA,qC;;;;;;ACjpB;AACA;AACA,aAAY;AACZ;AACA;AACA,8BAA6B,gBAAgB;AAC7C;AACA;AACA;AACA;AACA,+CAA8C,cAAc;AAC5D;AACA,wC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzHA;;;;;;;ACAA;;AAEA;AACA;AACA,EAAC;;AAED;;AAEA;;AAEA,uCAAsC,uCAAuC,kBAAkB;;AAE/F,sBAAqB;;AAErB;AACA;AACA,EAAC;AACD;AACA;;AAEA;AACA,6B;;;;;;;ACrBA;;AAEA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,GAAE;AACF;AACA;;AAEA;AACA,G;;;;;;ACtBA;;AAEA;AACA;AACA,EAAC;AACD;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;AACA;AACA;AACA,qC;;;;;;ACrBA;;AAEA;AACA;AACA,EAAC;AACD;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;AACA;AACA;AACA,qC;;;;;;ACjBA;;AAEA;AACA;AACA,EAAC;AACD;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;AACA,sCAAqC,wBAAwB,wBAAwB,sBAAsB,sBAAsB,yBAAyB,uBAAuB;AACjL;AACA,qC;;;;;;ACjBA;;AAEA;AACA;AACA,EAAC;AACD;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;ACzBA;;AAEA;AACA;AACA,EAAC;AACD;;AAEA;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;ACxBA;;AAEA;AACA;AACA,EAAC;AACD;;AAEA;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;ACxBA;;AAEA;AACA;AACA,EAAC;AACD;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qC;;;;;;ACrBA;;AAEA;AACA;AACA,EAAC;AACD;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,gBAAgB;;AAE7F;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;ACxBA;;AAEA;AACA;AACA,EAAC;AACD;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;ACzBA;;AAEA;AACA;AACA,EAAC;AACD;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;AACA;AACA;AACA,qC;;;;;;ACjBA;;AAEA;AACA;AACA,EAAC;AACD;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA,8BAA6B,GAAG,SAAS,EAAE,eAAe,GAAG,oCAAoC,EAAE,wBAAwB,GAAG,2BAA2B,GAAG,YAAY,GAAG,4BAA4B,GAAG,mBAAmB,EAAE,IAAI,GAAG,UAAU,GAAG;AACnP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAoC,QAAQ;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;AC5CA;;AAEA;AACA;AACA,EAAC;AACD;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;AACA;AACA;AACA,gDAA+C,IAAI,0CAA0C,EAAE;AAC/F;AACA;AACA,iEAAgE,EAAE;AAClE;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;ACvFA;;AAEA;AACA;AACA,EAAC;AACD;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,gBAAgB;;AAE7F,iDAAgD,0BAA0B,gCAAgC,yBAAyB;;AAEnI;AACA;AACA;AACA;AACA,qC;;;;;;ACnBA;;AAEA;AACA;AACA,EAAC;AACD;;AAEA;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAiD,IAAI;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,qC;;;;;;ACnGA;;AAEA;AACA;AACA,EAAC;AACD;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,gBAAgB;;AAE7F;;AAEA;AACA;AACA;AACA;AACA,qC;;;;;;ACnBA;;AAEA;AACA;AACA,EAAC;AACD;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;AACA;AACA;AACA,qC;;;;;;ACrBA;;AAEA;AACA;AACA,EAAC;AACD;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,gBAAgB;;AAE7F;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;ACvBA;;AAEA;AACA;AACA,EAAC;AACD;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,gBAAgB;;AAE7F,8BAA6B,EAAE,UAAU,EAAE;;AAE3C;AACA;AACA;AACA;AACA,qC;;;;;;ACnBA;;AAEA;AACA;AACA,EAAC;AACD;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,gBAAgB;;AAE7F,8BAA6B,EAAE,QAAQ,GAAG;AAC1C,8BAA6B,GAAG;AAChC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,gBAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;ACxDA;;AAEA;AACA;AACA,EAAC;AACD;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,gBAAgB;;AAE7F,oBAAmB,EAAE,SAAS,EAAE;;AAEhC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,uCAAsC,QAAQ;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,qC;;;;;;AC/CA;;AAEA;AACA;AACA,EAAC;;AAED,qGAAoG,mBAAmB,EAAE,mBAAmB,kGAAkG;;AAE9O;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;AACA;AACA;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,qC;;;;;;ACtCA;;AAEA;AACA;AACA,EAAC;AACD;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,qC;;;;;;AC9BA;;AAEA;AACA;AACA,EAAC;;AAED,qGAAoG,mBAAmB,EAAE,mBAAmB,kGAAkG;;AAE9O;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;AACA;AACA;AACA;AACA,IAAG,YAAY;AACf;AACA;AACA,qC;;;;;;ACxBA;;AAEA;AACA;AACA,EAAC;;AAED,qGAAoG,mBAAmB,EAAE,mBAAmB,kGAAkG;;AAE9O;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;ACjCA;;AAEA;AACA;AACA,EAAC;AACD;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;AACA;AACA;AACA,qC;;;;;;ACjBA;;AAEA;AACA;AACA,EAAC;AACD;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,gBAAgB;;AAE7F,8CAA6C,EAAE;;AAE/C;AACA;AACA;AACA;AACA,qC;;;;;;ACnBA;;AAEA;AACA;AACA,EAAC;AACD;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,gBAAgB;;AAE7F,sBAAqB,GAAG;;AAExB;AACA;AACA;AACA;AACA,qC;;;;;;ACnBA;;AAEA;AACA;AACA,EAAC;AACD;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;AACA,kCAAiC,EAAE;AACnC,iCAAgC,EAAE;AAClC,iCAAgC,EAAE;AAClC,6BAA4B,EAAE,cAAc,EAAE;AAC9C,oCAAmC,EAAE,QAAQ,EAAE,QAAQ,EAAE;AACzD,mCAAkC,EAAE,MAAM,IAAI,oBAAoB,KAAK,6BAA6B,IAAI;AACxG,0BAAyB,EAAE;AAC3B,4BAA2B,EAAE;AAC7B,2BAA0B,EAAE;AAC5B,2BAA0B,EAAE;AAC5B,kCAAiC,EAAE,MAAM,EAAE;AAC3C,gCAA+B,EAAE;AACjC,2BAA0B,IAAI;AAC9B,0BAAyB,EAAE;AAC3B,gCAA+B,EAAE;AACjC,2BAA0B,EAAE,YAAY,EAAE;AAC1C,wDAAuD,IAAI;AAC3D,8BAA6B,EAAE;AAC/B,kCAAiC,EAAE;AACnC,6BAA4B,EAAE,KAAK,IAAI;AACvC,0BAAyB,IAAI,SAAS,IAAI,SAAS,EAAE;AACrD,wBAAuB,EAAE,QAAQ,EAAE,WAAW,IAAI,YAAY,EAAE,WAAW,EAAE;AAC7E,6BAA4B,EAAE;AAC9B,4BAA2B,EAAE;AAC7B,6BAA4B,EAAE;AAC9B,oCAAmC,EAAE,KAAK,EAAE,KAAK,EAAE;AACnD,gCAA+B,EAAE,SAAS,EAAE,GAAG,IAAI,MAAM,EAAE;AAC3D,iCAAgC,EAAE;AAClC,2BAA0B,EAAE;AAC5B,gCAA+B,IAAI;AACnC,4BAA2B,EAAE;AAC7B,6EAA4E,EAAE;AAC9E,uCAAsC,EAAE;AACxC,gCAA+B,EAAE;AACjC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;AC/DA;;AAEA;AACA;AACA,EAAC;AACD;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;AACA;AACA;AACA,qC;;;;;;ACrBA;;AAEA;AACA;AACA,EAAC;AACD;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qC;;;;;;ACrBA;;AAEA;AACA;AACA,EAAC;AACD;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;AACA;AACA;AACA,qC;;;;;;ACjBA;;AAEA;AACA;AACA,EAAC;AACD;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,gBAAgB;;AAE7F;;AAEA;AACA;AACA;AACA;AACA,qC;;;;;;ACnBA;;AAEA;AACA;AACA,EAAC;AACD;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,gBAAgB;;AAE7F;;AAEA;AACA;AACA;AACA;AACA,qC;;;;;;ACnBA;;AAEA;AACA;AACA,EAAC;AACD;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAiB,oBAAoB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qC;;;;;;AC7IA;;AAEA;AACA;AACA,EAAC;AACD;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA,iBAAgB,EAAE,UAAU,EAAE,WAAW,EAAE,UAAU,EAAE,UAAU,GAAG;AACpE,iBAAgB,EAAE,UAAU,EAAE,WAAW,EAAE,gBAAgB,EAAE,UAAU,GAAG;AAC1E,iBAAgB,EAAE,UAAU,EAAE,WAAW,EAAE,gBAAgB,EAAE,UAAU,GAAG;AAC1E,mBAAkB,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,GAAG;AACrE;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,qC;;;;;;AC3BA;;AAEA;AACA;AACA,EAAC;AACD;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;AACA;AACA;AACA,qC;;;;;;ACjBA;;AAEA;AACA;AACA,EAAC;AACD;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;AACA;AACA;AACA,qC;;;;;;ACrBA;;AAEA;AACA;AACA,EAAC;AACD;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;AACA,+BAA8B,QAAQ;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;ACtBA;;AAEA;AACA;AACA,EAAC;AACD;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;ACpBA;;AAEA;AACA;AACA,EAAC;AACD;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,qC;;;;;;AC/CA;;AAEA;AACA;AACA,EAAC;AACD;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;AACA;AACA;AACA;AACA,qC;;;;;;ACtBA;;AAEA;AACA;AACA,EAAC;AACD;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;ACpBA;;AAEA;AACA;AACA,EAAC;AACD;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;AACA;AACA;AACA,qC;;;;;;ACjBA;;AAEA;AACA;AACA,EAAC;AACD;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;AACA;AACA,qC;;;;;;ACpBA;;AAEA;AACA;AACA,EAAC;AACD;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;AACA,gCAA+B,wBAAwB,wBAAwB,sBAAsB,sBAAsB,wBAAwB,uBAAuB;AAC1K;AACA,qC;;;;;;ACjBA;;AAEA;AACA;AACA,EAAC;AACD;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;AACA;AACA;AACA,qC","file":"vendor.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tvar parentJsonpFunction = window[\"webpackJsonp\"];\n \twindow[\"webpackJsonp\"] = function webpackJsonpCallback(chunkIds, moreModules) {\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, callbacks = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId])\n \t\t\t\tcallbacks.push.apply(callbacks, installedChunks[chunkId]);\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules);\n \t\twhile(callbacks.length)\n \t\t\tcallbacks.shift().call(null, __webpack_require__);\n \t\tif(moreModules[0]) {\n \t\t\tinstalledModules[0] = 0;\n \t\t\treturn __webpack_require__(0);\n \t\t}\n \t};\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// \"0\" means \"already loaded\"\n \t// Array means \"loading\", array contains callbacks\n \tvar installedChunks = {\n \t\t0:0\n \t};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId, callback) {\n \t\t// \"0\" is the signal for \"already loaded\"\n \t\tif(installedChunks[chunkId] === 0)\n \t\t\treturn callback.call(null, __webpack_require__);\n\n \t\t// an array means \"currently loading\".\n \t\tif(installedChunks[chunkId] !== undefined) {\n \t\t\tinstalledChunks[chunkId].push(callback);\n \t\t} else {\n \t\t\t// start chunk loading\n \t\t\tinstalledChunks[chunkId] = [callback];\n \t\t\tvar head = document.getElementsByTagName('head')[0];\n \t\t\tvar script = document.createElement('script');\n \t\t\tscript.type = 'text/javascript';\n \t\t\tscript.charset = 'utf-8';\n \t\t\tscript.async = true;\n\n \t\t\tscript.src = __webpack_require__.p + \"\" + chunkId + \".\" + ({\"2\":\"app\"}[chunkId]||chunkId) + \".js\";\n \t\t\thead.appendChild(script);\n \t\t}\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap c5e8fa2fb09a01c8e8f9\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = assertString;\r\nfunction assertString(input) {\r\n  if (typeof input !== 'string') {\r\n    throw new TypeError('This library (validator.js) validates strings only');\r\n  }\r\n}\r\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/lib/util/assertString.js\n ** module id = 1\n ** module chunks = 0\n **/","\"use strict\";\nvar core_1 = require('./core');\nexports.Stream = core_1.Stream;\nexports.MemoryStream = core_1.MemoryStream;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = core_1.Stream;\n//# sourceMappingURL=index.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/xstream/index.js\n ** module id = 2\n ** module chunks = 0\n **/","\"use strict\";\r\n\r\nvar SVGNS = 'http://www.w3.org/2000/svg';\r\nvar modulesNS = ['hook', 'on', 'style', 'class', 'props', 'attrs'];\r\nvar slice = Array.prototype.slice;\r\n\r\nfunction isPrimitive(val) {\r\n  return  typeof val === 'string'   ||\r\n          typeof val === 'number'   ||\r\n          typeof val === 'boolean'  ||\r\n          typeof val === 'symbol'   ||\r\n          val === null              ||\r\n          val === undefined;\r\n}\r\n\r\nfunction normalizeAttrs(attrs, nsURI, defNS, modules) {\r\n  var map = { ns: nsURI };\r\n  for (var i = 0, len = modules.length; i < len; i++) {\r\n    var mod = modules[i];\r\n    if(attrs[mod])\r\n      map[mod] = attrs[mod];\r\n  }\r\n  for(var key in attrs) {\r\n    if(key !== 'key' && key !== 'classNames' && key !== 'selector') {\r\n      var idx = key.indexOf('-');\r\n      if(idx > 0)\r\n        addAttr(key.slice(0, idx), key.slice(idx+1), attrs[key]);\r\n      else if(!map[key])\r\n        addAttr(defNS, key, attrs[key]);\r\n    }\r\n  }\r\n  return map;\r\n\r\n  function addAttr(namespace, key, val) {\r\n    var ns = map[namespace] || (map[namespace] = {});\r\n    ns[key] = val;\r\n  }\r\n}\r\n\r\nfunction buildFromStringTag(nsURI, defNS, modules, tag, attrs, children) {\r\n\r\n  if(attrs.selector) {\r\n    tag = tag + attrs.selector;\r\n  }\r\n  if(attrs.classNames) {\r\n    var cns = attrs.classNames;\r\n    tag = tag + '.' + (\r\n      Array.isArray(cns) ? cns.join('.') : cns.replace(/\\s+/g, '.')\r\n    );\r\n  }\r\n\r\n  return {\r\n    sel       : tag,\r\n    data      : normalizeAttrs(attrs, nsURI, defNS, modules),\r\n    children  : children.map( function(c) {\r\n      return isPrimitive(c) ? {text: c} : c;\r\n    }),\r\n    key: attrs.key\r\n  };\r\n}\r\n\r\nfunction buildFromComponent(nsURI, defNS, modules, tag, attrs, children) {\r\n  var res;\r\n  if(typeof tag === 'function')\r\n    res = tag(attrs, children);\r\n  else if(tag && typeof tag.view === 'function')\r\n    res = tag.view(attrs, children);\r\n  else if(tag && typeof tag.render === 'function')\r\n    res = tag.render(attrs, children);\r\n  else\r\n    throw \"JSX tag must be either a string, a function or an object with 'view' or 'render' methods\";\r\n  res.key = attrs.key;\r\n  return res;\r\n}\r\n\r\nfunction flatten(nested, start, flat) {\r\n  for (var i = start, len = nested.length; i < len; i++) {\r\n    var item = nested[i];\r\n    if (Array.isArray(item)) {\r\n      flatten(item, 0, flat);\r\n    } else {\r\n      flat.push(item);\r\n    }\r\n  }\r\n}\r\n\r\nfunction maybeFlatten(array) {\r\n  if (array) {\r\n    for (var i = 0, len = array.length; i < len; i++) {\r\n      if (Array.isArray(array[i])) {\r\n        var flat = array.slice(0, i);\r\n        flatten(array, i, flat);\r\n        array = flat;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return array;\r\n}\r\n\r\nfunction buildVnode(nsURI, defNS, modules, tag, attrs, children) {\r\n  attrs = attrs || {};\r\n  children = maybeFlatten(children);\r\n  if(typeof tag === 'string') {\r\n    return buildFromStringTag(nsURI, defNS, modules, tag, attrs, children)\r\n  } else {\r\n    return buildFromComponent(nsURI, defNS, modules, tag, attrs, children)\r\n  }\r\n}\r\n\r\nfunction JSX(nsURI, defNS, modules) {\r\n  return function jsxWithCustomNS(tag, attrs, children) {\r\n    if(arguments.length > 3 || !Array.isArray(children))\r\n      children = slice.call(arguments, 2);\r\n    return buildVnode(nsURI, defNS || 'props', modules || modulesNS, tag, attrs, children);\r\n  };\r\n}\r\n\r\nmodule.exports = {\r\n  html: JSX(undefined),\r\n  svg: JSX(SVGNS, 'attrs'),\r\n  JSX: JSX\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/snabbdom-jsx/snabbdom-jsx.js\n ** module id = 3\n ** module chunks = 0\n **/","\"use strict\";\r\nvar counter = 0;\r\nfunction newScope() {\r\n    return \"cycle\" + ++counter;\r\n}\r\nfunction checkIsolateArgs(dataflowComponent, scope) {\r\n    if (typeof dataflowComponent !== \"function\") {\r\n        throw new Error(\"First argument given to isolate() must be a \" +\r\n            \"'dataflowComponent' function\");\r\n    }\r\n    if (scope === null) {\r\n        throw new Error(\"Second argument given to isolate() must not be null\");\r\n    }\r\n}\r\nfunction isolateAllSources(sources, scope) {\r\n    var scopedSources = {};\r\n    for (var key in sources) {\r\n        if (sources.hasOwnProperty(key) && sources[key]\r\n            && typeof sources[key].isolateSource === \"function\") {\r\n            scopedSources[key] = sources[key].isolateSource(sources[key], scope);\r\n        }\r\n        else if (sources.hasOwnProperty(key)) {\r\n            scopedSources[key] = sources[key];\r\n        }\r\n    }\r\n    return scopedSources;\r\n}\r\nfunction isolateAllSinks(sources, sinks, scope) {\r\n    var scopedSinks = {};\r\n    for (var key in sinks) {\r\n        if (sinks.hasOwnProperty(key)\r\n            && sources[key]\r\n            && typeof sources[key].isolateSink === \"function\") {\r\n            scopedSinks[key] = sources[key].isolateSink(sinks[key], scope);\r\n        }\r\n        else if (sinks.hasOwnProperty(key)) {\r\n            scopedSinks[key] = sinks[key];\r\n        }\r\n    }\r\n    return scopedSinks;\r\n}\r\n/**\r\n * Takes a `dataflowComponent` function and an optional `scope` string, and\r\n * returns a scoped version of the `dataflowComponent` function.\r\n *\r\n * When the scoped dataflow component is invoked, each source provided to the\r\n * scoped dataflowComponent is isolated to the scope using\r\n * `source.isolateSource(source, scope)`, if possible. Likewise, the sinks\r\n * returned from the scoped dataflow component are isolate to the scope using\r\n * `source.isolateSink(sink, scope)`.\r\n *\r\n * If the `scope` is not provided, a new scope will be automatically created.\r\n * This means that while **`isolate(dataflowComponent, scope)` is pure**\r\n * (referentially transparent), **`isolate(dataflowComponent)` is impure**\r\n * (not referentially transparent). Two calls to `isolate(Foo, bar)` will\r\n * generate two indistinct dataflow components. But, two calls to `isolate(Foo)`\r\n * will generate two distinct dataflow components.\r\n *\r\n * Note that both `isolateSource()` and `isolateSink()` are static members of\r\n * `source`. The reason for this is that drivers produce `source` while the\r\n * application produces `sink`, and it's the driver's responsibility to\r\n * implement `isolateSource()` and `isolateSink()`.\r\n *\r\n * @param {Function} dataflowComponent a function that takes `sources` as input\r\n * and outputs a collection of `sinks`.\r\n * @param {String} scope an optional string that is used to isolate each\r\n * `sources` and `sinks` when the returned scoped dataflow component is invoked.\r\n * @return {Function} the scoped dataflow component function that, as the\r\n * original `dataflowComponent` function, takes `sources` and returns `sinks`.\r\n * @function isolate\r\n */\r\nfunction isolate(component, scope) {\r\n    if (scope === void 0) { scope = newScope(); }\r\n    checkIsolateArgs(component, scope);\r\n    var convertedScope = typeof scope === 'string' ? scope : scope.toString();\r\n    return function scopedComponent(sources) {\r\n        var rest = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            rest[_i - 1] = arguments[_i];\r\n        }\r\n        var scopedSources = isolateAllSources(sources, convertedScope);\r\n        var sinks = component.apply(void 0, [scopedSources].concat(rest));\r\n        var scopedSinks = isolateAllSinks(sources, sinks, convertedScope);\r\n        return scopedSinks;\r\n    };\r\n}\r\nisolate.reset = function () { return counter = 0; };\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.default = isolate;\r\n//# sourceMappingURL=index.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@cycle/isolate/lib/index.js\n ** module id = 4\n ** module chunks = 0\n **/","//  Ramda v0.22.1\r\n//  https://github.com/ramda/ramda\r\n//  (c) 2013-2016 Scott Sauyet, Michael Hurley, and David Chambers\r\n//  Ramda may be freely distributed under the MIT license.\r\n\r\n;(function() {\r\n\r\n  'use strict';\r\n\r\n  /**\r\n     * A special placeholder value used to specify \"gaps\" within curried functions,\r\n     * allowing partial application of any combination of arguments, regardless of\r\n     * their positions.\r\n     *\r\n     * If `g` is a curried ternary function and `_` is `R.__`, the following are\r\n     * equivalent:\r\n     *\r\n     *   - `g(1, 2, 3)`\r\n     *   - `g(_, 2, 3)(1)`\r\n     *   - `g(_, _, 3)(1)(2)`\r\n     *   - `g(_, _, 3)(1, 2)`\r\n     *   - `g(_, 2, _)(1, 3)`\r\n     *   - `g(_, 2)(1)(3)`\r\n     *   - `g(_, 2)(1, 3)`\r\n     *   - `g(_, 2)(_, 3)(1)`\r\n     *\r\n     * @constant\r\n     * @memberOf R\r\n     * @since v0.6.0\r\n     * @category Function\r\n     * @example\r\n     *\r\n     *      var greet = R.replace('{name}', R.__, 'Hello, {name}!');\r\n     *      greet('Alice'); //=> 'Hello, Alice!'\r\n     */\r\n    var __ = { '@@functional/placeholder': true };\r\n\r\n    /* eslint-disable no-unused-vars */\r\n    var _arity = function _arity(n, fn) {\r\n        /* eslint-disable no-unused-vars */\r\n        switch (n) {\r\n        case 0:\r\n            return function () {\r\n                return fn.apply(this, arguments);\r\n            };\r\n        case 1:\r\n            return function (a0) {\r\n                return fn.apply(this, arguments);\r\n            };\r\n        case 2:\r\n            return function (a0, a1) {\r\n                return fn.apply(this, arguments);\r\n            };\r\n        case 3:\r\n            return function (a0, a1, a2) {\r\n                return fn.apply(this, arguments);\r\n            };\r\n        case 4:\r\n            return function (a0, a1, a2, a3) {\r\n                return fn.apply(this, arguments);\r\n            };\r\n        case 5:\r\n            return function (a0, a1, a2, a3, a4) {\r\n                return fn.apply(this, arguments);\r\n            };\r\n        case 6:\r\n            return function (a0, a1, a2, a3, a4, a5) {\r\n                return fn.apply(this, arguments);\r\n            };\r\n        case 7:\r\n            return function (a0, a1, a2, a3, a4, a5, a6) {\r\n                return fn.apply(this, arguments);\r\n            };\r\n        case 8:\r\n            return function (a0, a1, a2, a3, a4, a5, a6, a7) {\r\n                return fn.apply(this, arguments);\r\n            };\r\n        case 9:\r\n            return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\r\n                return fn.apply(this, arguments);\r\n            };\r\n        case 10:\r\n            return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\r\n                return fn.apply(this, arguments);\r\n            };\r\n        default:\r\n            throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\r\n        }\r\n    };\r\n\r\n    var _arrayFromIterator = function _arrayFromIterator(iter) {\r\n        var list = [];\r\n        var next;\r\n        while (!(next = iter.next()).done) {\r\n            list.push(next.value);\r\n        }\r\n        return list;\r\n    };\r\n\r\n    var _arrayOf = function _arrayOf() {\r\n        return Array.prototype.slice.call(arguments);\r\n    };\r\n\r\n    var _cloneRegExp = function _cloneRegExp(pattern) {\r\n        return new RegExp(pattern.source, (pattern.global ? 'g' : '') + (pattern.ignoreCase ? 'i' : '') + (pattern.multiline ? 'm' : '') + (pattern.sticky ? 'y' : '') + (pattern.unicode ? 'u' : ''));\r\n    };\r\n\r\n    var _complement = function _complement(f) {\r\n        return function () {\r\n            return !f.apply(this, arguments);\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Private `concat` function to merge two array-like objects.\r\n     *\r\n     * @private\r\n     * @param {Array|Arguments} [set1=[]] An array-like object.\r\n     * @param {Array|Arguments} [set2=[]] An array-like object.\r\n     * @return {Array} A new, merged array.\r\n     * @example\r\n     *\r\n     *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\r\n     */\r\n    var _concat = function _concat(set1, set2) {\r\n        set1 = set1 || [];\r\n        set2 = set2 || [];\r\n        var idx;\r\n        var len1 = set1.length;\r\n        var len2 = set2.length;\r\n        var result = [];\r\n        idx = 0;\r\n        while (idx < len1) {\r\n            result[result.length] = set1[idx];\r\n            idx += 1;\r\n        }\r\n        idx = 0;\r\n        while (idx < len2) {\r\n            result[result.length] = set2[idx];\r\n            idx += 1;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    var _containsWith = function _containsWith(pred, x, list) {\r\n        var idx = 0;\r\n        var len = list.length;\r\n        while (idx < len) {\r\n            if (pred(x, list[idx])) {\r\n                return true;\r\n            }\r\n            idx += 1;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    var _filter = function _filter(fn, list) {\r\n        var idx = 0;\r\n        var len = list.length;\r\n        var result = [];\r\n        while (idx < len) {\r\n            if (fn(list[idx])) {\r\n                result[result.length] = list[idx];\r\n            }\r\n            idx += 1;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    var _forceReduced = function _forceReduced(x) {\r\n        return {\r\n            '@@transducer/value': x,\r\n            '@@transducer/reduced': true\r\n        };\r\n    };\r\n\r\n    // String(x => x) evaluates to \"x => x\", so the pattern may not match.\r\n    var _functionName = function _functionName(f) {\r\n        // String(x => x) evaluates to \"x => x\", so the pattern may not match.\r\n        var match = String(f).match(/^function (\\w*)/);\r\n        return match == null ? '' : match[1];\r\n    };\r\n\r\n    var _has = function _has(prop, obj) {\r\n        return Object.prototype.hasOwnProperty.call(obj, prop);\r\n    };\r\n\r\n    var _identity = function _identity(x) {\r\n        return x;\r\n    };\r\n\r\n    var _isArguments = function () {\r\n        var toString = Object.prototype.toString;\r\n        return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {\r\n            return toString.call(x) === '[object Arguments]';\r\n        } : function _isArguments(x) {\r\n            return _has('callee', x);\r\n        };\r\n    }();\r\n\r\n    /**\r\n     * Tests whether or not an object is an array.\r\n     *\r\n     * @private\r\n     * @param {*} val The object to test.\r\n     * @return {Boolean} `true` if `val` is an array, `false` otherwise.\r\n     * @example\r\n     *\r\n     *      _isArray([]); //=> true\r\n     *      _isArray(null); //=> false\r\n     *      _isArray({}); //=> false\r\n     */\r\n    var _isArray = Array.isArray || function _isArray(val) {\r\n        return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\r\n    };\r\n\r\n    var _isFunction = function _isFunction(x) {\r\n        return Object.prototype.toString.call(x) === '[object Function]';\r\n    };\r\n\r\n    /**\r\n     * Determine if the passed argument is an integer.\r\n     *\r\n     * @private\r\n     * @param {*} n\r\n     * @category Type\r\n     * @return {Boolean}\r\n     */\r\n    var _isInteger = Number.isInteger || function _isInteger(n) {\r\n        return n << 0 === n;\r\n    };\r\n\r\n    var _isNumber = function _isNumber(x) {\r\n        return Object.prototype.toString.call(x) === '[object Number]';\r\n    };\r\n\r\n    var _isObject = function _isObject(x) {\r\n        return Object.prototype.toString.call(x) === '[object Object]';\r\n    };\r\n\r\n    var _isPlaceholder = function _isPlaceholder(a) {\r\n        return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;\r\n    };\r\n\r\n    var _isRegExp = function _isRegExp(x) {\r\n        return Object.prototype.toString.call(x) === '[object RegExp]';\r\n    };\r\n\r\n    var _isString = function _isString(x) {\r\n        return Object.prototype.toString.call(x) === '[object String]';\r\n    };\r\n\r\n    var _isTransformer = function _isTransformer(obj) {\r\n        return typeof obj['@@transducer/step'] === 'function';\r\n    };\r\n\r\n    var _map = function _map(fn, functor) {\r\n        var idx = 0;\r\n        var len = functor.length;\r\n        var result = Array(len);\r\n        while (idx < len) {\r\n            result[idx] = fn(functor[idx]);\r\n            idx += 1;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    // Based on https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\r\n    var _objectAssign = function _objectAssign(target) {\r\n        if (target == null) {\r\n            throw new TypeError('Cannot convert undefined or null to object');\r\n        }\r\n        var output = Object(target);\r\n        var idx = 1;\r\n        var length = arguments.length;\r\n        while (idx < length) {\r\n            var source = arguments[idx];\r\n            if (source != null) {\r\n                for (var nextKey in source) {\r\n                    if (_has(nextKey, source)) {\r\n                        output[nextKey] = source[nextKey];\r\n                    }\r\n                }\r\n            }\r\n            idx += 1;\r\n        }\r\n        return output;\r\n    };\r\n\r\n    var _of = function _of(x) {\r\n        return [x];\r\n    };\r\n\r\n    var _pipe = function _pipe(f, g) {\r\n        return function () {\r\n            return g.call(this, f.apply(this, arguments));\r\n        };\r\n    };\r\n\r\n    var _pipeP = function _pipeP(f, g) {\r\n        return function () {\r\n            var ctx = this;\r\n            return f.apply(ctx, arguments).then(function (x) {\r\n                return g.call(ctx, x);\r\n            });\r\n        };\r\n    };\r\n\r\n    // \\b matches word boundary; [\\b] matches backspace\r\n    var _quote = function _quote(s) {\r\n        var escaped = s.replace(/\\\\/g, '\\\\\\\\').replace(/[\\b]/g, '\\\\b')    // \\b matches word boundary; [\\b] matches backspace\r\n    .replace(/\\f/g, '\\\\f').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/\\t/g, '\\\\t').replace(/\\v/g, '\\\\v').replace(/\\0/g, '\\\\0');\r\n        return '\"' + escaped.replace(/\"/g, '\\\\\"') + '\"';\r\n    };\r\n\r\n    var _reduced = function _reduced(x) {\r\n        return x && x['@@transducer/reduced'] ? x : {\r\n            '@@transducer/value': x,\r\n            '@@transducer/reduced': true\r\n        };\r\n    };\r\n\r\n    /**\r\n     * An optimized, private array `slice` implementation.\r\n     *\r\n     * @private\r\n     * @param {Arguments|Array} args The array or arguments object to consider.\r\n     * @param {Number} [from=0] The array index to slice from, inclusive.\r\n     * @param {Number} [to=args.length] The array index to slice to, exclusive.\r\n     * @return {Array} A new, sliced array.\r\n     * @example\r\n     *\r\n     *      _slice([1, 2, 3, 4, 5], 1, 3); //=> [2, 3]\r\n     *\r\n     *      var firstThreeArgs = function(a, b, c, d) {\r\n     *        return _slice(arguments, 0, 3);\r\n     *      };\r\n     *      firstThreeArgs(1, 2, 3, 4); //=> [1, 2, 3]\r\n     */\r\n    var _slice = function _slice(args, from, to) {\r\n        switch (arguments.length) {\r\n        case 1:\r\n            return _slice(args, 0, args.length);\r\n        case 2:\r\n            return _slice(args, from, args.length);\r\n        default:\r\n            var list = [];\r\n            var idx = 0;\r\n            var len = Math.max(0, Math.min(args.length, to) - from);\r\n            while (idx < len) {\r\n                list[idx] = args[from + idx];\r\n                idx += 1;\r\n            }\r\n            return list;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\r\n     */\r\n    var _toISOString = function () {\r\n        var pad = function pad(n) {\r\n            return (n < 10 ? '0' : '') + n;\r\n        };\r\n        return typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {\r\n            return d.toISOString();\r\n        } : function _toISOString(d) {\r\n            return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';\r\n        };\r\n    }();\r\n\r\n    var _xfBase = {\r\n        init: function () {\r\n            return this.xf['@@transducer/init']();\r\n        },\r\n        result: function (result) {\r\n            return this.xf['@@transducer/result'](result);\r\n        }\r\n    };\r\n\r\n    var _xwrap = function () {\r\n        function XWrap(fn) {\r\n            this.f = fn;\r\n        }\r\n        XWrap.prototype['@@transducer/init'] = function () {\r\n            throw new Error('init not implemented on XWrap');\r\n        };\r\n        XWrap.prototype['@@transducer/result'] = function (acc) {\r\n            return acc;\r\n        };\r\n        XWrap.prototype['@@transducer/step'] = function (acc, x) {\r\n            return this.f(acc, x);\r\n        };\r\n        return function _xwrap(fn) {\r\n            return new XWrap(fn);\r\n        };\r\n    }();\r\n\r\n    var _aperture = function _aperture(n, list) {\r\n        var idx = 0;\r\n        var limit = list.length - (n - 1);\r\n        var acc = new Array(limit >= 0 ? limit : 0);\r\n        while (idx < limit) {\r\n            acc[idx] = _slice(list, idx, idx + n);\r\n            idx += 1;\r\n        }\r\n        return acc;\r\n    };\r\n\r\n    var _assign = typeof Object.assign === 'function' ? Object.assign : _objectAssign;\r\n\r\n    /**\r\n     * Similar to hasMethod, this checks whether a function has a [methodname]\r\n     * function. If it isn't an array it will execute that function otherwise it\r\n     * will default to the ramda implementation.\r\n     *\r\n     * @private\r\n     * @param {Function} fn ramda implemtation\r\n     * @param {String} methodname property to check for a custom implementation\r\n     * @return {Object} Whatever the return value of the method is.\r\n     */\r\n    var _checkForMethod = function _checkForMethod(methodname, fn) {\r\n        return function () {\r\n            var length = arguments.length;\r\n            if (length === 0) {\r\n                return fn();\r\n            }\r\n            var obj = arguments[length - 1];\r\n            return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, _slice(arguments, 0, length - 1));\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Optimized internal one-arity curry function.\r\n     *\r\n     * @private\r\n     * @category Function\r\n     * @param {Function} fn The function to curry.\r\n     * @return {Function} The curried function.\r\n     */\r\n    var _curry1 = function _curry1(fn) {\r\n        return function f1(a) {\r\n            if (arguments.length === 0 || _isPlaceholder(a)) {\r\n                return f1;\r\n            } else {\r\n                return fn.apply(this, arguments);\r\n            }\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Optimized internal two-arity curry function.\r\n     *\r\n     * @private\r\n     * @category Function\r\n     * @param {Function} fn The function to curry.\r\n     * @return {Function} The curried function.\r\n     */\r\n    var _curry2 = function _curry2(fn) {\r\n        return function f2(a, b) {\r\n            switch (arguments.length) {\r\n            case 0:\r\n                return f2;\r\n            case 1:\r\n                return _isPlaceholder(a) ? f2 : _curry1(function (_b) {\r\n                    return fn(a, _b);\r\n                });\r\n            default:\r\n                return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {\r\n                    return fn(_a, b);\r\n                }) : _isPlaceholder(b) ? _curry1(function (_b) {\r\n                    return fn(a, _b);\r\n                }) : fn(a, b);\r\n            }\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Optimized internal three-arity curry function.\r\n     *\r\n     * @private\r\n     * @category Function\r\n     * @param {Function} fn The function to curry.\r\n     * @return {Function} The curried function.\r\n     */\r\n    var _curry3 = function _curry3(fn) {\r\n        return function f3(a, b, c) {\r\n            switch (arguments.length) {\r\n            case 0:\r\n                return f3;\r\n            case 1:\r\n                return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {\r\n                    return fn(a, _b, _c);\r\n                });\r\n            case 2:\r\n                return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {\r\n                    return fn(_a, b, _c);\r\n                }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {\r\n                    return fn(a, _b, _c);\r\n                }) : _curry1(function (_c) {\r\n                    return fn(a, b, _c);\r\n                });\r\n            default:\r\n                return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {\r\n                    return fn(_a, _b, c);\r\n                }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {\r\n                    return fn(_a, b, _c);\r\n                }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {\r\n                    return fn(a, _b, _c);\r\n                }) : _isPlaceholder(a) ? _curry1(function (_a) {\r\n                    return fn(_a, b, c);\r\n                }) : _isPlaceholder(b) ? _curry1(function (_b) {\r\n                    return fn(a, _b, c);\r\n                }) : _isPlaceholder(c) ? _curry1(function (_c) {\r\n                    return fn(a, b, _c);\r\n                }) : fn(a, b, c);\r\n            }\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Internal curryN function.\r\n     *\r\n     * @private\r\n     * @category Function\r\n     * @param {Number} length The arity of the curried function.\r\n     * @param {Array} received An array of arguments received thus far.\r\n     * @param {Function} fn The function to curry.\r\n     * @return {Function} The curried function.\r\n     */\r\n    var _curryN = function _curryN(length, received, fn) {\r\n        return function () {\r\n            var combined = [];\r\n            var argsIdx = 0;\r\n            var left = length;\r\n            var combinedIdx = 0;\r\n            while (combinedIdx < received.length || argsIdx < arguments.length) {\r\n                var result;\r\n                if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\r\n                    result = received[combinedIdx];\r\n                } else {\r\n                    result = arguments[argsIdx];\r\n                    argsIdx += 1;\r\n                }\r\n                combined[combinedIdx] = result;\r\n                if (!_isPlaceholder(result)) {\r\n                    left -= 1;\r\n                }\r\n                combinedIdx += 1;\r\n            }\r\n            return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Returns a function that dispatches with different strategies based on the\r\n     * object in list position (last argument). If it is an array, executes [fn].\r\n     * Otherwise, if it has a function with [methodname], it will execute that\r\n     * function (functor case). Otherwise, if it is a transformer, uses transducer\r\n     * [xf] to return a new transformer (transducer case). Otherwise, it will\r\n     * default to executing [fn].\r\n     *\r\n     * @private\r\n     * @param {String} methodname property to check for a custom implementation\r\n     * @param {Function} xf transducer to initialize if object is transformer\r\n     * @param {Function} fn default ramda implementation\r\n     * @return {Function} A function that dispatches on object in list position\r\n     */\r\n    var _dispatchable = function _dispatchable(methodname, xf, fn) {\r\n        return function () {\r\n            var length = arguments.length;\r\n            if (length === 0) {\r\n                return fn();\r\n            }\r\n            var obj = arguments[length - 1];\r\n            if (!_isArray(obj)) {\r\n                var args = _slice(arguments, 0, length - 1);\r\n                if (typeof obj[methodname] === 'function') {\r\n                    return obj[methodname].apply(obj, args);\r\n                }\r\n                if (_isTransformer(obj)) {\r\n                    var transducer = xf.apply(null, args);\r\n                    return transducer(obj);\r\n                }\r\n            }\r\n            return fn.apply(this, arguments);\r\n        };\r\n    };\r\n\r\n    var _dropLastWhile = function dropLastWhile(pred, list) {\r\n        var idx = list.length - 1;\r\n        while (idx >= 0 && pred(list[idx])) {\r\n            idx -= 1;\r\n        }\r\n        return _slice(list, 0, idx + 1);\r\n    };\r\n\r\n    var _xall = function () {\r\n        function XAll(f, xf) {\r\n            this.xf = xf;\r\n            this.f = f;\r\n            this.all = true;\r\n        }\r\n        XAll.prototype['@@transducer/init'] = _xfBase.init;\r\n        XAll.prototype['@@transducer/result'] = function (result) {\r\n            if (this.all) {\r\n                result = this.xf['@@transducer/step'](result, true);\r\n            }\r\n            return this.xf['@@transducer/result'](result);\r\n        };\r\n        XAll.prototype['@@transducer/step'] = function (result, input) {\r\n            if (!this.f(input)) {\r\n                this.all = false;\r\n                result = _reduced(this.xf['@@transducer/step'](result, false));\r\n            }\r\n            return result;\r\n        };\r\n        return _curry2(function _xall(f, xf) {\r\n            return new XAll(f, xf);\r\n        });\r\n    }();\r\n\r\n    var _xany = function () {\r\n        function XAny(f, xf) {\r\n            this.xf = xf;\r\n            this.f = f;\r\n            this.any = false;\r\n        }\r\n        XAny.prototype['@@transducer/init'] = _xfBase.init;\r\n        XAny.prototype['@@transducer/result'] = function (result) {\r\n            if (!this.any) {\r\n                result = this.xf['@@transducer/step'](result, false);\r\n            }\r\n            return this.xf['@@transducer/result'](result);\r\n        };\r\n        XAny.prototype['@@transducer/step'] = function (result, input) {\r\n            if (this.f(input)) {\r\n                this.any = true;\r\n                result = _reduced(this.xf['@@transducer/step'](result, true));\r\n            }\r\n            return result;\r\n        };\r\n        return _curry2(function _xany(f, xf) {\r\n            return new XAny(f, xf);\r\n        });\r\n    }();\r\n\r\n    var _xaperture = function () {\r\n        function XAperture(n, xf) {\r\n            this.xf = xf;\r\n            this.pos = 0;\r\n            this.full = false;\r\n            this.acc = new Array(n);\r\n        }\r\n        XAperture.prototype['@@transducer/init'] = _xfBase.init;\r\n        XAperture.prototype['@@transducer/result'] = function (result) {\r\n            this.acc = null;\r\n            return this.xf['@@transducer/result'](result);\r\n        };\r\n        XAperture.prototype['@@transducer/step'] = function (result, input) {\r\n            this.store(input);\r\n            return this.full ? this.xf['@@transducer/step'](result, this.getCopy()) : result;\r\n        };\r\n        XAperture.prototype.store = function (input) {\r\n            this.acc[this.pos] = input;\r\n            this.pos += 1;\r\n            if (this.pos === this.acc.length) {\r\n                this.pos = 0;\r\n                this.full = true;\r\n            }\r\n        };\r\n        XAperture.prototype.getCopy = function () {\r\n            return _concat(_slice(this.acc, this.pos), _slice(this.acc, 0, this.pos));\r\n        };\r\n        return _curry2(function _xaperture(n, xf) {\r\n            return new XAperture(n, xf);\r\n        });\r\n    }();\r\n\r\n    var _xdrop = function () {\r\n        function XDrop(n, xf) {\r\n            this.xf = xf;\r\n            this.n = n;\r\n        }\r\n        XDrop.prototype['@@transducer/init'] = _xfBase.init;\r\n        XDrop.prototype['@@transducer/result'] = _xfBase.result;\r\n        XDrop.prototype['@@transducer/step'] = function (result, input) {\r\n            if (this.n > 0) {\r\n                this.n -= 1;\r\n                return result;\r\n            }\r\n            return this.xf['@@transducer/step'](result, input);\r\n        };\r\n        return _curry2(function _xdrop(n, xf) {\r\n            return new XDrop(n, xf);\r\n        });\r\n    }();\r\n\r\n    var _xdropLast = function () {\r\n        function XDropLast(n, xf) {\r\n            this.xf = xf;\r\n            this.pos = 0;\r\n            this.full = false;\r\n            this.acc = new Array(n);\r\n        }\r\n        XDropLast.prototype['@@transducer/init'] = _xfBase.init;\r\n        XDropLast.prototype['@@transducer/result'] = function (result) {\r\n            this.acc = null;\r\n            return this.xf['@@transducer/result'](result);\r\n        };\r\n        XDropLast.prototype['@@transducer/step'] = function (result, input) {\r\n            if (this.full) {\r\n                result = this.xf['@@transducer/step'](result, this.acc[this.pos]);\r\n            }\r\n            this.store(input);\r\n            return result;\r\n        };\r\n        XDropLast.prototype.store = function (input) {\r\n            this.acc[this.pos] = input;\r\n            this.pos += 1;\r\n            if (this.pos === this.acc.length) {\r\n                this.pos = 0;\r\n                this.full = true;\r\n            }\r\n        };\r\n        return _curry2(function _xdropLast(n, xf) {\r\n            return new XDropLast(n, xf);\r\n        });\r\n    }();\r\n\r\n    var _xdropRepeatsWith = function () {\r\n        function XDropRepeatsWith(pred, xf) {\r\n            this.xf = xf;\r\n            this.pred = pred;\r\n            this.lastValue = undefined;\r\n            this.seenFirstValue = false;\r\n        }\r\n        XDropRepeatsWith.prototype['@@transducer/init'] = function () {\r\n            return this.xf['@@transducer/init']();\r\n        };\r\n        XDropRepeatsWith.prototype['@@transducer/result'] = function (result) {\r\n            return this.xf['@@transducer/result'](result);\r\n        };\r\n        XDropRepeatsWith.prototype['@@transducer/step'] = function (result, input) {\r\n            var sameAsLast = false;\r\n            if (!this.seenFirstValue) {\r\n                this.seenFirstValue = true;\r\n            } else if (this.pred(this.lastValue, input)) {\r\n                sameAsLast = true;\r\n            }\r\n            this.lastValue = input;\r\n            return sameAsLast ? result : this.xf['@@transducer/step'](result, input);\r\n        };\r\n        return _curry2(function _xdropRepeatsWith(pred, xf) {\r\n            return new XDropRepeatsWith(pred, xf);\r\n        });\r\n    }();\r\n\r\n    var _xdropWhile = function () {\r\n        function XDropWhile(f, xf) {\r\n            this.xf = xf;\r\n            this.f = f;\r\n        }\r\n        XDropWhile.prototype['@@transducer/init'] = _xfBase.init;\r\n        XDropWhile.prototype['@@transducer/result'] = _xfBase.result;\r\n        XDropWhile.prototype['@@transducer/step'] = function (result, input) {\r\n            if (this.f) {\r\n                if (this.f(input)) {\r\n                    return result;\r\n                }\r\n                this.f = null;\r\n            }\r\n            return this.xf['@@transducer/step'](result, input);\r\n        };\r\n        return _curry2(function _xdropWhile(f, xf) {\r\n            return new XDropWhile(f, xf);\r\n        });\r\n    }();\r\n\r\n    var _xfilter = function () {\r\n        function XFilter(f, xf) {\r\n            this.xf = xf;\r\n            this.f = f;\r\n        }\r\n        XFilter.prototype['@@transducer/init'] = _xfBase.init;\r\n        XFilter.prototype['@@transducer/result'] = _xfBase.result;\r\n        XFilter.prototype['@@transducer/step'] = function (result, input) {\r\n            return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;\r\n        };\r\n        return _curry2(function _xfilter(f, xf) {\r\n            return new XFilter(f, xf);\r\n        });\r\n    }();\r\n\r\n    var _xfind = function () {\r\n        function XFind(f, xf) {\r\n            this.xf = xf;\r\n            this.f = f;\r\n            this.found = false;\r\n        }\r\n        XFind.prototype['@@transducer/init'] = _xfBase.init;\r\n        XFind.prototype['@@transducer/result'] = function (result) {\r\n            if (!this.found) {\r\n                result = this.xf['@@transducer/step'](result, void 0);\r\n            }\r\n            return this.xf['@@transducer/result'](result);\r\n        };\r\n        XFind.prototype['@@transducer/step'] = function (result, input) {\r\n            if (this.f(input)) {\r\n                this.found = true;\r\n                result = _reduced(this.xf['@@transducer/step'](result, input));\r\n            }\r\n            return result;\r\n        };\r\n        return _curry2(function _xfind(f, xf) {\r\n            return new XFind(f, xf);\r\n        });\r\n    }();\r\n\r\n    var _xfindIndex = function () {\r\n        function XFindIndex(f, xf) {\r\n            this.xf = xf;\r\n            this.f = f;\r\n            this.idx = -1;\r\n            this.found = false;\r\n        }\r\n        XFindIndex.prototype['@@transducer/init'] = _xfBase.init;\r\n        XFindIndex.prototype['@@transducer/result'] = function (result) {\r\n            if (!this.found) {\r\n                result = this.xf['@@transducer/step'](result, -1);\r\n            }\r\n            return this.xf['@@transducer/result'](result);\r\n        };\r\n        XFindIndex.prototype['@@transducer/step'] = function (result, input) {\r\n            this.idx += 1;\r\n            if (this.f(input)) {\r\n                this.found = true;\r\n                result = _reduced(this.xf['@@transducer/step'](result, this.idx));\r\n            }\r\n            return result;\r\n        };\r\n        return _curry2(function _xfindIndex(f, xf) {\r\n            return new XFindIndex(f, xf);\r\n        });\r\n    }();\r\n\r\n    var _xfindLast = function () {\r\n        function XFindLast(f, xf) {\r\n            this.xf = xf;\r\n            this.f = f;\r\n        }\r\n        XFindLast.prototype['@@transducer/init'] = _xfBase.init;\r\n        XFindLast.prototype['@@transducer/result'] = function (result) {\r\n            return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.last));\r\n        };\r\n        XFindLast.prototype['@@transducer/step'] = function (result, input) {\r\n            if (this.f(input)) {\r\n                this.last = input;\r\n            }\r\n            return result;\r\n        };\r\n        return _curry2(function _xfindLast(f, xf) {\r\n            return new XFindLast(f, xf);\r\n        });\r\n    }();\r\n\r\n    var _xfindLastIndex = function () {\r\n        function XFindLastIndex(f, xf) {\r\n            this.xf = xf;\r\n            this.f = f;\r\n            this.idx = -1;\r\n            this.lastIdx = -1;\r\n        }\r\n        XFindLastIndex.prototype['@@transducer/init'] = _xfBase.init;\r\n        XFindLastIndex.prototype['@@transducer/result'] = function (result) {\r\n            return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.lastIdx));\r\n        };\r\n        XFindLastIndex.prototype['@@transducer/step'] = function (result, input) {\r\n            this.idx += 1;\r\n            if (this.f(input)) {\r\n                this.lastIdx = this.idx;\r\n            }\r\n            return result;\r\n        };\r\n        return _curry2(function _xfindLastIndex(f, xf) {\r\n            return new XFindLastIndex(f, xf);\r\n        });\r\n    }();\r\n\r\n    var _xmap = function () {\r\n        function XMap(f, xf) {\r\n            this.xf = xf;\r\n            this.f = f;\r\n        }\r\n        XMap.prototype['@@transducer/init'] = _xfBase.init;\r\n        XMap.prototype['@@transducer/result'] = _xfBase.result;\r\n        XMap.prototype['@@transducer/step'] = function (result, input) {\r\n            return this.xf['@@transducer/step'](result, this.f(input));\r\n        };\r\n        return _curry2(function _xmap(f, xf) {\r\n            return new XMap(f, xf);\r\n        });\r\n    }();\r\n\r\n    var _xreduceBy = function () {\r\n        function XReduceBy(valueFn, valueAcc, keyFn, xf) {\r\n            this.valueFn = valueFn;\r\n            this.valueAcc = valueAcc;\r\n            this.keyFn = keyFn;\r\n            this.xf = xf;\r\n            this.inputs = {};\r\n        }\r\n        XReduceBy.prototype['@@transducer/init'] = _xfBase.init;\r\n        XReduceBy.prototype['@@transducer/result'] = function (result) {\r\n            var key;\r\n            for (key in this.inputs) {\r\n                if (_has(key, this.inputs)) {\r\n                    result = this.xf['@@transducer/step'](result, this.inputs[key]);\r\n                    if (result['@@transducer/reduced']) {\r\n                        result = result['@@transducer/value'];\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            this.inputs = null;\r\n            return this.xf['@@transducer/result'](result);\r\n        };\r\n        XReduceBy.prototype['@@transducer/step'] = function (result, input) {\r\n            var key = this.keyFn(input);\r\n            this.inputs[key] = this.inputs[key] || [\r\n                key,\r\n                this.valueAcc\r\n            ];\r\n            this.inputs[key][1] = this.valueFn(this.inputs[key][1], input);\r\n            return result;\r\n        };\r\n        return _curryN(4, [], function _xreduceBy(valueFn, valueAcc, keyFn, xf) {\r\n            return new XReduceBy(valueFn, valueAcc, keyFn, xf);\r\n        });\r\n    }();\r\n\r\n    var _xtake = function () {\r\n        function XTake(n, xf) {\r\n            this.xf = xf;\r\n            this.n = n;\r\n            this.i = 0;\r\n        }\r\n        XTake.prototype['@@transducer/init'] = _xfBase.init;\r\n        XTake.prototype['@@transducer/result'] = _xfBase.result;\r\n        XTake.prototype['@@transducer/step'] = function (result, input) {\r\n            this.i += 1;\r\n            var ret = this.n === 0 ? result : this.xf['@@transducer/step'](result, input);\r\n            return this.i >= this.n ? _reduced(ret) : ret;\r\n        };\r\n        return _curry2(function _xtake(n, xf) {\r\n            return new XTake(n, xf);\r\n        });\r\n    }();\r\n\r\n    var _xtakeWhile = function () {\r\n        function XTakeWhile(f, xf) {\r\n            this.xf = xf;\r\n            this.f = f;\r\n        }\r\n        XTakeWhile.prototype['@@transducer/init'] = _xfBase.init;\r\n        XTakeWhile.prototype['@@transducer/result'] = _xfBase.result;\r\n        XTakeWhile.prototype['@@transducer/step'] = function (result, input) {\r\n            return this.f(input) ? this.xf['@@transducer/step'](result, input) : _reduced(result);\r\n        };\r\n        return _curry2(function _xtakeWhile(f, xf) {\r\n            return new XTakeWhile(f, xf);\r\n        });\r\n    }();\r\n\r\n    /**\r\n     * Adds two values.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category Math\r\n     * @sig Number -> Number -> Number\r\n     * @param {Number} a\r\n     * @param {Number} b\r\n     * @return {Number}\r\n     * @see R.subtract\r\n     * @example\r\n     *\r\n     *      R.add(2, 3);       //=>  5\r\n     *      R.add(7)(10);      //=> 17\r\n     */\r\n    var add = _curry2(function add(a, b) {\r\n        return Number(a) + Number(b);\r\n    });\r\n\r\n    /**\r\n     * Applies a function to the value at the given index of an array, returning a\r\n     * new copy of the array with the element at the given index replaced with the\r\n     * result of the function application.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.14.0\r\n     * @category List\r\n     * @sig (a -> a) -> Number -> [a] -> [a]\r\n     * @param {Function} fn The function to apply.\r\n     * @param {Number} idx The index.\r\n     * @param {Array|Arguments} list An array-like object whose value\r\n     *        at the supplied index will be replaced.\r\n     * @return {Array} A copy of the supplied array-like object with\r\n     *         the element at index `idx` replaced with the value\r\n     *         returned by applying `fn` to the existing element.\r\n     * @see R.update\r\n     * @example\r\n     *\r\n     *      R.adjust(R.add(10), 1, [0, 1, 2]);     //=> [0, 11, 2]\r\n     *      R.adjust(R.add(10))(1)([0, 1, 2]);     //=> [0, 11, 2]\r\n     */\r\n    var adjust = _curry3(function adjust(fn, idx, list) {\r\n        if (idx >= list.length || idx < -list.length) {\r\n            return list;\r\n        }\r\n        var start = idx < 0 ? list.length : 0;\r\n        var _idx = start + idx;\r\n        var _list = _concat(list);\r\n        _list[_idx] = fn(list[_idx]);\r\n        return _list;\r\n    });\r\n\r\n    /**\r\n     * Returns `true` if all elements of the list match the predicate, `false` if\r\n     * there are any that don't.\r\n     *\r\n     * Dispatches to the `all` method of the second argument, if present.\r\n     *\r\n     * Acts as a transducer if a transformer is given in list position.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category List\r\n     * @sig (a -> Boolean) -> [a] -> Boolean\r\n     * @param {Function} fn The predicate function.\r\n     * @param {Array} list The array to consider.\r\n     * @return {Boolean} `true` if the predicate is satisfied by every element, `false`\r\n     *         otherwise.\r\n     * @see R.any, R.none, R.transduce\r\n     * @example\r\n     *\r\n     *      var lessThan2 = R.flip(R.lt)(2);\r\n     *      var lessThan3 = R.flip(R.lt)(3);\r\n     *      R.all(lessThan2)([1, 2]); //=> false\r\n     *      R.all(lessThan3)([1, 2]); //=> true\r\n     */\r\n    var all = _curry2(_dispatchable('all', _xall, function all(fn, list) {\r\n        var idx = 0;\r\n        while (idx < list.length) {\r\n            if (!fn(list[idx])) {\r\n                return false;\r\n            }\r\n            idx += 1;\r\n        }\r\n        return true;\r\n    }));\r\n\r\n    /**\r\n     * Returns a function that always returns the given value. Note that for\r\n     * non-primitives the value returned is a reference to the original value.\r\n     *\r\n     * This function is known as `const`, `constant`, or `K` (for K combinator) in\r\n     * other languages and libraries.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category Function\r\n     * @sig a -> (* -> a)\r\n     * @param {*} val The value to wrap in a function\r\n     * @return {Function} A Function :: * -> val.\r\n     * @example\r\n     *\r\n     *      var t = R.always('Tee');\r\n     *      t(); //=> 'Tee'\r\n     */\r\n    var always = _curry1(function always(val) {\r\n        return function () {\r\n            return val;\r\n        };\r\n    });\r\n\r\n    /**\r\n     * Returns `true` if both arguments are `true`; `false` otherwise.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category Logic\r\n     * @sig * -> * -> *\r\n     * @param {Boolean} a A boolean value\r\n     * @param {Boolean} b A boolean value\r\n     * @return {Boolean} `true` if both arguments are `true`, `false` otherwise\r\n     * @see R.both\r\n     * @example\r\n     *\r\n     *      R.and(true, true); //=> true\r\n     *      R.and(true, false); //=> false\r\n     *      R.and(false, true); //=> false\r\n     *      R.and(false, false); //=> false\r\n     */\r\n    var and = _curry2(function and(a, b) {\r\n        return a && b;\r\n    });\r\n\r\n    /**\r\n     * Returns `true` if at least one of elements of the list match the predicate,\r\n     * `false` otherwise.\r\n     *\r\n     * Dispatches to the `any` method of the second argument, if present.\r\n     *\r\n     * Acts as a transducer if a transformer is given in list position.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category List\r\n     * @sig (a -> Boolean) -> [a] -> Boolean\r\n     * @param {Function} fn The predicate function.\r\n     * @param {Array} list The array to consider.\r\n     * @return {Boolean} `true` if the predicate is satisfied by at least one element, `false`\r\n     *         otherwise.\r\n     * @see R.all, R.none, R.transduce\r\n     * @example\r\n     *\r\n     *      var lessThan0 = R.flip(R.lt)(0);\r\n     *      var lessThan2 = R.flip(R.lt)(2);\r\n     *      R.any(lessThan0)([1, 2]); //=> false\r\n     *      R.any(lessThan2)([1, 2]); //=> true\r\n     */\r\n    var any = _curry2(_dispatchable('any', _xany, function any(fn, list) {\r\n        var idx = 0;\r\n        while (idx < list.length) {\r\n            if (fn(list[idx])) {\r\n                return true;\r\n            }\r\n            idx += 1;\r\n        }\r\n        return false;\r\n    }));\r\n\r\n    /**\r\n     * Returns a new list, composed of n-tuples of consecutive elements If `n` is\r\n     * greater than the length of the list, an empty list is returned.\r\n     *\r\n     * Dispatches to the `aperture` method of the second argument, if present.\r\n     *\r\n     * Acts as a transducer if a transformer is given in list position.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.12.0\r\n     * @category List\r\n     * @sig Number -> [a] -> [[a]]\r\n     * @param {Number} n The size of the tuples to create\r\n     * @param {Array} list The list to split into `n`-tuples\r\n     * @return {Array} The new list.\r\n     * @see R.transduce\r\n     * @example\r\n     *\r\n     *      R.aperture(2, [1, 2, 3, 4, 5]); //=> [[1, 2], [2, 3], [3, 4], [4, 5]]\r\n     *      R.aperture(3, [1, 2, 3, 4, 5]); //=> [[1, 2, 3], [2, 3, 4], [3, 4, 5]]\r\n     *      R.aperture(7, [1, 2, 3, 4, 5]); //=> []\r\n     */\r\n    var aperture = _curry2(_dispatchable('aperture', _xaperture, _aperture));\r\n\r\n    /**\r\n     * Returns a new list containing the contents of the given list, followed by\r\n     * the given element.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category List\r\n     * @sig a -> [a] -> [a]\r\n     * @param {*} el The element to add to the end of the new list.\r\n     * @param {Array} list The list whose contents will be added to the beginning of the output\r\n     *        list.\r\n     * @return {Array} A new list containing the contents of the old list followed by `el`.\r\n     * @see R.prepend\r\n     * @example\r\n     *\r\n     *      R.append('tests', ['write', 'more']); //=> ['write', 'more', 'tests']\r\n     *      R.append('tests', []); //=> ['tests']\r\n     *      R.append(['tests'], ['write', 'more']); //=> ['write', 'more', ['tests']]\r\n     */\r\n    var append = _curry2(function append(el, list) {\r\n        return _concat(list, [el]);\r\n    });\r\n\r\n    /**\r\n     * Applies function `fn` to the argument list `args`. This is useful for\r\n     * creating a fixed-arity function from a variadic function. `fn` should be a\r\n     * bound function if context is significant.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.7.0\r\n     * @category Function\r\n     * @sig (*... -> a) -> [*] -> a\r\n     * @param {Function} fn\r\n     * @param {Array} args\r\n     * @return {*}\r\n     * @see R.call, R.unapply\r\n     * @example\r\n     *\r\n     *      var nums = [1, 2, 3, -99, 42, 6, 7];\r\n     *      R.apply(Math.max, nums); //=> 42\r\n     */\r\n    var apply = _curry2(function apply(fn, args) {\r\n        return fn.apply(this, args);\r\n    });\r\n\r\n    /**\r\n     * Makes a shallow clone of an object, setting or overriding the specified\r\n     * property with the given value. Note that this copies and flattens prototype\r\n     * properties onto the new object as well. All non-primitive properties are\r\n     * copied by reference.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.8.0\r\n     * @category Object\r\n     * @sig String -> a -> {k: v} -> {k: v}\r\n     * @param {String} prop the property name to set\r\n     * @param {*} val the new value\r\n     * @param {Object} obj the object to clone\r\n     * @return {Object} a new object similar to the original except for the specified property.\r\n     * @see R.dissoc\r\n     * @example\r\n     *\r\n     *      R.assoc('c', 3, {a: 1, b: 2}); //=> {a: 1, b: 2, c: 3}\r\n     */\r\n    var assoc = _curry3(function assoc(prop, val, obj) {\r\n        var result = {};\r\n        for (var p in obj) {\r\n            result[p] = obj[p];\r\n        }\r\n        result[prop] = val;\r\n        return result;\r\n    });\r\n\r\n    /**\r\n     * Makes a shallow clone of an object, setting or overriding the nodes required\r\n     * to create the given path, and placing the specific value at the tail end of\r\n     * that path. Note that this copies and flattens prototype properties onto the\r\n     * new object as well. All non-primitive properties are copied by reference.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.8.0\r\n     * @category Object\r\n     * @sig [String] -> a -> {k: v} -> {k: v}\r\n     * @param {Array} path the path to set\r\n     * @param {*} val the new value\r\n     * @param {Object} obj the object to clone\r\n     * @return {Object} a new object similar to the original except along the specified path.\r\n     * @see R.dissocPath\r\n     * @example\r\n     *\r\n     *      R.assocPath(['a', 'b', 'c'], 42, {a: {b: {c: 0}}}); //=> {a: {b: {c: 42}}}\r\n     */\r\n    var assocPath = _curry3(function assocPath(path, val, obj) {\r\n        switch (path.length) {\r\n        case 0:\r\n            return val;\r\n        case 1:\r\n            return assoc(path[0], val, obj);\r\n        default:\r\n            return assoc(path[0], assocPath(_slice(path, 1), val, Object(obj[path[0]])), obj);\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Creates a function that is bound to a context.\r\n     * Note: `R.bind` does not provide the additional argument-binding capabilities of\r\n     * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.6.0\r\n     * @category Function\r\n     * @category Object\r\n     * @sig (* -> *) -> {*} -> (* -> *)\r\n     * @param {Function} fn The function to bind to context\r\n     * @param {Object} thisObj The context to bind `fn` to\r\n     * @return {Function} A function that will execute in the context of `thisObj`.\r\n     * @see R.partial\r\n     * @example\r\n     *\r\n     *      var log = R.bind(console.log, console);\r\n     *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\r\n     *      // logs {a: 2}\r\n     */\r\n    var bind = _curry2(function bind(fn, thisObj) {\r\n        return _arity(fn.length, function () {\r\n            return fn.apply(thisObj, arguments);\r\n        });\r\n    });\r\n\r\n    /**\r\n     * Restricts a number to be within a range.\r\n     *\r\n     * Also works for other ordered types such as Strings and Dates.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.20.0\r\n     * @category Relation\r\n     * @sig Ord a => a -> a -> a -> a\r\n     * @param {Number} minimum number\r\n     * @param {Number} maximum number\r\n     * @param {Number} value to be clamped\r\n     * @return {Number} Returns the clamped value\r\n     * @example\r\n     *\r\n     *      R.clamp(1, 10, -1) // => 1\r\n     *      R.clamp(1, 10, 11) // => 10\r\n     *      R.clamp(1, 10, 4)  // => 4\r\n     */\r\n    var clamp = _curry3(function clamp(min, max, value) {\r\n        if (min > max) {\r\n            throw new Error('min must not be greater than max in clamp(min, max, value)');\r\n        }\r\n        return value < min ? min : value > max ? max : value;\r\n    });\r\n\r\n    /**\r\n     * Makes a comparator function out of a function that reports whether the first\r\n     * element is less than the second.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category Function\r\n     * @sig (a, b -> Boolean) -> (a, b -> Number)\r\n     * @param {Function} pred A predicate function of arity two.\r\n     * @return {Function} A Function :: a -> b -> Int that returns `-1` if a < b, `1` if b < a, otherwise `0`.\r\n     * @example\r\n     *\r\n     *      var cmp = R.comparator((a, b) => a.age < b.age);\r\n     *      var people = [\r\n     *        // ...\r\n     *      ];\r\n     *      R.sort(cmp, people);\r\n     */\r\n    var comparator = _curry1(function comparator(pred) {\r\n        return function (a, b) {\r\n            return pred(a, b) ? -1 : pred(b, a) ? 1 : 0;\r\n        };\r\n    });\r\n\r\n    /**\r\n     * Returns a curried equivalent of the provided function, with the specified\r\n     * arity. The curried function has two unusual capabilities. First, its\r\n     * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\r\n     * following are equivalent:\r\n     *\r\n     *   - `g(1)(2)(3)`\r\n     *   - `g(1)(2, 3)`\r\n     *   - `g(1, 2)(3)`\r\n     *   - `g(1, 2, 3)`\r\n     *\r\n     * Secondly, the special placeholder value `R.__` may be used to specify\r\n     * \"gaps\", allowing partial application of any combination of arguments,\r\n     * regardless of their positions. If `g` is as above and `_` is `R.__`, the\r\n     * following are equivalent:\r\n     *\r\n     *   - `g(1, 2, 3)`\r\n     *   - `g(_, 2, 3)(1)`\r\n     *   - `g(_, _, 3)(1)(2)`\r\n     *   - `g(_, _, 3)(1, 2)`\r\n     *   - `g(_, 2)(1)(3)`\r\n     *   - `g(_, 2)(1, 3)`\r\n     *   - `g(_, 2)(_, 3)(1)`\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.5.0\r\n     * @category Function\r\n     * @sig Number -> (* -> a) -> (* -> a)\r\n     * @param {Number} length The arity for the returned function.\r\n     * @param {Function} fn The function to curry.\r\n     * @return {Function} A new, curried function.\r\n     * @see R.curry\r\n     * @example\r\n     *\r\n     *      var sumArgs = (...args) => R.sum(args);\r\n     *\r\n     *      var curriedAddFourNumbers = R.curryN(4, sumArgs);\r\n     *      var f = curriedAddFourNumbers(1, 2);\r\n     *      var g = f(3);\r\n     *      g(4); //=> 10\r\n     */\r\n    var curryN = _curry2(function curryN(length, fn) {\r\n        if (length === 1) {\r\n            return _curry1(fn);\r\n        }\r\n        return _arity(length, _curryN(length, [], fn));\r\n    });\r\n\r\n    /**\r\n     * Decrements its argument.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.9.0\r\n     * @category Math\r\n     * @sig Number -> Number\r\n     * @param {Number} n\r\n     * @return {Number}\r\n     * @see R.inc\r\n     * @example\r\n     *\r\n     *      R.dec(42); //=> 41\r\n     */\r\n    var dec = add(-1);\r\n\r\n    /**\r\n     * Returns the second argument if it is not `null`, `undefined` or `NaN`\r\n     * otherwise the first argument is returned.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.10.0\r\n     * @category Logic\r\n     * @sig a -> b -> a | b\r\n     * @param {a} val The default value.\r\n     * @param {b} val The value to return if it is not null or undefined\r\n     * @return {*} The the second value or the default value\r\n     * @example\r\n     *\r\n     *      var defaultTo42 = R.defaultTo(42);\r\n     *\r\n     *      defaultTo42(null);  //=> 42\r\n     *      defaultTo42(undefined);  //=> 42\r\n     *      defaultTo42('Ramda');  //=> 'Ramda'\r\n     *      defaultTo42(parseInt('string')); //=> 42\r\n     */\r\n    var defaultTo = _curry2(function defaultTo(d, v) {\r\n        return v == null || v !== v ? d : v;\r\n    });\r\n\r\n    /**\r\n     * Finds the set (i.e. no duplicates) of all elements in the first list not\r\n     * contained in the second list. Duplication is determined according to the\r\n     * value returned by applying the supplied predicate to two list elements.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category Relation\r\n     * @sig (a -> a -> Boolean) -> [*] -> [*] -> [*]\r\n     * @param {Function} pred A predicate used to test whether two items are equal.\r\n     * @param {Array} list1 The first list.\r\n     * @param {Array} list2 The second list.\r\n     * @return {Array} The elements in `list1` that are not in `list2`.\r\n     * @see R.difference, R.symmetricDifference, R.symmetricDifferenceWith\r\n     * @example\r\n     *\r\n     *      var cmp = (x, y) => x.a === y.a;\r\n     *      var l1 = [{a: 1}, {a: 2}, {a: 3}];\r\n     *      var l2 = [{a: 3}, {a: 4}];\r\n     *      R.differenceWith(cmp, l1, l2); //=> [{a: 1}, {a: 2}]\r\n     */\r\n    var differenceWith = _curry3(function differenceWith(pred, first, second) {\r\n        var out = [];\r\n        var idx = 0;\r\n        var firstLen = first.length;\r\n        while (idx < firstLen) {\r\n            if (!_containsWith(pred, first[idx], second) && !_containsWith(pred, first[idx], out)) {\r\n                out.push(first[idx]);\r\n            }\r\n            idx += 1;\r\n        }\r\n        return out;\r\n    });\r\n\r\n    /**\r\n     * Returns a new object that does not contain a `prop` property.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.10.0\r\n     * @category Object\r\n     * @sig String -> {k: v} -> {k: v}\r\n     * @param {String} prop the name of the property to dissociate\r\n     * @param {Object} obj the object to clone\r\n     * @return {Object} a new object similar to the original but without the specified property\r\n     * @see R.assoc\r\n     * @example\r\n     *\r\n     *      R.dissoc('b', {a: 1, b: 2, c: 3}); //=> {a: 1, c: 3}\r\n     */\r\n    var dissoc = _curry2(function dissoc(prop, obj) {\r\n        var result = {};\r\n        for (var p in obj) {\r\n            if (p !== prop) {\r\n                result[p] = obj[p];\r\n            }\r\n        }\r\n        return result;\r\n    });\r\n\r\n    /**\r\n     * Makes a shallow clone of an object, omitting the property at the given path.\r\n     * Note that this copies and flattens prototype properties onto the new object\r\n     * as well. All non-primitive properties are copied by reference.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.11.0\r\n     * @category Object\r\n     * @sig [String] -> {k: v} -> {k: v}\r\n     * @param {Array} path the path to set\r\n     * @param {Object} obj the object to clone\r\n     * @return {Object} a new object without the property at path\r\n     * @see R.assocPath\r\n     * @example\r\n     *\r\n     *      R.dissocPath(['a', 'b', 'c'], {a: {b: {c: 42}}}); //=> {a: {b: {}}}\r\n     */\r\n    var dissocPath = _curry2(function dissocPath(path, obj) {\r\n        switch (path.length) {\r\n        case 0:\r\n            return obj;\r\n        case 1:\r\n            return dissoc(path[0], obj);\r\n        default:\r\n            var head = path[0];\r\n            var tail = _slice(path, 1);\r\n            return obj[head] == null ? obj : assoc(head, dissocPath(tail, obj[head]), obj);\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Divides two numbers. Equivalent to `a / b`.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category Math\r\n     * @sig Number -> Number -> Number\r\n     * @param {Number} a The first value.\r\n     * @param {Number} b The second value.\r\n     * @return {Number} The result of `a / b`.\r\n     * @see R.multiply\r\n     * @example\r\n     *\r\n     *      R.divide(71, 100); //=> 0.71\r\n     *\r\n     *      var half = R.divide(R.__, 2);\r\n     *      half(42); //=> 21\r\n     *\r\n     *      var reciprocal = R.divide(1);\r\n     *      reciprocal(4);   //=> 0.25\r\n     */\r\n    var divide = _curry2(function divide(a, b) {\r\n        return a / b;\r\n    });\r\n\r\n    /**\r\n     * Returns a new list excluding the leading elements of a given list which\r\n     * satisfy the supplied predicate function. It passes each value to the supplied\r\n     * predicate function, skipping elements while the predicate function returns\r\n     * `true`. The predicate function is applied to one argument: *(value)*.\r\n     *\r\n     * Dispatches to the `dropWhile` method of the second argument, if present.\r\n     *\r\n     * Acts as a transducer if a transformer is given in list position.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.9.0\r\n     * @category List\r\n     * @sig (a -> Boolean) -> [a] -> [a]\r\n     * @param {Function} fn The function called per iteration.\r\n     * @param {Array} list The collection to iterate over.\r\n     * @return {Array} A new array.\r\n     * @see R.takeWhile, R.transduce, R.addIndex\r\n     * @example\r\n     *\r\n     *      var lteTwo = x => x <= 2;\r\n     *\r\n     *      R.dropWhile(lteTwo, [1, 2, 3, 4, 3, 2, 1]); //=> [3, 4, 3, 2, 1]\r\n     */\r\n    var dropWhile = _curry2(_dispatchable('dropWhile', _xdropWhile, function dropWhile(pred, list) {\r\n        var idx = 0;\r\n        var len = list.length;\r\n        while (idx < len && pred(list[idx])) {\r\n            idx += 1;\r\n        }\r\n        return _slice(list, idx);\r\n    }));\r\n\r\n    /**\r\n     * Returns the empty value of its argument's type. Ramda defines the empty\r\n     * value of Array (`[]`), Object (`{}`), String (`''`), and Arguments. Other\r\n     * types are supported if they define `<Type>.empty` and/or\r\n     * `<Type>.prototype.empty`.\r\n     *\r\n     * Dispatches to the `empty` method of the first argument, if present.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.3.0\r\n     * @category Function\r\n     * @sig a -> a\r\n     * @param {*} x\r\n     * @return {*}\r\n     * @example\r\n     *\r\n     *      R.empty(Just(42));      //=> Nothing()\r\n     *      R.empty([1, 2, 3]);     //=> []\r\n     *      R.empty('unicorns');    //=> ''\r\n     *      R.empty({x: 1, y: 2});  //=> {}\r\n     */\r\n    // else\r\n    var empty = _curry1(function empty(x) {\r\n        return x != null && typeof x.empty === 'function' ? x.empty() : x != null && x.constructor != null && typeof x.constructor.empty === 'function' ? x.constructor.empty() : _isArray(x) ? [] : _isString(x) ? '' : _isObject(x) ? {} : _isArguments(x) ? function () {\r\n            return arguments;\r\n        }() : // else\r\n        void 0;\r\n    });\r\n\r\n    /**\r\n     * Creates a new object by recursively evolving a shallow copy of `object`,\r\n     * according to the `transformation` functions. All non-primitive properties\r\n     * are copied by reference.\r\n     *\r\n     * A `transformation` function will not be invoked if its corresponding key\r\n     * does not exist in the evolved object.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.9.0\r\n     * @category Object\r\n     * @sig {k: (v -> v)} -> {k: v} -> {k: v}\r\n     * @param {Object} transformations The object specifying transformation functions to apply\r\n     *        to the object.\r\n     * @param {Object} object The object to be transformed.\r\n     * @return {Object} The transformed object.\r\n     * @example\r\n     *\r\n     *      var tomato  = {firstName: '  Tomato ', data: {elapsed: 100, remaining: 1400}, id:123};\r\n     *      var transformations = {\r\n     *        firstName: R.trim,\r\n     *        lastName: R.trim, // Will not get invoked.\r\n     *        data: {elapsed: R.add(1), remaining: R.add(-1)}\r\n     *      };\r\n     *      R.evolve(transformations, tomato); //=> {firstName: 'Tomato', data: {elapsed: 101, remaining: 1399}, id:123}\r\n     */\r\n    var evolve = _curry2(function evolve(transformations, object) {\r\n        var result = {};\r\n        var transformation, key, type;\r\n        for (key in object) {\r\n            transformation = transformations[key];\r\n            type = typeof transformation;\r\n            result[key] = type === 'function' ? transformation(object[key]) : type === 'object' ? evolve(transformations[key], object[key]) : object[key];\r\n        }\r\n        return result;\r\n    });\r\n\r\n    /**\r\n     * Returns the first element of the list which matches the predicate, or\r\n     * `undefined` if no element matches.\r\n     *\r\n     * Dispatches to the `find` method of the second argument, if present.\r\n     *\r\n     * Acts as a transducer if a transformer is given in list position.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category List\r\n     * @sig (a -> Boolean) -> [a] -> a | undefined\r\n     * @param {Function} fn The predicate function used to determine if the element is the\r\n     *        desired one.\r\n     * @param {Array} list The array to consider.\r\n     * @return {Object} The element found, or `undefined`.\r\n     * @see R.transduce\r\n     * @example\r\n     *\r\n     *      var xs = [{a: 1}, {a: 2}, {a: 3}];\r\n     *      R.find(R.propEq('a', 2))(xs); //=> {a: 2}\r\n     *      R.find(R.propEq('a', 4))(xs); //=> undefined\r\n     */\r\n    var find = _curry2(_dispatchable('find', _xfind, function find(fn, list) {\r\n        var idx = 0;\r\n        var len = list.length;\r\n        while (idx < len) {\r\n            if (fn(list[idx])) {\r\n                return list[idx];\r\n            }\r\n            idx += 1;\r\n        }\r\n    }));\r\n\r\n    /**\r\n     * Returns the index of the first element of the list which matches the\r\n     * predicate, or `-1` if no element matches.\r\n     *\r\n     * Dispatches to the `findIndex` method of the second argument, if present.\r\n     *\r\n     * Acts as a transducer if a transformer is given in list position.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.1\r\n     * @category List\r\n     * @sig (a -> Boolean) -> [a] -> Number\r\n     * @param {Function} fn The predicate function used to determine if the element is the\r\n     * desired one.\r\n     * @param {Array} list The array to consider.\r\n     * @return {Number} The index of the element found, or `-1`.\r\n     * @see R.transduce\r\n     * @example\r\n     *\r\n     *      var xs = [{a: 1}, {a: 2}, {a: 3}];\r\n     *      R.findIndex(R.propEq('a', 2))(xs); //=> 1\r\n     *      R.findIndex(R.propEq('a', 4))(xs); //=> -1\r\n     */\r\n    var findIndex = _curry2(_dispatchable('findIndex', _xfindIndex, function findIndex(fn, list) {\r\n        var idx = 0;\r\n        var len = list.length;\r\n        while (idx < len) {\r\n            if (fn(list[idx])) {\r\n                return idx;\r\n            }\r\n            idx += 1;\r\n        }\r\n        return -1;\r\n    }));\r\n\r\n    /**\r\n     * Returns the last element of the list which matches the predicate, or\r\n     * `undefined` if no element matches.\r\n     *\r\n     * Dispatches to the `findLast` method of the second argument, if present.\r\n     *\r\n     * Acts as a transducer if a transformer is given in list position.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.1\r\n     * @category List\r\n     * @sig (a -> Boolean) -> [a] -> a | undefined\r\n     * @param {Function} fn The predicate function used to determine if the element is the\r\n     * desired one.\r\n     * @param {Array} list The array to consider.\r\n     * @return {Object} The element found, or `undefined`.\r\n     * @see R.transduce\r\n     * @example\r\n     *\r\n     *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\r\n     *      R.findLast(R.propEq('a', 1))(xs); //=> {a: 1, b: 1}\r\n     *      R.findLast(R.propEq('a', 4))(xs); //=> undefined\r\n     */\r\n    var findLast = _curry2(_dispatchable('findLast', _xfindLast, function findLast(fn, list) {\r\n        var idx = list.length - 1;\r\n        while (idx >= 0) {\r\n            if (fn(list[idx])) {\r\n                return list[idx];\r\n            }\r\n            idx -= 1;\r\n        }\r\n    }));\r\n\r\n    /**\r\n     * Returns the index of the last element of the list which matches the\r\n     * predicate, or `-1` if no element matches.\r\n     *\r\n     * Dispatches to the `findLastIndex` method of the second argument, if present.\r\n     *\r\n     * Acts as a transducer if a transformer is given in list position.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.1\r\n     * @category List\r\n     * @sig (a -> Boolean) -> [a] -> Number\r\n     * @param {Function} fn The predicate function used to determine if the element is the\r\n     * desired one.\r\n     * @param {Array} list The array to consider.\r\n     * @return {Number} The index of the element found, or `-1`.\r\n     * @see R.transduce\r\n     * @example\r\n     *\r\n     *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\r\n     *      R.findLastIndex(R.propEq('a', 1))(xs); //=> 1\r\n     *      R.findLastIndex(R.propEq('a', 4))(xs); //=> -1\r\n     */\r\n    var findLastIndex = _curry2(_dispatchable('findLastIndex', _xfindLastIndex, function findLastIndex(fn, list) {\r\n        var idx = list.length - 1;\r\n        while (idx >= 0) {\r\n            if (fn(list[idx])) {\r\n                return idx;\r\n            }\r\n            idx -= 1;\r\n        }\r\n        return -1;\r\n    }));\r\n\r\n    /**\r\n     * Iterate over an input `list`, calling a provided function `fn` for each\r\n     * element in the list.\r\n     *\r\n     * `fn` receives one argument: *(value)*.\r\n     *\r\n     * Note: `R.forEach` does not skip deleted or unassigned indices (sparse\r\n     * arrays), unlike the native `Array.prototype.forEach` method. For more\r\n     * details on this behavior, see:\r\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#Description\r\n     *\r\n     * Also note that, unlike `Array.prototype.forEach`, Ramda's `forEach` returns\r\n     * the original array. In some libraries this function is named `each`.\r\n     *\r\n     * Dispatches to the `forEach` method of the second argument, if present.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.1\r\n     * @category List\r\n     * @sig (a -> *) -> [a] -> [a]\r\n     * @param {Function} fn The function to invoke. Receives one argument, `value`.\r\n     * @param {Array} list The list to iterate over.\r\n     * @return {Array} The original list.\r\n     * @see R.addIndex\r\n     * @example\r\n     *\r\n     *      var printXPlusFive = x => console.log(x + 5);\r\n     *      R.forEach(printXPlusFive, [1, 2, 3]); //=> [1, 2, 3]\r\n     *      // logs 6\r\n     *      // logs 7\r\n     *      // logs 8\r\n     */\r\n    var forEach = _curry2(_checkForMethod('forEach', function forEach(fn, list) {\r\n        var len = list.length;\r\n        var idx = 0;\r\n        while (idx < len) {\r\n            fn(list[idx]);\r\n            idx += 1;\r\n        }\r\n        return list;\r\n    }));\r\n\r\n    /**\r\n     * Creates a new object from a list key-value pairs. If a key appears in\r\n     * multiple pairs, the rightmost pair is included in the object.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.3.0\r\n     * @category List\r\n     * @sig [[k,v]] -> {k: v}\r\n     * @param {Array} pairs An array of two-element arrays that will be the keys and values of the output object.\r\n     * @return {Object} The object made by pairing up `keys` and `values`.\r\n     * @see R.toPairs, R.pair\r\n     * @example\r\n     *\r\n     *      R.fromPairs([['a', 1], ['b', 2], ['c', 3]]); //=> {a: 1, b: 2, c: 3}\r\n     */\r\n    var fromPairs = _curry1(function fromPairs(pairs) {\r\n        var result = {};\r\n        var idx = 0;\r\n        while (idx < pairs.length) {\r\n            result[pairs[idx][0]] = pairs[idx][1];\r\n            idx += 1;\r\n        }\r\n        return result;\r\n    });\r\n\r\n    /**\r\n     * Takes a list and returns a list of lists where each sublist's elements are\r\n     * all \"equal\" according to the provided equality function.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.21.0\r\n     * @category List\r\n     * @sig ((a, a) → Boolean) → [a] → [[a]]\r\n     * @param {Function} fn Function for determining whether two given (adjacent)\r\n     *        elements should be in the same group\r\n     * @param {Array} list The array to group. Also accepts a string, which will be\r\n     *        treated as a list of characters.\r\n     * @return {List} A list that contains sublists of equal elements,\r\n     *         whose concatenations are equal to the original list.\r\n     * @example\r\n     *\r\n     * R.groupWith(R.equals, [0, 1, 1, 2, 3, 5, 8, 13, 21])\r\n     * //=> [[0], [1, 1], [2], [3], [5], [8], [13], [21]]\r\n     *\r\n     * R.groupWith((a, b) => a % 2 === b % 2, [0, 1, 1, 2, 3, 5, 8, 13, 21])\r\n     * //=> [[0], [1, 1], [2], [3, 5], [8], [13, 21]]\r\n     *\r\n     * R.groupWith(R.eqBy(isVowel), 'aestiou')\r\n     * //=> ['ae', 'st', 'iou']\r\n     */\r\n    var groupWith = _curry2(function (fn, list) {\r\n        var res = [];\r\n        var idx = 0;\r\n        var len = list.length;\r\n        while (idx < len) {\r\n            var nextidx = idx + 1;\r\n            while (nextidx < len && fn(list[idx], list[nextidx])) {\r\n                nextidx += 1;\r\n            }\r\n            res.push(list.slice(idx, nextidx));\r\n            idx = nextidx;\r\n        }\r\n        return res;\r\n    });\r\n\r\n    /**\r\n     * Returns `true` if the first argument is greater than the second; `false`\r\n     * otherwise.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category Relation\r\n     * @sig Ord a => a -> a -> Boolean\r\n     * @param {*} a\r\n     * @param {*} b\r\n     * @return {Boolean}\r\n     * @see R.lt\r\n     * @example\r\n     *\r\n     *      R.gt(2, 1); //=> true\r\n     *      R.gt(2, 2); //=> false\r\n     *      R.gt(2, 3); //=> false\r\n     *      R.gt('a', 'z'); //=> false\r\n     *      R.gt('z', 'a'); //=> true\r\n     */\r\n    var gt = _curry2(function gt(a, b) {\r\n        return a > b;\r\n    });\r\n\r\n    /**\r\n     * Returns `true` if the first argument is greater than or equal to the second;\r\n     * `false` otherwise.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category Relation\r\n     * @sig Ord a => a -> a -> Boolean\r\n     * @param {Number} a\r\n     * @param {Number} b\r\n     * @return {Boolean}\r\n     * @see R.lte\r\n     * @example\r\n     *\r\n     *      R.gte(2, 1); //=> true\r\n     *      R.gte(2, 2); //=> true\r\n     *      R.gte(2, 3); //=> false\r\n     *      R.gte('a', 'z'); //=> false\r\n     *      R.gte('z', 'a'); //=> true\r\n     */\r\n    var gte = _curry2(function gte(a, b) {\r\n        return a >= b;\r\n    });\r\n\r\n    /**\r\n     * Returns whether or not an object has an own property with the specified name\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.7.0\r\n     * @category Object\r\n     * @sig s -> {s: x} -> Boolean\r\n     * @param {String} prop The name of the property to check for.\r\n     * @param {Object} obj The object to query.\r\n     * @return {Boolean} Whether the property exists.\r\n     * @example\r\n     *\r\n     *      var hasName = R.has('name');\r\n     *      hasName({name: 'alice'});   //=> true\r\n     *      hasName({name: 'bob'});     //=> true\r\n     *      hasName({});                //=> false\r\n     *\r\n     *      var point = {x: 0, y: 0};\r\n     *      var pointHas = R.has(R.__, point);\r\n     *      pointHas('x');  //=> true\r\n     *      pointHas('y');  //=> true\r\n     *      pointHas('z');  //=> false\r\n     */\r\n    var has = _curry2(_has);\r\n\r\n    /**\r\n     * Returns whether or not an object or its prototype chain has a property with\r\n     * the specified name\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.7.0\r\n     * @category Object\r\n     * @sig s -> {s: x} -> Boolean\r\n     * @param {String} prop The name of the property to check for.\r\n     * @param {Object} obj The object to query.\r\n     * @return {Boolean} Whether the property exists.\r\n     * @example\r\n     *\r\n     *      function Rectangle(width, height) {\r\n     *        this.width = width;\r\n     *        this.height = height;\r\n     *      }\r\n     *      Rectangle.prototype.area = function() {\r\n     *        return this.width * this.height;\r\n     *      };\r\n     *\r\n     *      var square = new Rectangle(2, 2);\r\n     *      R.hasIn('width', square);  //=> true\r\n     *      R.hasIn('area', square);  //=> true\r\n     */\r\n    var hasIn = _curry2(function hasIn(prop, obj) {\r\n        return prop in obj;\r\n    });\r\n\r\n    /**\r\n     * Returns true if its arguments are identical, false otherwise. Values are\r\n     * identical if they reference the same memory. `NaN` is identical to `NaN`;\r\n     * `0` and `-0` are not identical.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.15.0\r\n     * @category Relation\r\n     * @sig a -> a -> Boolean\r\n     * @param {*} a\r\n     * @param {*} b\r\n     * @return {Boolean}\r\n     * @example\r\n     *\r\n     *      var o = {};\r\n     *      R.identical(o, o); //=> true\r\n     *      R.identical(1, 1); //=> true\r\n     *      R.identical(1, '1'); //=> false\r\n     *      R.identical([], []); //=> false\r\n     *      R.identical(0, -0); //=> false\r\n     *      R.identical(NaN, NaN); //=> true\r\n     */\r\n    // SameValue algorithm\r\n    // Steps 1-5, 7-10\r\n    // Steps 6.b-6.e: +0 != -0\r\n    // Step 6.a: NaN == NaN\r\n    var identical = _curry2(function identical(a, b) {\r\n        // SameValue algorithm\r\n        if (a === b) {\r\n            // Steps 1-5, 7-10\r\n            // Steps 6.b-6.e: +0 != -0\r\n            return a !== 0 || 1 / a === 1 / b;\r\n        } else {\r\n            // Step 6.a: NaN == NaN\r\n            return a !== a && b !== b;\r\n        }\r\n    });\r\n\r\n    /**\r\n     * A function that does nothing but return the parameter supplied to it. Good\r\n     * as a default or placeholder function.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category Function\r\n     * @sig a -> a\r\n     * @param {*} x The value to return.\r\n     * @return {*} The input value, `x`.\r\n     * @example\r\n     *\r\n     *      R.identity(1); //=> 1\r\n     *\r\n     *      var obj = {};\r\n     *      R.identity(obj) === obj; //=> true\r\n     */\r\n    var identity = _curry1(_identity);\r\n\r\n    /**\r\n     * Creates a function that will process either the `onTrue` or the `onFalse`\r\n     * function depending upon the result of the `condition` predicate.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.8.0\r\n     * @category Logic\r\n     * @sig (*... -> Boolean) -> (*... -> *) -> (*... -> *) -> (*... -> *)\r\n     * @param {Function} condition A predicate function\r\n     * @param {Function} onTrue A function to invoke when the `condition` evaluates to a truthy value.\r\n     * @param {Function} onFalse A function to invoke when the `condition` evaluates to a falsy value.\r\n     * @return {Function} A new unary function that will process either the `onTrue` or the `onFalse`\r\n     *                    function depending upon the result of the `condition` predicate.\r\n     * @see R.unless, R.when\r\n     * @example\r\n     *\r\n     *      var incCount = R.ifElse(\r\n     *        R.has('count'),\r\n     *        R.over(R.lensProp('count'), R.inc),\r\n     *        R.assoc('count', 1)\r\n     *      );\r\n     *      incCount({});           //=> { count: 1 }\r\n     *      incCount({ count: 1 }); //=> { count: 2 }\r\n     */\r\n    var ifElse = _curry3(function ifElse(condition, onTrue, onFalse) {\r\n        return curryN(Math.max(condition.length, onTrue.length, onFalse.length), function _ifElse() {\r\n            return condition.apply(this, arguments) ? onTrue.apply(this, arguments) : onFalse.apply(this, arguments);\r\n        });\r\n    });\r\n\r\n    /**\r\n     * Increments its argument.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.9.0\r\n     * @category Math\r\n     * @sig Number -> Number\r\n     * @param {Number} n\r\n     * @return {Number}\r\n     * @see R.dec\r\n     * @example\r\n     *\r\n     *      R.inc(42); //=> 43\r\n     */\r\n    var inc = add(1);\r\n\r\n    /**\r\n     * Inserts the supplied element into the list, at index `index`. _Note that\r\n     * this is not destructive_: it returns a copy of the list with the changes.\r\n     * <small>No lists have been harmed in the application of this function.</small>\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.2.2\r\n     * @category List\r\n     * @sig Number -> a -> [a] -> [a]\r\n     * @param {Number} index The position to insert the element\r\n     * @param {*} elt The element to insert into the Array\r\n     * @param {Array} list The list to insert into\r\n     * @return {Array} A new Array with `elt` inserted at `index`.\r\n     * @example\r\n     *\r\n     *      R.insert(2, 'x', [1,2,3,4]); //=> [1,2,'x',3,4]\r\n     */\r\n    var insert = _curry3(function insert(idx, elt, list) {\r\n        idx = idx < list.length && idx >= 0 ? idx : list.length;\r\n        var result = _slice(list);\r\n        result.splice(idx, 0, elt);\r\n        return result;\r\n    });\r\n\r\n    /**\r\n     * Inserts the sub-list into the list, at index `index`. _Note that this is not\r\n     * destructive_: it returns a copy of the list with the changes.\r\n     * <small>No lists have been harmed in the application of this function.</small>\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.9.0\r\n     * @category List\r\n     * @sig Number -> [a] -> [a] -> [a]\r\n     * @param {Number} index The position to insert the sub-list\r\n     * @param {Array} elts The sub-list to insert into the Array\r\n     * @param {Array} list The list to insert the sub-list into\r\n     * @return {Array} A new Array with `elts` inserted starting at `index`.\r\n     * @example\r\n     *\r\n     *      R.insertAll(2, ['x','y','z'], [1,2,3,4]); //=> [1,2,'x','y','z',3,4]\r\n     */\r\n    var insertAll = _curry3(function insertAll(idx, elts, list) {\r\n        idx = idx < list.length && idx >= 0 ? idx : list.length;\r\n        return _concat(_concat(_slice(list, 0, idx), elts), _slice(list, idx));\r\n    });\r\n\r\n    /**\r\n     * Creates a new list with the separator interposed between elements.\r\n     *\r\n     * Dispatches to the `intersperse` method of the second argument, if present.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.14.0\r\n     * @category List\r\n     * @sig a -> [a] -> [a]\r\n     * @param {*} separator The element to add to the list.\r\n     * @param {Array} list The list to be interposed.\r\n     * @return {Array} The new list.\r\n     * @example\r\n     *\r\n     *      R.intersperse('n', ['ba', 'a', 'a']); //=> ['ba', 'n', 'a', 'n', 'a']\r\n     */\r\n    var intersperse = _curry2(_checkForMethod('intersperse', function intersperse(separator, list) {\r\n        var out = [];\r\n        var idx = 0;\r\n        var length = list.length;\r\n        while (idx < length) {\r\n            if (idx === length - 1) {\r\n                out.push(list[idx]);\r\n            } else {\r\n                out.push(list[idx], separator);\r\n            }\r\n            idx += 1;\r\n        }\r\n        return out;\r\n    }));\r\n\r\n    /**\r\n     * See if an object (`val`) is an instance of the supplied constructor. This\r\n     * function will check up the inheritance chain, if any.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.3.0\r\n     * @category Type\r\n     * @sig (* -> {*}) -> a -> Boolean\r\n     * @param {Object} ctor A constructor\r\n     * @param {*} val The value to test\r\n     * @return {Boolean}\r\n     * @example\r\n     *\r\n     *      R.is(Object, {}); //=> true\r\n     *      R.is(Number, 1); //=> true\r\n     *      R.is(Object, 1); //=> false\r\n     *      R.is(String, 's'); //=> true\r\n     *      R.is(String, new String('')); //=> true\r\n     *      R.is(Object, new String('')); //=> true\r\n     *      R.is(Object, 's'); //=> false\r\n     *      R.is(Number, {}); //=> false\r\n     */\r\n    var is = _curry2(function is(Ctor, val) {\r\n        return val != null && val.constructor === Ctor || val instanceof Ctor;\r\n    });\r\n\r\n    /**\r\n     * Tests whether or not an object is similar to an array.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.5.0\r\n     * @category Type\r\n     * @category List\r\n     * @sig * -> Boolean\r\n     * @param {*} x The object to test.\r\n     * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\r\n     * @example\r\n     *\r\n     *      R.isArrayLike([]); //=> true\r\n     *      R.isArrayLike(true); //=> false\r\n     *      R.isArrayLike({}); //=> false\r\n     *      R.isArrayLike({length: 10}); //=> false\r\n     *      R.isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\r\n     */\r\n    var isArrayLike = _curry1(function isArrayLike(x) {\r\n        if (_isArray(x)) {\r\n            return true;\r\n        }\r\n        if (!x) {\r\n            return false;\r\n        }\r\n        if (typeof x !== 'object') {\r\n            return false;\r\n        }\r\n        if (_isString(x)) {\r\n            return false;\r\n        }\r\n        if (x.nodeType === 1) {\r\n            return !!x.length;\r\n        }\r\n        if (x.length === 0) {\r\n            return true;\r\n        }\r\n        if (x.length > 0) {\r\n            return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\r\n        }\r\n        return false;\r\n    });\r\n\r\n    /**\r\n     * Checks if the input value is `null` or `undefined`.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.9.0\r\n     * @category Type\r\n     * @sig * -> Boolean\r\n     * @param {*} x The value to test.\r\n     * @return {Boolean} `true` if `x` is `undefined` or `null`, otherwise `false`.\r\n     * @example\r\n     *\r\n     *      R.isNil(null); //=> true\r\n     *      R.isNil(undefined); //=> true\r\n     *      R.isNil(0); //=> false\r\n     *      R.isNil([]); //=> false\r\n     */\r\n    var isNil = _curry1(function isNil(x) {\r\n        return x == null;\r\n    });\r\n\r\n    /**\r\n     * Returns a list containing the names of all the enumerable own properties of\r\n     * the supplied object.\r\n     * Note that the order of the output array is not guaranteed to be consistent\r\n     * across different JS platforms.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category Object\r\n     * @sig {k: v} -> [k]\r\n     * @param {Object} obj The object to extract properties from\r\n     * @return {Array} An array of the object's own properties.\r\n     * @example\r\n     *\r\n     *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\r\n     */\r\n    // cover IE < 9 keys issues\r\n    // Safari bug\r\n    var keys = function () {\r\n        // cover IE < 9 keys issues\r\n        var hasEnumBug = !{ toString: null }.propertyIsEnumerable('toString');\r\n        var nonEnumerableProps = [\r\n            'constructor',\r\n            'valueOf',\r\n            'isPrototypeOf',\r\n            'toString',\r\n            'propertyIsEnumerable',\r\n            'hasOwnProperty',\r\n            'toLocaleString'\r\n        ];\r\n        // Safari bug\r\n        var hasArgsEnumBug = function () {\r\n            'use strict';\r\n            return arguments.propertyIsEnumerable('length');\r\n        }();\r\n        var contains = function contains(list, item) {\r\n            var idx = 0;\r\n            while (idx < list.length) {\r\n                if (list[idx] === item) {\r\n                    return true;\r\n                }\r\n                idx += 1;\r\n            }\r\n            return false;\r\n        };\r\n        return typeof Object.keys === 'function' && !hasArgsEnumBug ? _curry1(function keys(obj) {\r\n            return Object(obj) !== obj ? [] : Object.keys(obj);\r\n        }) : _curry1(function keys(obj) {\r\n            if (Object(obj) !== obj) {\r\n                return [];\r\n            }\r\n            var prop, nIdx;\r\n            var ks = [];\r\n            var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\r\n            for (prop in obj) {\r\n                if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\r\n                    ks[ks.length] = prop;\r\n                }\r\n            }\r\n            if (hasEnumBug) {\r\n                nIdx = nonEnumerableProps.length - 1;\r\n                while (nIdx >= 0) {\r\n                    prop = nonEnumerableProps[nIdx];\r\n                    if (_has(prop, obj) && !contains(ks, prop)) {\r\n                        ks[ks.length] = prop;\r\n                    }\r\n                    nIdx -= 1;\r\n                }\r\n            }\r\n            return ks;\r\n        });\r\n    }();\r\n\r\n    /**\r\n     * Returns a list containing the names of all the properties of the supplied\r\n     * object, including prototype properties.\r\n     * Note that the order of the output array is not guaranteed to be consistent\r\n     * across different JS platforms.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.2.0\r\n     * @category Object\r\n     * @sig {k: v} -> [k]\r\n     * @param {Object} obj The object to extract properties from\r\n     * @return {Array} An array of the object's own and prototype properties.\r\n     * @example\r\n     *\r\n     *      var F = function() { this.x = 'X'; };\r\n     *      F.prototype.y = 'Y';\r\n     *      var f = new F();\r\n     *      R.keysIn(f); //=> ['x', 'y']\r\n     */\r\n    var keysIn = _curry1(function keysIn(obj) {\r\n        var prop;\r\n        var ks = [];\r\n        for (prop in obj) {\r\n            ks[ks.length] = prop;\r\n        }\r\n        return ks;\r\n    });\r\n\r\n    /**\r\n     * Returns the number of elements in the array by returning `list.length`.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.3.0\r\n     * @category List\r\n     * @sig [a] -> Number\r\n     * @param {Array} list The array to inspect.\r\n     * @return {Number} The length of the array.\r\n     * @example\r\n     *\r\n     *      R.length([]); //=> 0\r\n     *      R.length([1, 2, 3]); //=> 3\r\n     */\r\n    var length = _curry1(function length(list) {\r\n        return list != null && _isNumber(list.length) ? list.length : NaN;\r\n    });\r\n\r\n    /**\r\n     * Returns `true` if the first argument is less than the second; `false`\r\n     * otherwise.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category Relation\r\n     * @sig Ord a => a -> a -> Boolean\r\n     * @param {*} a\r\n     * @param {*} b\r\n     * @return {Boolean}\r\n     * @see R.gt\r\n     * @example\r\n     *\r\n     *      R.lt(2, 1); //=> false\r\n     *      R.lt(2, 2); //=> false\r\n     *      R.lt(2, 3); //=> true\r\n     *      R.lt('a', 'z'); //=> true\r\n     *      R.lt('z', 'a'); //=> false\r\n     */\r\n    var lt = _curry2(function lt(a, b) {\r\n        return a < b;\r\n    });\r\n\r\n    /**\r\n     * Returns `true` if the first argument is less than or equal to the second;\r\n     * `false` otherwise.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category Relation\r\n     * @sig Ord a => a -> a -> Boolean\r\n     * @param {Number} a\r\n     * @param {Number} b\r\n     * @return {Boolean}\r\n     * @see R.gte\r\n     * @example\r\n     *\r\n     *      R.lte(2, 1); //=> false\r\n     *      R.lte(2, 2); //=> true\r\n     *      R.lte(2, 3); //=> true\r\n     *      R.lte('a', 'z'); //=> true\r\n     *      R.lte('z', 'a'); //=> false\r\n     */\r\n    var lte = _curry2(function lte(a, b) {\r\n        return a <= b;\r\n    });\r\n\r\n    /**\r\n     * The mapAccum function behaves like a combination of map and reduce; it\r\n     * applies a function to each element of a list, passing an accumulating\r\n     * parameter from left to right, and returning a final value of this\r\n     * accumulator together with the new list.\r\n     *\r\n     * The iterator function receives two arguments, *acc* and *value*, and should\r\n     * return a tuple *[acc, value]*.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.10.0\r\n     * @category List\r\n     * @sig (acc -> x -> (acc, y)) -> acc -> [x] -> (acc, [y])\r\n     * @param {Function} fn The function to be called on every element of the input `list`.\r\n     * @param {*} acc The accumulator value.\r\n     * @param {Array} list The list to iterate over.\r\n     * @return {*} The final, accumulated value.\r\n     * @see R.addIndex\r\n     * @example\r\n     *\r\n     *      var digits = ['1', '2', '3', '4'];\r\n     *      var appender = (a, b) => [a + b, a + b];\r\n     *\r\n     *      R.mapAccum(appender, 0, digits); //=> ['01234', ['01', '012', '0123', '01234']]\r\n     */\r\n    var mapAccum = _curry3(function mapAccum(fn, acc, list) {\r\n        var idx = 0;\r\n        var len = list.length;\r\n        var result = [];\r\n        var tuple = [acc];\r\n        while (idx < len) {\r\n            tuple = fn(tuple[0], list[idx]);\r\n            result[idx] = tuple[1];\r\n            idx += 1;\r\n        }\r\n        return [\r\n            tuple[0],\r\n            result\r\n        ];\r\n    });\r\n\r\n    /**\r\n     * The mapAccumRight function behaves like a combination of map and reduce; it\r\n     * applies a function to each element of a list, passing an accumulating\r\n     * parameter from right to left, and returning a final value of this\r\n     * accumulator together with the new list.\r\n     *\r\n     * Similar to `mapAccum`, except moves through the input list from the right to\r\n     * the left.\r\n     *\r\n     * The iterator function receives two arguments, *acc* and *value*, and should\r\n     * return a tuple *[acc, value]*.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.10.0\r\n     * @category List\r\n     * @sig (acc -> x -> (acc, y)) -> acc -> [x] -> (acc, [y])\r\n     * @param {Function} fn The function to be called on every element of the input `list`.\r\n     * @param {*} acc The accumulator value.\r\n     * @param {Array} list The list to iterate over.\r\n     * @return {*} The final, accumulated value.\r\n     * @see R.addIndex\r\n     * @example\r\n     *\r\n     *      var digits = ['1', '2', '3', '4'];\r\n     *      var append = (a, b) => [a + b, a + b];\r\n     *\r\n     *      R.mapAccumRight(append, 0, digits); //=> ['04321', ['04321', '0432', '043', '04']]\r\n     */\r\n    var mapAccumRight = _curry3(function mapAccumRight(fn, acc, list) {\r\n        var idx = list.length - 1;\r\n        var result = [];\r\n        var tuple = [acc];\r\n        while (idx >= 0) {\r\n            tuple = fn(tuple[0], list[idx]);\r\n            result[idx] = tuple[1];\r\n            idx -= 1;\r\n        }\r\n        return [\r\n            tuple[0],\r\n            result\r\n        ];\r\n    });\r\n\r\n    /**\r\n     * Tests a regular expression against a String. Note that this function will\r\n     * return an empty array when there are no matches. This differs from\r\n     * [`String.prototype.match`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match)\r\n     * which returns `null` when there are no matches.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category String\r\n     * @sig RegExp -> String -> [String | Undefined]\r\n     * @param {RegExp} rx A regular expression.\r\n     * @param {String} str The string to match against\r\n     * @return {Array} The list of matches or empty array.\r\n     * @see R.test\r\n     * @example\r\n     *\r\n     *      R.match(/([a-z]a)/g, 'bananas'); //=> ['ba', 'na', 'na']\r\n     *      R.match(/a/, 'b'); //=> []\r\n     *      R.match(/a/, null); //=> TypeError: null does not have a method named \"match\"\r\n     */\r\n    var match = _curry2(function match(rx, str) {\r\n        return str.match(rx) || [];\r\n    });\r\n\r\n    /**\r\n     * mathMod behaves like the modulo operator should mathematically, unlike the\r\n     * `%` operator (and by extension, R.modulo). So while \"-17 % 5\" is -2,\r\n     * mathMod(-17, 5) is 3. mathMod requires Integer arguments, and returns NaN\r\n     * when the modulus is zero or negative.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.3.0\r\n     * @category Math\r\n     * @sig Number -> Number -> Number\r\n     * @param {Number} m The dividend.\r\n     * @param {Number} p the modulus.\r\n     * @return {Number} The result of `b mod a`.\r\n     * @example\r\n     *\r\n     *      R.mathMod(-17, 5);  //=> 3\r\n     *      R.mathMod(17, 5);   //=> 2\r\n     *      R.mathMod(17, -5);  //=> NaN\r\n     *      R.mathMod(17, 0);   //=> NaN\r\n     *      R.mathMod(17.2, 5); //=> NaN\r\n     *      R.mathMod(17, 5.3); //=> NaN\r\n     *\r\n     *      var clock = R.mathMod(R.__, 12);\r\n     *      clock(15); //=> 3\r\n     *      clock(24); //=> 0\r\n     *\r\n     *      var seventeenMod = R.mathMod(17);\r\n     *      seventeenMod(3);  //=> 2\r\n     *      seventeenMod(4);  //=> 1\r\n     *      seventeenMod(10); //=> 7\r\n     */\r\n    var mathMod = _curry2(function mathMod(m, p) {\r\n        if (!_isInteger(m)) {\r\n            return NaN;\r\n        }\r\n        if (!_isInteger(p) || p < 1) {\r\n            return NaN;\r\n        }\r\n        return (m % p + p) % p;\r\n    });\r\n\r\n    /**\r\n     * Returns the larger of its two arguments.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category Relation\r\n     * @sig Ord a => a -> a -> a\r\n     * @param {*} a\r\n     * @param {*} b\r\n     * @return {*}\r\n     * @see R.maxBy, R.min\r\n     * @example\r\n     *\r\n     *      R.max(789, 123); //=> 789\r\n     *      R.max('a', 'b'); //=> 'b'\r\n     */\r\n    var max = _curry2(function max(a, b) {\r\n        return b > a ? b : a;\r\n    });\r\n\r\n    /**\r\n     * Takes a function and two values, and returns whichever value produces the\r\n     * larger result when passed to the provided function.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.8.0\r\n     * @category Relation\r\n     * @sig Ord b => (a -> b) -> a -> a -> a\r\n     * @param {Function} f\r\n     * @param {*} a\r\n     * @param {*} b\r\n     * @return {*}\r\n     * @see R.max, R.minBy\r\n     * @example\r\n     *\r\n     *      //  square :: Number -> Number\r\n     *      var square = n => n * n;\r\n     *\r\n     *      R.maxBy(square, -3, 2); //=> -3\r\n     *\r\n     *      R.reduce(R.maxBy(square), 0, [3, -5, 4, 1, -2]); //=> -5\r\n     *      R.reduce(R.maxBy(square), 0, []); //=> 0\r\n     */\r\n    var maxBy = _curry3(function maxBy(f, a, b) {\r\n        return f(b) > f(a) ? b : a;\r\n    });\r\n\r\n    /**\r\n     * Create a new object with the own properties of the first object merged with\r\n     * the own properties of the second object. If a key exists in both objects,\r\n     * the value from the second object will be used.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category Object\r\n     * @sig {k: v} -> {k: v} -> {k: v}\r\n     * @param {Object} l\r\n     * @param {Object} r\r\n     * @return {Object}\r\n     * @see R.mergeWith, R.mergeWithKey\r\n     * @example\r\n     *\r\n     *      R.merge({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\r\n     *      //=> { 'name': 'fred', 'age': 40 }\r\n     *\r\n     *      var resetToDefault = R.merge(R.__, {x: 0});\r\n     *      resetToDefault({x: 5, y: 2}); //=> {x: 0, y: 2}\r\n     */\r\n    var merge = _curry2(function merge(l, r) {\r\n        return _assign({}, l, r);\r\n    });\r\n\r\n    /**\r\n     * Merges a list of objects together into one object.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.10.0\r\n     * @category List\r\n     * @sig [{k: v}] -> {k: v}\r\n     * @param {Array} list An array of objects\r\n     * @return {Object} A merged object.\r\n     * @see R.reduce\r\n     * @example\r\n     *\r\n     *      R.mergeAll([{foo:1},{bar:2},{baz:3}]); //=> {foo:1,bar:2,baz:3}\r\n     *      R.mergeAll([{foo:1},{foo:2},{bar:2}]); //=> {foo:2,bar:2}\r\n     */\r\n    var mergeAll = _curry1(function mergeAll(list) {\r\n        return _assign.apply(null, [{}].concat(list));\r\n    });\r\n\r\n    /**\r\n     * Creates a new object with the own properties of the two provided objects. If\r\n     * a key exists in both objects, the provided function is applied to the key\r\n     * and the values associated with the key in each object, with the result being\r\n     * used as the value associated with the key in the returned object. The key\r\n     * will be excluded from the returned object if the resulting value is\r\n     * `undefined`.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.19.0\r\n     * @category Object\r\n     * @sig (String -> a -> a -> a) -> {a} -> {a} -> {a}\r\n     * @param {Function} fn\r\n     * @param {Object} l\r\n     * @param {Object} r\r\n     * @return {Object}\r\n     * @see R.merge, R.mergeWith\r\n     * @example\r\n     *\r\n     *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\r\n     *      R.mergeWithKey(concatValues,\r\n     *                     { a: true, thing: 'foo', values: [10, 20] },\r\n     *                     { b: true, thing: 'bar', values: [15, 35] });\r\n     *      //=> { a: true, b: true, thing: 'bar', values: [10, 20, 15, 35] }\r\n     */\r\n    var mergeWithKey = _curry3(function mergeWithKey(fn, l, r) {\r\n        var result = {};\r\n        var k;\r\n        for (k in l) {\r\n            if (_has(k, l)) {\r\n                result[k] = _has(k, r) ? fn(k, l[k], r[k]) : l[k];\r\n            }\r\n        }\r\n        for (k in r) {\r\n            if (_has(k, r) && !_has(k, result)) {\r\n                result[k] = r[k];\r\n            }\r\n        }\r\n        return result;\r\n    });\r\n\r\n    /**\r\n     * Returns the smaller of its two arguments.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category Relation\r\n     * @sig Ord a => a -> a -> a\r\n     * @param {*} a\r\n     * @param {*} b\r\n     * @return {*}\r\n     * @see R.minBy, R.max\r\n     * @example\r\n     *\r\n     *      R.min(789, 123); //=> 123\r\n     *      R.min('a', 'b'); //=> 'a'\r\n     */\r\n    var min = _curry2(function min(a, b) {\r\n        return b < a ? b : a;\r\n    });\r\n\r\n    /**\r\n     * Takes a function and two values, and returns whichever value produces the\r\n     * smaller result when passed to the provided function.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.8.0\r\n     * @category Relation\r\n     * @sig Ord b => (a -> b) -> a -> a -> a\r\n     * @param {Function} f\r\n     * @param {*} a\r\n     * @param {*} b\r\n     * @return {*}\r\n     * @see R.min, R.maxBy\r\n     * @example\r\n     *\r\n     *      //  square :: Number -> Number\r\n     *      var square = n => n * n;\r\n     *\r\n     *      R.minBy(square, -3, 2); //=> 2\r\n     *\r\n     *      R.reduce(R.minBy(square), Infinity, [3, -5, 4, 1, -2]); //=> 1\r\n     *      R.reduce(R.minBy(square), Infinity, []); //=> Infinity\r\n     */\r\n    var minBy = _curry3(function minBy(f, a, b) {\r\n        return f(b) < f(a) ? b : a;\r\n    });\r\n\r\n    /**\r\n     * Divides the first parameter by the second and returns the remainder. Note\r\n     * that this function preserves the JavaScript-style behavior for modulo. For\r\n     * mathematical modulo see `mathMod`.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.1\r\n     * @category Math\r\n     * @sig Number -> Number -> Number\r\n     * @param {Number} a The value to the divide.\r\n     * @param {Number} b The pseudo-modulus\r\n     * @return {Number} The result of `b % a`.\r\n     * @see R.mathMod\r\n     * @example\r\n     *\r\n     *      R.modulo(17, 3); //=> 2\r\n     *      // JS behavior:\r\n     *      R.modulo(-17, 3); //=> -2\r\n     *      R.modulo(17, -3); //=> 2\r\n     *\r\n     *      var isOdd = R.modulo(R.__, 2);\r\n     *      isOdd(42); //=> 0\r\n     *      isOdd(21); //=> 1\r\n     */\r\n    var modulo = _curry2(function modulo(a, b) {\r\n        return a % b;\r\n    });\r\n\r\n    /**\r\n     * Multiplies two numbers. Equivalent to `a * b` but curried.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category Math\r\n     * @sig Number -> Number -> Number\r\n     * @param {Number} a The first value.\r\n     * @param {Number} b The second value.\r\n     * @return {Number} The result of `a * b`.\r\n     * @see R.divide\r\n     * @example\r\n     *\r\n     *      var double = R.multiply(2);\r\n     *      var triple = R.multiply(3);\r\n     *      double(3);       //=>  6\r\n     *      triple(4);       //=> 12\r\n     *      R.multiply(2, 5);  //=> 10\r\n     */\r\n    var multiply = _curry2(function multiply(a, b) {\r\n        return a * b;\r\n    });\r\n\r\n    /**\r\n     * Wraps a function of any arity (including nullary) in a function that accepts\r\n     * exactly `n` parameters. Any extraneous parameters will not be passed to the\r\n     * supplied function.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category Function\r\n     * @sig Number -> (* -> a) -> (* -> a)\r\n     * @param {Number} n The desired arity of the new function.\r\n     * @param {Function} fn The function to wrap.\r\n     * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\r\n     *         arity `n`.\r\n     * @example\r\n     *\r\n     *      var takesTwoArgs = (a, b) => [a, b];\r\n     *\r\n     *      takesTwoArgs.length; //=> 2\r\n     *      takesTwoArgs(1, 2); //=> [1, 2]\r\n     *\r\n     *      var takesOneArg = R.nAry(1, takesTwoArgs);\r\n     *      takesOneArg.length; //=> 1\r\n     *      // Only `n` arguments are passed to the wrapped function\r\n     *      takesOneArg(1, 2); //=> [1, undefined]\r\n     */\r\n    var nAry = _curry2(function nAry(n, fn) {\r\n        switch (n) {\r\n        case 0:\r\n            return function () {\r\n                return fn.call(this);\r\n            };\r\n        case 1:\r\n            return function (a0) {\r\n                return fn.call(this, a0);\r\n            };\r\n        case 2:\r\n            return function (a0, a1) {\r\n                return fn.call(this, a0, a1);\r\n            };\r\n        case 3:\r\n            return function (a0, a1, a2) {\r\n                return fn.call(this, a0, a1, a2);\r\n            };\r\n        case 4:\r\n            return function (a0, a1, a2, a3) {\r\n                return fn.call(this, a0, a1, a2, a3);\r\n            };\r\n        case 5:\r\n            return function (a0, a1, a2, a3, a4) {\r\n                return fn.call(this, a0, a1, a2, a3, a4);\r\n            };\r\n        case 6:\r\n            return function (a0, a1, a2, a3, a4, a5) {\r\n                return fn.call(this, a0, a1, a2, a3, a4, a5);\r\n            };\r\n        case 7:\r\n            return function (a0, a1, a2, a3, a4, a5, a6) {\r\n                return fn.call(this, a0, a1, a2, a3, a4, a5, a6);\r\n            };\r\n        case 8:\r\n            return function (a0, a1, a2, a3, a4, a5, a6, a7) {\r\n                return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7);\r\n            };\r\n        case 9:\r\n            return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\r\n                return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8);\r\n            };\r\n        case 10:\r\n            return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\r\n                return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);\r\n            };\r\n        default:\r\n            throw new Error('First argument to nAry must be a non-negative integer no greater than ten');\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Negates its argument.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.9.0\r\n     * @category Math\r\n     * @sig Number -> Number\r\n     * @param {Number} n\r\n     * @return {Number}\r\n     * @example\r\n     *\r\n     *      R.negate(42); //=> -42\r\n     */\r\n    var negate = _curry1(function negate(n) {\r\n        return -n;\r\n    });\r\n\r\n    /**\r\n     * Returns `true` if no elements of the list match the predicate, `false`\r\n     * otherwise.\r\n     *\r\n     * Dispatches to the `any` method of the second argument, if present.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.12.0\r\n     * @category List\r\n     * @sig (a -> Boolean) -> [a] -> Boolean\r\n     * @param {Function} fn The predicate function.\r\n     * @param {Array} list The array to consider.\r\n     * @return {Boolean} `true` if the predicate is not satisfied by every element, `false` otherwise.\r\n     * @see R.all, R.any\r\n     * @example\r\n     *\r\n     *      var isEven = n => n % 2 === 0;\r\n     *\r\n     *      R.none(isEven, [1, 3, 5, 7, 9, 11]); //=> true\r\n     *      R.none(isEven, [1, 3, 5, 7, 8, 11]); //=> false\r\n     */\r\n    var none = _curry2(_complement(_dispatchable('any', _xany, any)));\r\n\r\n    /**\r\n     * A function that returns the `!` of its argument. It will return `true` when\r\n     * passed false-y value, and `false` when passed a truth-y one.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category Logic\r\n     * @sig * -> Boolean\r\n     * @param {*} a any value\r\n     * @return {Boolean} the logical inverse of passed argument.\r\n     * @see R.complement\r\n     * @example\r\n     *\r\n     *      R.not(true); //=> false\r\n     *      R.not(false); //=> true\r\n     *      R.not(0); //=> true\r\n     *      R.not(1); //=> false\r\n     */\r\n    var not = _curry1(function not(a) {\r\n        return !a;\r\n    });\r\n\r\n    /**\r\n     * Returns the nth element of the given list or string. If n is negative the\r\n     * element at index length + n is returned.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category List\r\n     * @sig Number -> [a] -> a | Undefined\r\n     * @sig Number -> String -> String\r\n     * @param {Number} offset\r\n     * @param {*} list\r\n     * @return {*}\r\n     * @example\r\n     *\r\n     *      var list = ['foo', 'bar', 'baz', 'quux'];\r\n     *      R.nth(1, list); //=> 'bar'\r\n     *      R.nth(-1, list); //=> 'quux'\r\n     *      R.nth(-99, list); //=> undefined\r\n     *\r\n     *      R.nth(2, 'abc'); //=> 'c'\r\n     *      R.nth(3, 'abc'); //=> ''\r\n     */\r\n    var nth = _curry2(function nth(offset, list) {\r\n        var idx = offset < 0 ? list.length + offset : offset;\r\n        return _isString(list) ? list.charAt(idx) : list[idx];\r\n    });\r\n\r\n    /**\r\n     * Returns a function which returns its nth argument.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.9.0\r\n     * @category Function\r\n     * @sig Number -> *... -> *\r\n     * @param {Number} n\r\n     * @return {Function}\r\n     * @example\r\n     *\r\n     *      R.nthArg(1)('a', 'b', 'c'); //=> 'b'\r\n     *      R.nthArg(-1)('a', 'b', 'c'); //=> 'c'\r\n     */\r\n    var nthArg = _curry1(function nthArg(n) {\r\n        var arity = n < 0 ? 1 : n + 1;\r\n        return curryN(arity, function () {\r\n            return nth(n, arguments);\r\n        });\r\n    });\r\n\r\n    /**\r\n     * Creates an object containing a single key:value pair.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.18.0\r\n     * @category Object\r\n     * @sig String -> a -> {String:a}\r\n     * @param {String} key\r\n     * @param {*} val\r\n     * @return {Object}\r\n     * @see R.pair\r\n     * @example\r\n     *\r\n     *      var matchPhrases = R.compose(\r\n     *        R.objOf('must'),\r\n     *        R.map(R.objOf('match_phrase'))\r\n     *      );\r\n     *      matchPhrases(['foo', 'bar', 'baz']); //=> {must: [{match_phrase: 'foo'}, {match_phrase: 'bar'}, {match_phrase: 'baz'}]}\r\n     */\r\n    var objOf = _curry2(function objOf(key, val) {\r\n        var obj = {};\r\n        obj[key] = val;\r\n        return obj;\r\n    });\r\n\r\n    /**\r\n     * Returns a singleton array containing the value provided.\r\n     *\r\n     * Note this `of` is different from the ES6 `of`; See\r\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.3.0\r\n     * @category Function\r\n     * @sig a -> [a]\r\n     * @param {*} x any value\r\n     * @return {Array} An array wrapping `x`.\r\n     * @example\r\n     *\r\n     *      R.of(null); //=> [null]\r\n     *      R.of([42]); //=> [[42]]\r\n     */\r\n    var of = _curry1(_of);\r\n\r\n    /**\r\n     * Accepts a function `fn` and returns a function that guards invocation of\r\n     * `fn` such that `fn` can only ever be called once, no matter how many times\r\n     * the returned function is invoked. The first value calculated is returned in\r\n     * subsequent invocations.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category Function\r\n     * @sig (a... -> b) -> (a... -> b)\r\n     * @param {Function} fn The function to wrap in a call-only-once wrapper.\r\n     * @return {Function} The wrapped function.\r\n     * @example\r\n     *\r\n     *      var addOneOnce = R.once(x => x + 1);\r\n     *      addOneOnce(10); //=> 11\r\n     *      addOneOnce(addOneOnce(50)); //=> 11\r\n     */\r\n    var once = _curry1(function once(fn) {\r\n        var called = false;\r\n        var result;\r\n        return _arity(fn.length, function () {\r\n            if (called) {\r\n                return result;\r\n            }\r\n            called = true;\r\n            result = fn.apply(this, arguments);\r\n            return result;\r\n        });\r\n    });\r\n\r\n    /**\r\n     * Returns `true` if one or both of its arguments are `true`. Returns `false`\r\n     * if both arguments are `false`.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category Logic\r\n     * @sig * -> * -> *\r\n     * @param {Boolean} a A boolean value\r\n     * @param {Boolean} b A boolean value\r\n     * @return {Boolean} `true` if one or both arguments are `true`, `false` otherwise\r\n     * @see R.either\r\n     * @example\r\n     *\r\n     *      R.or(true, true); //=> true\r\n     *      R.or(true, false); //=> true\r\n     *      R.or(false, true); //=> true\r\n     *      R.or(false, false); //=> false\r\n     */\r\n    var or = _curry2(function or(a, b) {\r\n        return a || b;\r\n    });\r\n\r\n    /**\r\n     * Returns the result of \"setting\" the portion of the given data structure\r\n     * focused by the given lens to the result of applying the given function to\r\n     * the focused value.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.16.0\r\n     * @category Object\r\n     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\r\n     * @sig Lens s a -> (a -> a) -> s -> s\r\n     * @param {Lens} lens\r\n     * @param {*} v\r\n     * @param {*} x\r\n     * @return {*}\r\n     * @see R.prop, R.lensIndex, R.lensProp\r\n     * @example\r\n     *\r\n     *      var headLens = R.lensIndex(0);\r\n     *\r\n     *      R.over(headLens, R.toUpper, ['foo', 'bar', 'baz']); //=> ['FOO', 'bar', 'baz']\r\n     */\r\n    // `Identity` is a functor that holds a single value, where `map` simply\r\n    // transforms the held value with the provided function.\r\n    // The value returned by the getter function is first transformed with `f`,\r\n    // then set as the value of an `Identity`. This is then mapped over with the\r\n    // setter function of the lens.\r\n    var over = function () {\r\n        // `Identity` is a functor that holds a single value, where `map` simply\r\n        // transforms the held value with the provided function.\r\n        var Identity = function (x) {\r\n            return {\r\n                value: x,\r\n                map: function (f) {\r\n                    return Identity(f(x));\r\n                }\r\n            };\r\n        };\r\n        return _curry3(function over(lens, f, x) {\r\n            // The value returned by the getter function is first transformed with `f`,\r\n            // then set as the value of an `Identity`. This is then mapped over with the\r\n            // setter function of the lens.\r\n            return lens(function (y) {\r\n                return Identity(f(y));\r\n            })(x).value;\r\n        });\r\n    }();\r\n\r\n    /**\r\n     * Takes two arguments, `fst` and `snd`, and returns `[fst, snd]`.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.18.0\r\n     * @category List\r\n     * @sig a -> b -> (a,b)\r\n     * @param {*} fst\r\n     * @param {*} snd\r\n     * @return {Array}\r\n     * @see R.objOf, R.of\r\n     * @example\r\n     *\r\n     *      R.pair('foo', 'bar'); //=> ['foo', 'bar']\r\n     */\r\n    var pair = _curry2(function pair(fst, snd) {\r\n        return [\r\n            fst,\r\n            snd\r\n        ];\r\n    });\r\n\r\n    /**\r\n     * Retrieve the value at a given path.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.2.0\r\n     * @category Object\r\n     * @sig [String] -> {k: v} -> v | Undefined\r\n     * @param {Array} path The path to use.\r\n     * @param {Object} obj The object to retrieve the nested property from.\r\n     * @return {*} The data at `path`.\r\n     * @see R.prop\r\n     * @example\r\n     *\r\n     *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\r\n     *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\r\n     */\r\n    var path = _curry2(function path(paths, obj) {\r\n        var val = obj;\r\n        var idx = 0;\r\n        while (idx < paths.length) {\r\n            if (val == null) {\r\n                return;\r\n            }\r\n            val = val[paths[idx]];\r\n            idx += 1;\r\n        }\r\n        return val;\r\n    });\r\n\r\n    /**\r\n     * If the given, non-null object has a value at the given path, returns the\r\n     * value at that path. Otherwise returns the provided default value.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.18.0\r\n     * @category Object\r\n     * @sig a -> [String] -> Object -> a\r\n     * @param {*} d The default value.\r\n     * @param {Array} p The path to use.\r\n     * @param {Object} obj The object to retrieve the nested property from.\r\n     * @return {*} The data at `path` of the supplied object or the default value.\r\n     * @example\r\n     *\r\n     *      R.pathOr('N/A', ['a', 'b'], {a: {b: 2}}); //=> 2\r\n     *      R.pathOr('N/A', ['a', 'b'], {c: {b: 2}}); //=> \"N/A\"\r\n     */\r\n    var pathOr = _curry3(function pathOr(d, p, obj) {\r\n        return defaultTo(d, path(p, obj));\r\n    });\r\n\r\n    /**\r\n     * Returns `true` if the specified object property at given path satisfies the\r\n     * given predicate; `false` otherwise.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.19.0\r\n     * @category Logic\r\n     * @sig (a -> Boolean) -> [String] -> Object -> Boolean\r\n     * @param {Function} pred\r\n     * @param {Array} propPath\r\n     * @param {*} obj\r\n     * @return {Boolean}\r\n     * @see R.propSatisfies, R.path\r\n     * @example\r\n     *\r\n     *      R.pathSatisfies(y => y > 0, ['x', 'y'], {x: {y: 2}}); //=> true\r\n     */\r\n    var pathSatisfies = _curry3(function pathSatisfies(pred, propPath, obj) {\r\n        return propPath.length > 0 && pred(path(propPath, obj));\r\n    });\r\n\r\n    /**\r\n     * Returns a partial copy of an object containing only the keys specified. If\r\n     * the key does not exist, the property is ignored.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category Object\r\n     * @sig [k] -> {k: v} -> {k: v}\r\n     * @param {Array} names an array of String property names to copy onto a new object\r\n     * @param {Object} obj The object to copy from\r\n     * @return {Object} A new object with only properties from `names` on it.\r\n     * @see R.omit, R.props\r\n     * @example\r\n     *\r\n     *      R.pick(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\r\n     *      R.pick(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1}\r\n     */\r\n    var pick = _curry2(function pick(names, obj) {\r\n        var result = {};\r\n        var idx = 0;\r\n        while (idx < names.length) {\r\n            if (names[idx] in obj) {\r\n                result[names[idx]] = obj[names[idx]];\r\n            }\r\n            idx += 1;\r\n        }\r\n        return result;\r\n    });\r\n\r\n    /**\r\n     * Similar to `pick` except that this one includes a `key: undefined` pair for\r\n     * properties that don't exist.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category Object\r\n     * @sig [k] -> {k: v} -> {k: v}\r\n     * @param {Array} names an array of String property names to copy onto a new object\r\n     * @param {Object} obj The object to copy from\r\n     * @return {Object} A new object with only properties from `names` on it.\r\n     * @see R.pick\r\n     * @example\r\n     *\r\n     *      R.pickAll(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\r\n     *      R.pickAll(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, e: undefined, f: undefined}\r\n     */\r\n    var pickAll = _curry2(function pickAll(names, obj) {\r\n        var result = {};\r\n        var idx = 0;\r\n        var len = names.length;\r\n        while (idx < len) {\r\n            var name = names[idx];\r\n            result[name] = obj[name];\r\n            idx += 1;\r\n        }\r\n        return result;\r\n    });\r\n\r\n    /**\r\n     * Returns a partial copy of an object containing only the keys that satisfy\r\n     * the supplied predicate.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.8.0\r\n     * @category Object\r\n     * @sig (v, k -> Boolean) -> {k: v} -> {k: v}\r\n     * @param {Function} pred A predicate to determine whether or not a key\r\n     *        should be included on the output object.\r\n     * @param {Object} obj The object to copy from\r\n     * @return {Object} A new object with only properties that satisfy `pred`\r\n     *         on it.\r\n     * @see R.pick, R.filter\r\n     * @example\r\n     *\r\n     *      var isUpperCase = (val, key) => key.toUpperCase() === key;\r\n     *      R.pickBy(isUpperCase, {a: 1, b: 2, A: 3, B: 4}); //=> {A: 3, B: 4}\r\n     */\r\n    var pickBy = _curry2(function pickBy(test, obj) {\r\n        var result = {};\r\n        for (var prop in obj) {\r\n            if (test(obj[prop], prop, obj)) {\r\n                result[prop] = obj[prop];\r\n            }\r\n        }\r\n        return result;\r\n    });\r\n\r\n    /**\r\n     * Returns a new list with the given element at the front, followed by the\r\n     * contents of the list.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category List\r\n     * @sig a -> [a] -> [a]\r\n     * @param {*} el The item to add to the head of the output list.\r\n     * @param {Array} list The array to add to the tail of the output list.\r\n     * @return {Array} A new array.\r\n     * @see R.append\r\n     * @example\r\n     *\r\n     *      R.prepend('fee', ['fi', 'fo', 'fum']); //=> ['fee', 'fi', 'fo', 'fum']\r\n     */\r\n    var prepend = _curry2(function prepend(el, list) {\r\n        return _concat([el], list);\r\n    });\r\n\r\n    /**\r\n     * Returns a function that when supplied an object returns the indicated\r\n     * property of that object, if it exists.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category Object\r\n     * @sig s -> {s: a} -> a | Undefined\r\n     * @param {String} p The property name\r\n     * @param {Object} obj The object to query\r\n     * @return {*} The value at `obj.p`.\r\n     * @see R.path\r\n     * @example\r\n     *\r\n     *      R.prop('x', {x: 100}); //=> 100\r\n     *      R.prop('x', {}); //=> undefined\r\n     */\r\n    var prop = _curry2(function prop(p, obj) {\r\n        return obj[p];\r\n    });\r\n\r\n    /**\r\n     * Returns `true` if the specified object property is of the given type;\r\n     * `false` otherwise.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.16.0\r\n     * @category Type\r\n     * @sig Type -> String -> Object -> Boolean\r\n     * @param {Function} type\r\n     * @param {String} name\r\n     * @param {*} obj\r\n     * @return {Boolean}\r\n     * @see R.is, R.propSatisfies\r\n     * @example\r\n     *\r\n     *      R.propIs(Number, 'x', {x: 1, y: 2});  //=> true\r\n     *      R.propIs(Number, 'x', {x: 'foo'});    //=> false\r\n     *      R.propIs(Number, 'x', {});            //=> false\r\n     */\r\n    var propIs = _curry3(function propIs(type, name, obj) {\r\n        return is(type, obj[name]);\r\n    });\r\n\r\n    /**\r\n     * If the given, non-null object has an own property with the specified name,\r\n     * returns the value of that property. Otherwise returns the provided default\r\n     * value.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.6.0\r\n     * @category Object\r\n     * @sig a -> String -> Object -> a\r\n     * @param {*} val The default value.\r\n     * @param {String} p The name of the property to return.\r\n     * @param {Object} obj The object to query.\r\n     * @return {*} The value of given property of the supplied object or the default value.\r\n     * @example\r\n     *\r\n     *      var alice = {\r\n     *        name: 'ALICE',\r\n     *        age: 101\r\n     *      };\r\n     *      var favorite = R.prop('favoriteLibrary');\r\n     *      var favoriteWithDefault = R.propOr('Ramda', 'favoriteLibrary');\r\n     *\r\n     *      favorite(alice);  //=> undefined\r\n     *      favoriteWithDefault(alice);  //=> 'Ramda'\r\n     */\r\n    var propOr = _curry3(function propOr(val, p, obj) {\r\n        return obj != null && _has(p, obj) ? obj[p] : val;\r\n    });\r\n\r\n    /**\r\n     * Returns `true` if the specified object property satisfies the given\r\n     * predicate; `false` otherwise.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.16.0\r\n     * @category Logic\r\n     * @sig (a -> Boolean) -> String -> {String: a} -> Boolean\r\n     * @param {Function} pred\r\n     * @param {String} name\r\n     * @param {*} obj\r\n     * @return {Boolean}\r\n     * @see R.propEq, R.propIs\r\n     * @example\r\n     *\r\n     *      R.propSatisfies(x => x > 0, 'x', {x: 1, y: 2}); //=> true\r\n     */\r\n    var propSatisfies = _curry3(function propSatisfies(pred, name, obj) {\r\n        return pred(obj[name]);\r\n    });\r\n\r\n    /**\r\n     * Acts as multiple `prop`: array of keys in, array of values out. Preserves\r\n     * order.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category Object\r\n     * @sig [k] -> {k: v} -> [v]\r\n     * @param {Array} ps The property names to fetch\r\n     * @param {Object} obj The object to query\r\n     * @return {Array} The corresponding values or partially applied function.\r\n     * @example\r\n     *\r\n     *      R.props(['x', 'y'], {x: 1, y: 2}); //=> [1, 2]\r\n     *      R.props(['c', 'a', 'b'], {b: 2, a: 1}); //=> [undefined, 1, 2]\r\n     *\r\n     *      var fullName = R.compose(R.join(' '), R.props(['first', 'last']));\r\n     *      fullName({last: 'Bullet-Tooth', age: 33, first: 'Tony'}); //=> 'Tony Bullet-Tooth'\r\n     */\r\n    var props = _curry2(function props(ps, obj) {\r\n        var len = ps.length;\r\n        var out = [];\r\n        var idx = 0;\r\n        while (idx < len) {\r\n            out[idx] = obj[ps[idx]];\r\n            idx += 1;\r\n        }\r\n        return out;\r\n    });\r\n\r\n    /**\r\n     * Returns a list of numbers from `from` (inclusive) to `to` (exclusive).\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category List\r\n     * @sig Number -> Number -> [Number]\r\n     * @param {Number} from The first number in the list.\r\n     * @param {Number} to One more than the last number in the list.\r\n     * @return {Array} The list of numbers in tthe set `[a, b)`.\r\n     * @example\r\n     *\r\n     *      R.range(1, 5);    //=> [1, 2, 3, 4]\r\n     *      R.range(50, 53);  //=> [50, 51, 52]\r\n     */\r\n    var range = _curry2(function range(from, to) {\r\n        if (!(_isNumber(from) && _isNumber(to))) {\r\n            throw new TypeError('Both arguments to range must be numbers');\r\n        }\r\n        var result = [];\r\n        var n = from;\r\n        while (n < to) {\r\n            result.push(n);\r\n            n += 1;\r\n        }\r\n        return result;\r\n    });\r\n\r\n    /**\r\n     * Returns a single item by iterating through the list, successively calling\r\n     * the iterator function and passing it an accumulator value and the current\r\n     * value from the array, and then passing the result to the next call.\r\n     *\r\n     * Similar to `reduce`, except moves through the input list from the right to\r\n     * the left.\r\n     *\r\n     * The iterator function receives two values: *(acc, value)*\r\n     *\r\n     * Note: `R.reduceRight` does not skip deleted or unassigned indices (sparse\r\n     * arrays), unlike the native `Array.prototype.reduce` method. For more details\r\n     * on this behavior, see:\r\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight#Description\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category List\r\n     * @sig (a,b -> a) -> a -> [b] -> a\r\n     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\r\n     *        current element from the array.\r\n     * @param {*} acc The accumulator value.\r\n     * @param {Array} list The list to iterate over.\r\n     * @return {*} The final, accumulated value.\r\n     * @see R.addIndex\r\n     * @example\r\n     *\r\n     *      var pairs = [ ['a', 1], ['b', 2], ['c', 3] ];\r\n     *      var flattenPairs = (acc, pair) => acc.concat(pair);\r\n     *\r\n     *      R.reduceRight(flattenPairs, [], pairs); //=> [ 'c', 3, 'b', 2, 'a', 1 ]\r\n     */\r\n    var reduceRight = _curry3(function reduceRight(fn, acc, list) {\r\n        var idx = list.length - 1;\r\n        while (idx >= 0) {\r\n            acc = fn(acc, list[idx]);\r\n            idx -= 1;\r\n        }\r\n        return acc;\r\n    });\r\n\r\n    /**\r\n     * Returns a value wrapped to indicate that it is the final value of the reduce\r\n     * and transduce functions. The returned value should be considered a black\r\n     * box: the internal structure is not guaranteed to be stable.\r\n     *\r\n     * Note: this optimization is unavailable to functions not explicitly listed\r\n     * above. For instance, it is not currently supported by reduceRight.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.15.0\r\n     * @category List\r\n     * @sig a -> *\r\n     * @param {*} x The final value of the reduce.\r\n     * @return {*} The wrapped value.\r\n     * @see R.reduce, R.transduce\r\n     * @example\r\n     *\r\n     *      R.reduce(\r\n     *        R.pipe(R.add, R.when(R.gte(R.__, 10), R.reduced)),\r\n     *        0,\r\n     *        [1, 2, 3, 4, 5]) // 10\r\n     */\r\n    var reduced = _curry1(_reduced);\r\n\r\n    /**\r\n     * Removes the sub-list of `list` starting at index `start` and containing\r\n     * `count` elements. _Note that this is not destructive_: it returns a copy of\r\n     * the list with the changes.\r\n     * <small>No lists have been harmed in the application of this function.</small>\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.2.2\r\n     * @category List\r\n     * @sig Number -> Number -> [a] -> [a]\r\n     * @param {Number} start The position to start removing elements\r\n     * @param {Number} count The number of elements to remove\r\n     * @param {Array} list The list to remove from\r\n     * @return {Array} A new Array with `count` elements from `start` removed.\r\n     * @example\r\n     *\r\n     *      R.remove(2, 3, [1,2,3,4,5,6,7,8]); //=> [1,2,6,7,8]\r\n     */\r\n    var remove = _curry3(function remove(start, count, list) {\r\n        return _concat(_slice(list, 0, Math.min(start, list.length)), _slice(list, Math.min(list.length, start + count)));\r\n    });\r\n\r\n    /**\r\n     * Replace a substring or regex match in a string with a replacement.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.7.0\r\n     * @category String\r\n     * @sig RegExp|String -> String -> String -> String\r\n     * @param {RegExp|String} pattern A regular expression or a substring to match.\r\n     * @param {String} replacement The string to replace the matches with.\r\n     * @param {String} str The String to do the search and replacement in.\r\n     * @return {String} The result.\r\n     * @example\r\n     *\r\n     *      R.replace('foo', 'bar', 'foo foo foo'); //=> 'bar foo foo'\r\n     *      R.replace(/foo/, 'bar', 'foo foo foo'); //=> 'bar foo foo'\r\n     *\r\n     *      // Use the \"g\" (global) flag to replace all occurrences:\r\n     *      R.replace(/foo/g, 'bar', 'foo foo foo'); //=> 'bar bar bar'\r\n     */\r\n    var replace = _curry3(function replace(regex, replacement, str) {\r\n        return str.replace(regex, replacement);\r\n    });\r\n\r\n    /**\r\n     * Returns a new list or string with the elements or characters in reverse\r\n     * order.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category List\r\n     * @sig [a] -> [a]\r\n     * @sig String -> String\r\n     * @param {Array|String} list\r\n     * @return {Array|String}\r\n     * @example\r\n     *\r\n     *      R.reverse([1, 2, 3]);  //=> [3, 2, 1]\r\n     *      R.reverse([1, 2]);     //=> [2, 1]\r\n     *      R.reverse([1]);        //=> [1]\r\n     *      R.reverse([]);         //=> []\r\n     *\r\n     *      R.reverse('abc');      //=> 'cba'\r\n     *      R.reverse('ab');       //=> 'ba'\r\n     *      R.reverse('a');        //=> 'a'\r\n     *      R.reverse('');         //=> ''\r\n     */\r\n    var reverse = _curry1(function reverse(list) {\r\n        return _isString(list) ? list.split('').reverse().join('') : _slice(list).reverse();\r\n    });\r\n\r\n    /**\r\n     * Scan is similar to reduce, but returns a list of successively reduced values\r\n     * from the left\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.10.0\r\n     * @category List\r\n     * @sig (a,b -> a) -> a -> [b] -> [a]\r\n     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\r\n     *        current element from the array\r\n     * @param {*} acc The accumulator value.\r\n     * @param {Array} list The list to iterate over.\r\n     * @return {Array} A list of all intermediately reduced values.\r\n     * @example\r\n     *\r\n     *      var numbers = [1, 2, 3, 4];\r\n     *      var factorials = R.scan(R.multiply, 1, numbers); //=> [1, 1, 2, 6, 24]\r\n     */\r\n    var scan = _curry3(function scan(fn, acc, list) {\r\n        var idx = 0;\r\n        var len = list.length;\r\n        var result = [acc];\r\n        while (idx < len) {\r\n            acc = fn(acc, list[idx]);\r\n            result[idx + 1] = acc;\r\n            idx += 1;\r\n        }\r\n        return result;\r\n    });\r\n\r\n    /**\r\n     * Returns the result of \"setting\" the portion of the given data structure\r\n     * focused by the given lens to the given value.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.16.0\r\n     * @category Object\r\n     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\r\n     * @sig Lens s a -> a -> s -> s\r\n     * @param {Lens} lens\r\n     * @param {*} v\r\n     * @param {*} x\r\n     * @return {*}\r\n     * @see R.prop, R.lensIndex, R.lensProp\r\n     * @example\r\n     *\r\n     *      var xLens = R.lensProp('x');\r\n     *\r\n     *      R.set(xLens, 4, {x: 1, y: 2});  //=> {x: 4, y: 2}\r\n     *      R.set(xLens, 8, {x: 1, y: 2});  //=> {x: 8, y: 2}\r\n     */\r\n    var set = _curry3(function set(lens, v, x) {\r\n        return over(lens, always(v), x);\r\n    });\r\n\r\n    /**\r\n     * Returns the elements of the given list or string (or object with a `slice`\r\n     * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\r\n     *\r\n     * Dispatches to the `slice` method of the third argument, if present.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.4\r\n     * @category List\r\n     * @sig Number -> Number -> [a] -> [a]\r\n     * @sig Number -> Number -> String -> String\r\n     * @param {Number} fromIndex The start index (inclusive).\r\n     * @param {Number} toIndex The end index (exclusive).\r\n     * @param {*} list\r\n     * @return {*}\r\n     * @example\r\n     *\r\n     *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\r\n     *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\r\n     *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\r\n     *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\r\n     *      R.slice(0, 3, 'ramda');                     //=> 'ram'\r\n     */\r\n    var slice = _curry3(_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\r\n        return Array.prototype.slice.call(list, fromIndex, toIndex);\r\n    }));\r\n\r\n    /**\r\n     * Returns a copy of the list, sorted according to the comparator function,\r\n     * which should accept two values at a time and return a negative number if the\r\n     * first value is smaller, a positive number if it's larger, and zero if they\r\n     * are equal. Please note that this is a **copy** of the list. It does not\r\n     * modify the original.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category List\r\n     * @sig (a,a -> Number) -> [a] -> [a]\r\n     * @param {Function} comparator A sorting function :: a -> b -> Int\r\n     * @param {Array} list The list to sort\r\n     * @return {Array} a new array with its elements sorted by the comparator function.\r\n     * @example\r\n     *\r\n     *      var diff = function(a, b) { return a - b; };\r\n     *      R.sort(diff, [4,2,7,5]); //=> [2, 4, 5, 7]\r\n     */\r\n    var sort = _curry2(function sort(comparator, list) {\r\n        return _slice(list).sort(comparator);\r\n    });\r\n\r\n    /**\r\n     * Sorts the list according to the supplied function.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category Relation\r\n     * @sig Ord b => (a -> b) -> [a] -> [a]\r\n     * @param {Function} fn\r\n     * @param {Array} list The list to sort.\r\n     * @return {Array} A new list sorted by the keys generated by `fn`.\r\n     * @example\r\n     *\r\n     *      var sortByFirstItem = R.sortBy(R.prop(0));\r\n     *      var sortByNameCaseInsensitive = R.sortBy(R.compose(R.toLower, R.prop('name')));\r\n     *      var pairs = [[-1, 1], [-2, 2], [-3, 3]];\r\n     *      sortByFirstItem(pairs); //=> [[-3, 3], [-2, 2], [-1, 1]]\r\n     *      var alice = {\r\n     *        name: 'ALICE',\r\n     *        age: 101\r\n     *      };\r\n     *      var bob = {\r\n     *        name: 'Bob',\r\n     *        age: -10\r\n     *      };\r\n     *      var clara = {\r\n     *        name: 'clara',\r\n     *        age: 314.159\r\n     *      };\r\n     *      var people = [clara, bob, alice];\r\n     *      sortByNameCaseInsensitive(people); //=> [alice, bob, clara]\r\n     */\r\n    var sortBy = _curry2(function sortBy(fn, list) {\r\n        return _slice(list).sort(function (a, b) {\r\n            var aa = fn(a);\r\n            var bb = fn(b);\r\n            return aa < bb ? -1 : aa > bb ? 1 : 0;\r\n        });\r\n    });\r\n\r\n    /**\r\n     * Splits a given list or string at a given index.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.19.0\r\n     * @category List\r\n     * @sig Number -> [a] -> [[a], [a]]\r\n     * @sig Number -> String -> [String, String]\r\n     * @param {Number} index The index where the array/string is split.\r\n     * @param {Array|String} array The array/string to be split.\r\n     * @return {Array}\r\n     * @example\r\n     *\r\n     *      R.splitAt(1, [1, 2, 3]);          //=> [[1], [2, 3]]\r\n     *      R.splitAt(5, 'hello world');      //=> ['hello', ' world']\r\n     *      R.splitAt(-1, 'foobar');          //=> ['fooba', 'r']\r\n     */\r\n    var splitAt = _curry2(function splitAt(index, array) {\r\n        return [\r\n            slice(0, index, array),\r\n            slice(index, length(array), array)\r\n        ];\r\n    });\r\n\r\n    /**\r\n     * Splits a collection into slices of the specified length.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.16.0\r\n     * @category List\r\n     * @sig Number -> [a] -> [[a]]\r\n     * @sig Number -> String -> [String]\r\n     * @param {Number} n\r\n     * @param {Array} list\r\n     * @return {Array}\r\n     * @example\r\n     *\r\n     *      R.splitEvery(3, [1, 2, 3, 4, 5, 6, 7]); //=> [[1, 2, 3], [4, 5, 6], [7]]\r\n     *      R.splitEvery(3, 'foobarbaz'); //=> ['foo', 'bar', 'baz']\r\n     */\r\n    var splitEvery = _curry2(function splitEvery(n, list) {\r\n        if (n <= 0) {\r\n            throw new Error('First argument to splitEvery must be a positive integer');\r\n        }\r\n        var result = [];\r\n        var idx = 0;\r\n        while (idx < list.length) {\r\n            result.push(slice(idx, idx += n, list));\r\n        }\r\n        return result;\r\n    });\r\n\r\n    /**\r\n     * Takes a list and a predicate and returns a pair of lists with the following properties:\r\n     *\r\n     *  - the result of concatenating the two output lists is equivalent to the input list;\r\n     *  - none of the elements of the first output list satisfies the predicate; and\r\n     *  - if the second output list is non-empty, its first element satisfies the predicate.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.19.0\r\n     * @category List\r\n     * @sig (a -> Boolean) -> [a] -> [[a], [a]]\r\n     * @param {Function} pred The predicate that determines where the array is split.\r\n     * @param {Array} list The array to be split.\r\n     * @return {Array}\r\n     * @example\r\n     *\r\n     *      R.splitWhen(R.equals(2), [1, 2, 3, 1, 2, 3]);   //=> [[1], [2, 3, 1, 2, 3]]\r\n     */\r\n    var splitWhen = _curry2(function splitWhen(pred, list) {\r\n        var idx = 0;\r\n        var len = list.length;\r\n        var prefix = [];\r\n        while (idx < len && !pred(list[idx])) {\r\n            prefix.push(list[idx]);\r\n            idx += 1;\r\n        }\r\n        return [\r\n            prefix,\r\n            _slice(list, idx)\r\n        ];\r\n    });\r\n\r\n    /**\r\n     * Subtracts its second argument from its first argument.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category Math\r\n     * @sig Number -> Number -> Number\r\n     * @param {Number} a The first value.\r\n     * @param {Number} b The second value.\r\n     * @return {Number} The result of `a - b`.\r\n     * @see R.add\r\n     * @example\r\n     *\r\n     *      R.subtract(10, 8); //=> 2\r\n     *\r\n     *      var minus5 = R.subtract(R.__, 5);\r\n     *      minus5(17); //=> 12\r\n     *\r\n     *      var complementaryAngle = R.subtract(90);\r\n     *      complementaryAngle(30); //=> 60\r\n     *      complementaryAngle(72); //=> 18\r\n     */\r\n    var subtract = _curry2(function subtract(a, b) {\r\n        return Number(a) - Number(b);\r\n    });\r\n\r\n    /**\r\n     * Returns all but the first element of the given list or string (or object\r\n     * with a `tail` method).\r\n     *\r\n     * Dispatches to the `slice` method of the first argument, if present.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category List\r\n     * @sig [a] -> [a]\r\n     * @sig String -> String\r\n     * @param {*} list\r\n     * @return {*}\r\n     * @see R.head, R.init, R.last\r\n     * @example\r\n     *\r\n     *      R.tail([1, 2, 3]);  //=> [2, 3]\r\n     *      R.tail([1, 2]);     //=> [2]\r\n     *      R.tail([1]);        //=> []\r\n     *      R.tail([]);         //=> []\r\n     *\r\n     *      R.tail('abc');  //=> 'bc'\r\n     *      R.tail('ab');   //=> 'b'\r\n     *      R.tail('a');    //=> ''\r\n     *      R.tail('');     //=> ''\r\n     */\r\n    var tail = _checkForMethod('tail', slice(1, Infinity));\r\n\r\n    /**\r\n     * Returns the first `n` elements of the given list, string, or\r\n     * transducer/transformer (or object with a `take` method).\r\n     *\r\n     * Dispatches to the `take` method of the second argument, if present.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category List\r\n     * @sig Number -> [a] -> [a]\r\n     * @sig Number -> String -> String\r\n     * @param {Number} n\r\n     * @param {*} list\r\n     * @return {*}\r\n     * @see R.drop\r\n     * @example\r\n     *\r\n     *      R.take(1, ['foo', 'bar', 'baz']); //=> ['foo']\r\n     *      R.take(2, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\r\n     *      R.take(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\r\n     *      R.take(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\r\n     *      R.take(3, 'ramda');               //=> 'ram'\r\n     *\r\n     *      var personnel = [\r\n     *        'Dave Brubeck',\r\n     *        'Paul Desmond',\r\n     *        'Eugene Wright',\r\n     *        'Joe Morello',\r\n     *        'Gerry Mulligan',\r\n     *        'Bob Bates',\r\n     *        'Joe Dodge',\r\n     *        'Ron Crotty'\r\n     *      ];\r\n     *\r\n     *      var takeFive = R.take(5);\r\n     *      takeFive(personnel);\r\n     *      //=> ['Dave Brubeck', 'Paul Desmond', 'Eugene Wright', 'Joe Morello', 'Gerry Mulligan']\r\n     */\r\n    var take = _curry2(_dispatchable('take', _xtake, function take(n, xs) {\r\n        return slice(0, n < 0 ? Infinity : n, xs);\r\n    }));\r\n\r\n    /**\r\n     * Returns a new list containing the last `n` elements of a given list, passing\r\n     * each value to the supplied predicate function, and terminating when the\r\n     * predicate function returns `false`. Excludes the element that caused the\r\n     * predicate function to fail. The predicate function is passed one argument:\r\n     * *(value)*.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.16.0\r\n     * @category List\r\n     * @sig (a -> Boolean) -> [a] -> [a]\r\n     * @param {Function} fn The function called per iteration.\r\n     * @param {Array} list The collection to iterate over.\r\n     * @return {Array} A new array.\r\n     * @see R.dropLastWhile, R.addIndex\r\n     * @example\r\n     *\r\n     *      var isNotOne = x => x !== 1;\r\n     *\r\n     *      R.takeLastWhile(isNotOne, [1, 2, 3, 4]); //=> [2, 3, 4]\r\n     */\r\n    var takeLastWhile = _curry2(function takeLastWhile(fn, list) {\r\n        var idx = list.length - 1;\r\n        while (idx >= 0 && fn(list[idx])) {\r\n            idx -= 1;\r\n        }\r\n        return _slice(list, idx + 1, Infinity);\r\n    });\r\n\r\n    /**\r\n     * Returns a new list containing the first `n` elements of a given list,\r\n     * passing each value to the supplied predicate function, and terminating when\r\n     * the predicate function returns `false`. Excludes the element that caused the\r\n     * predicate function to fail. The predicate function is passed one argument:\r\n     * *(value)*.\r\n     *\r\n     * Dispatches to the `takeWhile` method of the second argument, if present.\r\n     *\r\n     * Acts as a transducer if a transformer is given in list position.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category List\r\n     * @sig (a -> Boolean) -> [a] -> [a]\r\n     * @param {Function} fn The function called per iteration.\r\n     * @param {Array} list The collection to iterate over.\r\n     * @return {Array} A new array.\r\n     * @see R.dropWhile, R.transduce, R.addIndex\r\n     * @example\r\n     *\r\n     *      var isNotFour = x => x !== 4;\r\n     *\r\n     *      R.takeWhile(isNotFour, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3]\r\n     */\r\n    var takeWhile = _curry2(_dispatchable('takeWhile', _xtakeWhile, function takeWhile(fn, list) {\r\n        var idx = 0;\r\n        var len = list.length;\r\n        while (idx < len && fn(list[idx])) {\r\n            idx += 1;\r\n        }\r\n        return _slice(list, 0, idx);\r\n    }));\r\n\r\n    /**\r\n     * Runs the given function with the supplied object, then returns the object.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category Function\r\n     * @sig (a -> *) -> a -> a\r\n     * @param {Function} fn The function to call with `x`. The return value of `fn` will be thrown away.\r\n     * @param {*} x\r\n     * @return {*} `x`.\r\n     * @example\r\n     *\r\n     *      var sayX = x => console.log('x is ' + x);\r\n     *      R.tap(sayX, 100); //=> 100\r\n     *      // logs 'x is 100'\r\n     */\r\n    var tap = _curry2(function tap(fn, x) {\r\n        fn(x);\r\n        return x;\r\n    });\r\n\r\n    /**\r\n     * Calls an input function `n` times, returning an array containing the results\r\n     * of those function calls.\r\n     *\r\n     * `fn` is passed one argument: The current value of `n`, which begins at `0`\r\n     * and is gradually incremented to `n - 1`.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.2.3\r\n     * @category List\r\n     * @sig (Number -> a) -> Number -> [a]\r\n     * @param {Function} fn The function to invoke. Passed one argument, the current value of `n`.\r\n     * @param {Number} n A value between `0` and `n - 1`. Increments after each function call.\r\n     * @return {Array} An array containing the return values of all calls to `fn`.\r\n     * @example\r\n     *\r\n     *      R.times(R.identity, 5); //=> [0, 1, 2, 3, 4]\r\n     */\r\n    var times = _curry2(function times(fn, n) {\r\n        var len = Number(n);\r\n        var idx = 0;\r\n        var list;\r\n        if (len < 0 || isNaN(len)) {\r\n            throw new RangeError('n must be a non-negative number');\r\n        }\r\n        list = new Array(len);\r\n        while (idx < len) {\r\n            list[idx] = fn(idx);\r\n            idx += 1;\r\n        }\r\n        return list;\r\n    });\r\n\r\n    /**\r\n     * Converts an object into an array of key, value arrays. Only the object's\r\n     * own properties are used.\r\n     * Note that the order of the output array is not guaranteed to be consistent\r\n     * across different JS platforms.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.4.0\r\n     * @category Object\r\n     * @sig {String: *} -> [[String,*]]\r\n     * @param {Object} obj The object to extract from\r\n     * @return {Array} An array of key, value arrays from the object's own properties.\r\n     * @see R.fromPairs\r\n     * @example\r\n     *\r\n     *      R.toPairs({a: 1, b: 2, c: 3}); //=> [['a', 1], ['b', 2], ['c', 3]]\r\n     */\r\n    var toPairs = _curry1(function toPairs(obj) {\r\n        var pairs = [];\r\n        for (var prop in obj) {\r\n            if (_has(prop, obj)) {\r\n                pairs[pairs.length] = [\r\n                    prop,\r\n                    obj[prop]\r\n                ];\r\n            }\r\n        }\r\n        return pairs;\r\n    });\r\n\r\n    /**\r\n     * Converts an object into an array of key, value arrays. The object's own\r\n     * properties and prototype properties are used. Note that the order of the\r\n     * output array is not guaranteed to be consistent across different JS\r\n     * platforms.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.4.0\r\n     * @category Object\r\n     * @sig {String: *} -> [[String,*]]\r\n     * @param {Object} obj The object to extract from\r\n     * @return {Array} An array of key, value arrays from the object's own\r\n     *         and prototype properties.\r\n     * @example\r\n     *\r\n     *      var F = function() { this.x = 'X'; };\r\n     *      F.prototype.y = 'Y';\r\n     *      var f = new F();\r\n     *      R.toPairsIn(f); //=> [['x','X'], ['y','Y']]\r\n     */\r\n    var toPairsIn = _curry1(function toPairsIn(obj) {\r\n        var pairs = [];\r\n        for (var prop in obj) {\r\n            pairs[pairs.length] = [\r\n                prop,\r\n                obj[prop]\r\n            ];\r\n        }\r\n        return pairs;\r\n    });\r\n\r\n    /**\r\n     * Transposes the rows and columns of a 2D list.\r\n     * When passed a list of `n` lists of length `x`,\r\n     * returns a list of `x` lists of length `n`.\r\n     *\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.19.0\r\n     * @category List\r\n     * @sig [[a]] -> [[a]]\r\n     * @param {Array} list A 2D list\r\n     * @return {Array} A 2D list\r\n     * @example\r\n     *\r\n     *      R.transpose([[1, 'a'], [2, 'b'], [3, 'c']]) //=> [[1, 2, 3], ['a', 'b', 'c']]\r\n     *      R.transpose([[1, 2, 3], ['a', 'b', 'c']]) //=> [[1, 'a'], [2, 'b'], [3, 'c']]\r\n     *\r\n     * If some of the rows are shorter than the following rows, their elements are skipped:\r\n     *\r\n     *      R.transpose([[10, 11], [20], [], [30, 31, 32]]) //=> [[10, 20, 30], [11, 31], [32]]\r\n     */\r\n    var transpose = _curry1(function transpose(outerlist) {\r\n        var i = 0;\r\n        var result = [];\r\n        while (i < outerlist.length) {\r\n            var innerlist = outerlist[i];\r\n            var j = 0;\r\n            while (j < innerlist.length) {\r\n                if (typeof result[j] === 'undefined') {\r\n                    result[j] = [];\r\n                }\r\n                result[j].push(innerlist[j]);\r\n                j += 1;\r\n            }\r\n            i += 1;\r\n        }\r\n        return result;\r\n    });\r\n\r\n    /**\r\n     * Removes (strips) whitespace from both ends of the string.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.6.0\r\n     * @category String\r\n     * @sig String -> String\r\n     * @param {String} str The string to trim.\r\n     * @return {String} Trimmed version of `str`.\r\n     * @example\r\n     *\r\n     *      R.trim('   xyz  '); //=> 'xyz'\r\n     *      R.map(R.trim, R.split(',', 'x, y, z')); //=> ['x', 'y', 'z']\r\n     */\r\n    var trim = function () {\r\n        var ws = '\\t\\n\\x0B\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' + '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028' + '\\u2029\\uFEFF';\r\n        var zeroWidth = '\\u200B';\r\n        var hasProtoTrim = typeof String.prototype.trim === 'function';\r\n        if (!hasProtoTrim || (ws.trim() || !zeroWidth.trim())) {\r\n            return _curry1(function trim(str) {\r\n                var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');\r\n                var endRx = new RegExp('[' + ws + '][' + ws + ']*$');\r\n                return str.replace(beginRx, '').replace(endRx, '');\r\n            });\r\n        } else {\r\n            return _curry1(function trim(str) {\r\n                return str.trim();\r\n            });\r\n        }\r\n    }();\r\n\r\n    /**\r\n     * `tryCatch` takes two functions, a `tryer` and a `catcher`. The returned\r\n     * function evaluates the `tryer`; if it does not throw, it simply returns the\r\n     * result. If the `tryer` *does* throw, the returned function evaluates the\r\n     * `catcher` function and returns its result. Note that for effective\r\n     * composition with this function, both the `tryer` and `catcher` functions\r\n     * must return the same type of results.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.20.0\r\n     * @category Function\r\n     * @sig (...x -> a) -> ((e, ...x) -> a) -> (...x -> a)\r\n     * @param {Function} tryer The function that may throw.\r\n     * @param {Function} catcher The function that will be evaluated if `tryer` throws.\r\n     * @return {Function} A new function that will catch exceptions and send then to the catcher.\r\n     * @example\r\n     *\r\n     *      R.tryCatch(R.prop('x'), R.F)({x: true}); //=> true\r\n     *      R.tryCatch(R.prop('x'), R.F)(null);      //=> false\r\n     */\r\n    var tryCatch = _curry2(function _tryCatch(tryer, catcher) {\r\n        return _arity(tryer.length, function () {\r\n            try {\r\n                return tryer.apply(this, arguments);\r\n            } catch (e) {\r\n                return catcher.apply(this, _concat([e], arguments));\r\n            }\r\n        });\r\n    });\r\n\r\n    /**\r\n     * Gives a single-word string description of the (native) type of a value,\r\n     * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\r\n     * attempt to distinguish user Object types any further, reporting them all as\r\n     * 'Object'.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.8.0\r\n     * @category Type\r\n     * @sig (* -> {*}) -> String\r\n     * @param {*} val The value to test\r\n     * @return {String}\r\n     * @example\r\n     *\r\n     *      R.type({}); //=> \"Object\"\r\n     *      R.type(1); //=> \"Number\"\r\n     *      R.type(false); //=> \"Boolean\"\r\n     *      R.type('s'); //=> \"String\"\r\n     *      R.type(null); //=> \"Null\"\r\n     *      R.type([]); //=> \"Array\"\r\n     *      R.type(/[A-z]/); //=> \"RegExp\"\r\n     */\r\n    var type = _curry1(function type(val) {\r\n        return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\r\n    });\r\n\r\n    /**\r\n     * Takes a function `fn`, which takes a single array argument, and returns a\r\n     * function which:\r\n     *\r\n     *   - takes any number of positional arguments;\r\n     *   - passes these arguments to `fn` as an array; and\r\n     *   - returns the result.\r\n     *\r\n     * In other words, R.unapply derives a variadic function from a function which\r\n     * takes an array. R.unapply is the inverse of R.apply.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.8.0\r\n     * @category Function\r\n     * @sig ([*...] -> a) -> (*... -> a)\r\n     * @param {Function} fn\r\n     * @return {Function}\r\n     * @see R.apply\r\n     * @example\r\n     *\r\n     *      R.unapply(JSON.stringify)(1, 2, 3); //=> '[1,2,3]'\r\n     */\r\n    var unapply = _curry1(function unapply(fn) {\r\n        return function () {\r\n            return fn(_slice(arguments));\r\n        };\r\n    });\r\n\r\n    /**\r\n     * Wraps a function of any arity (including nullary) in a function that accepts\r\n     * exactly 1 parameter. Any extraneous parameters will not be passed to the\r\n     * supplied function.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.2.0\r\n     * @category Function\r\n     * @sig (* -> b) -> (a -> b)\r\n     * @param {Function} fn The function to wrap.\r\n     * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\r\n     *         arity 1.\r\n     * @example\r\n     *\r\n     *      var takesTwoArgs = function(a, b) {\r\n     *        return [a, b];\r\n     *      };\r\n     *      takesTwoArgs.length; //=> 2\r\n     *      takesTwoArgs(1, 2); //=> [1, 2]\r\n     *\r\n     *      var takesOneArg = R.unary(takesTwoArgs);\r\n     *      takesOneArg.length; //=> 1\r\n     *      // Only 1 argument is passed to the wrapped function\r\n     *      takesOneArg(1, 2); //=> [1, undefined]\r\n     */\r\n    var unary = _curry1(function unary(fn) {\r\n        return nAry(1, fn);\r\n    });\r\n\r\n    /**\r\n     * Returns a function of arity `n` from a (manually) curried function.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.14.0\r\n     * @category Function\r\n     * @sig Number -> (a -> b) -> (a -> c)\r\n     * @param {Number} length The arity for the returned function.\r\n     * @param {Function} fn The function to uncurry.\r\n     * @return {Function} A new function.\r\n     * @see R.curry\r\n     * @example\r\n     *\r\n     *      var addFour = a => b => c => d => a + b + c + d;\r\n     *\r\n     *      var uncurriedAddFour = R.uncurryN(4, addFour);\r\n     *      uncurriedAddFour(1, 2, 3, 4); //=> 10\r\n     */\r\n    var uncurryN = _curry2(function uncurryN(depth, fn) {\r\n        return curryN(depth, function () {\r\n            var currentDepth = 1;\r\n            var value = fn;\r\n            var idx = 0;\r\n            var endIdx;\r\n            while (currentDepth <= depth && typeof value === 'function') {\r\n                endIdx = currentDepth === depth ? arguments.length : idx + value.length;\r\n                value = value.apply(this, _slice(arguments, idx, endIdx));\r\n                currentDepth += 1;\r\n                idx = endIdx;\r\n            }\r\n            return value;\r\n        });\r\n    });\r\n\r\n    /**\r\n     * Builds a list from a seed value. Accepts an iterator function, which returns\r\n     * either false to stop iteration or an array of length 2 containing the value\r\n     * to add to the resulting list and the seed to be used in the next call to the\r\n     * iterator function.\r\n     *\r\n     * The iterator function receives one argument: *(seed)*.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.10.0\r\n     * @category List\r\n     * @sig (a -> [b]) -> * -> [b]\r\n     * @param {Function} fn The iterator function. receives one argument, `seed`, and returns\r\n     *        either false to quit iteration or an array of length two to proceed. The element\r\n     *        at index 0 of this array will be added to the resulting array, and the element\r\n     *        at index 1 will be passed to the next call to `fn`.\r\n     * @param {*} seed The seed value.\r\n     * @return {Array} The final list.\r\n     * @example\r\n     *\r\n     *      var f = n => n > 50 ? false : [-n, n + 10];\r\n     *      R.unfold(f, 10); //=> [-10, -20, -30, -40, -50]\r\n     */\r\n    var unfold = _curry2(function unfold(fn, seed) {\r\n        var pair = fn(seed);\r\n        var result = [];\r\n        while (pair && pair.length) {\r\n            result[result.length] = pair[0];\r\n            pair = fn(pair[1]);\r\n        }\r\n        return result;\r\n    });\r\n\r\n    /**\r\n     * Returns a new list containing only one copy of each element in the original\r\n     * list, based upon the value returned by applying the supplied predicate to\r\n     * two list elements. Prefers the first item if two items compare equal based\r\n     * on the predicate.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.2.0\r\n     * @category List\r\n     * @sig (a, a -> Boolean) -> [a] -> [a]\r\n     * @param {Function} pred A predicate used to test whether two items are equal.\r\n     * @param {Array} list The array to consider.\r\n     * @return {Array} The list of unique items.\r\n     * @example\r\n     *\r\n     *      var strEq = R.eqBy(String);\r\n     *      R.uniqWith(strEq)([1, '1', 2, 1]); //=> [1, 2]\r\n     *      R.uniqWith(strEq)([{}, {}]);       //=> [{}]\r\n     *      R.uniqWith(strEq)([1, '1', 1]);    //=> [1]\r\n     *      R.uniqWith(strEq)(['1', 1, 1]);    //=> ['1']\r\n     */\r\n    var uniqWith = _curry2(function uniqWith(pred, list) {\r\n        var idx = 0;\r\n        var len = list.length;\r\n        var result = [];\r\n        var item;\r\n        while (idx < len) {\r\n            item = list[idx];\r\n            if (!_containsWith(pred, item, result)) {\r\n                result[result.length] = item;\r\n            }\r\n            idx += 1;\r\n        }\r\n        return result;\r\n    });\r\n\r\n    /**\r\n     * Tests the final argument by passing it to the given predicate function. If\r\n     * the predicate is not satisfied, the function will return the result of\r\n     * calling the `whenFalseFn` function with the same argument. If the predicate\r\n     * is satisfied, the argument is returned as is.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.18.0\r\n     * @category Logic\r\n     * @sig (a -> Boolean) -> (a -> a) -> a -> a\r\n     * @param {Function} pred        A predicate function\r\n     * @param {Function} whenFalseFn A function to invoke when the `pred` evaluates\r\n     *                               to a falsy value.\r\n     * @param {*}        x           An object to test with the `pred` function and\r\n     *                               pass to `whenFalseFn` if necessary.\r\n     * @return {*} Either `x` or the result of applying `x` to `whenFalseFn`.\r\n     * @see R.ifElse, R.when\r\n     * @example\r\n     *\r\n     *      // coerceArray :: (a|[a]) -> [a]\r\n     *      var coerceArray = R.unless(R.isArrayLike, R.of);\r\n     *      coerceArray([1, 2, 3]); //=> [1, 2, 3]\r\n     *      coerceArray(1);         //=> [1]\r\n     */\r\n    var unless = _curry3(function unless(pred, whenFalseFn, x) {\r\n        return pred(x) ? x : whenFalseFn(x);\r\n    });\r\n\r\n    /**\r\n     * Takes a predicate, a transformation function, and an initial value,\r\n     * and returns a value of the same type as the initial value.\r\n     * It does so by applying the transformation until the predicate is satisfied,\r\n     * at which point it returns the satisfactory value.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.20.0\r\n     * @category Logic\r\n     * @sig (a -> Boolean) -> (a -> a) -> a -> a\r\n     * @param {Function} pred A predicate function\r\n     * @param {Function} fn The iterator function\r\n     * @param {*} init Initial value\r\n     * @return {*} Final value that satisfies predicate\r\n     * @example\r\n     *\r\n     *      R.until(R.gt(R.__, 100), R.multiply(2))(1) // => 128\r\n     */\r\n    var until = _curry3(function until(pred, fn, init) {\r\n        var val = init;\r\n        while (!pred(val)) {\r\n            val = fn(val);\r\n        }\r\n        return val;\r\n    });\r\n\r\n    /**\r\n     * Returns a new copy of the array with the element at the provided index\r\n     * replaced with the given value.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.14.0\r\n     * @category List\r\n     * @sig Number -> a -> [a] -> [a]\r\n     * @param {Number} idx The index to update.\r\n     * @param {*} x The value to exist at the given index of the returned array.\r\n     * @param {Array|Arguments} list The source array-like object to be updated.\r\n     * @return {Array} A copy of `list` with the value at index `idx` replaced with `x`.\r\n     * @see R.adjust\r\n     * @example\r\n     *\r\n     *      R.update(1, 11, [0, 1, 2]);     //=> [0, 11, 2]\r\n     *      R.update(1)(11)([0, 1, 2]);     //=> [0, 11, 2]\r\n     */\r\n    var update = _curry3(function update(idx, x, list) {\r\n        return adjust(always(x), idx, list);\r\n    });\r\n\r\n    /**\r\n     * Accepts a function `fn` and a list of transformer functions and returns a\r\n     * new curried function. When the new function is invoked, it calls the\r\n     * function `fn` with parameters consisting of the result of calling each\r\n     * supplied handler on successive arguments to the new function.\r\n     *\r\n     * If more arguments are passed to the returned function than transformer\r\n     * functions, those arguments are passed directly to `fn` as additional\r\n     * parameters. If you expect additional arguments that don't need to be\r\n     * transformed, although you can ignore them, it's best to pass an identity\r\n     * function so that the new function reports the correct arity.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category Function\r\n     * @sig (x1 -> x2 -> ... -> z) -> [(a -> x1), (b -> x2), ...] -> (a -> b -> ... -> z)\r\n     * @param {Function} fn The function to wrap.\r\n     * @param {Array} transformers A list of transformer functions\r\n     * @return {Function} The wrapped function.\r\n     * @example\r\n     *\r\n     *      R.useWith(Math.pow, [R.identity, R.identity])(3, 4); //=> 81\r\n     *      R.useWith(Math.pow, [R.identity, R.identity])(3)(4); //=> 81\r\n     *      R.useWith(Math.pow, [R.dec, R.inc])(3, 4); //=> 32\r\n     *      R.useWith(Math.pow, [R.dec, R.inc])(3)(4); //=> 32\r\n     */\r\n    var useWith = _curry2(function useWith(fn, transformers) {\r\n        return curryN(transformers.length, function () {\r\n            var args = [];\r\n            var idx = 0;\r\n            while (idx < transformers.length) {\r\n                args.push(transformers[idx].call(this, arguments[idx]));\r\n                idx += 1;\r\n            }\r\n            return fn.apply(this, args.concat(_slice(arguments, transformers.length)));\r\n        });\r\n    });\r\n\r\n    /**\r\n     * Returns a list of all the enumerable own properties of the supplied object.\r\n     * Note that the order of the output array is not guaranteed across different\r\n     * JS platforms.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category Object\r\n     * @sig {k: v} -> [v]\r\n     * @param {Object} obj The object to extract values from\r\n     * @return {Array} An array of the values of the object's own properties.\r\n     * @example\r\n     *\r\n     *      R.values({a: 1, b: 2, c: 3}); //=> [1, 2, 3]\r\n     */\r\n    var values = _curry1(function values(obj) {\r\n        var props = keys(obj);\r\n        var len = props.length;\r\n        var vals = [];\r\n        var idx = 0;\r\n        while (idx < len) {\r\n            vals[idx] = obj[props[idx]];\r\n            idx += 1;\r\n        }\r\n        return vals;\r\n    });\r\n\r\n    /**\r\n     * Returns a list of all the properties, including prototype properties, of the\r\n     * supplied object.\r\n     * Note that the order of the output array is not guaranteed to be consistent\r\n     * across different JS platforms.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.2.0\r\n     * @category Object\r\n     * @sig {k: v} -> [v]\r\n     * @param {Object} obj The object to extract values from\r\n     * @return {Array} An array of the values of the object's own and prototype properties.\r\n     * @example\r\n     *\r\n     *      var F = function() { this.x = 'X'; };\r\n     *      F.prototype.y = 'Y';\r\n     *      var f = new F();\r\n     *      R.valuesIn(f); //=> ['X', 'Y']\r\n     */\r\n    var valuesIn = _curry1(function valuesIn(obj) {\r\n        var prop;\r\n        var vs = [];\r\n        for (prop in obj) {\r\n            vs[vs.length] = obj[prop];\r\n        }\r\n        return vs;\r\n    });\r\n\r\n    /**\r\n     * Returns a \"view\" of the given data structure, determined by the given lens.\r\n     * The lens's focus determines which portion of the data structure is visible.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.16.0\r\n     * @category Object\r\n     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\r\n     * @sig Lens s a -> s -> a\r\n     * @param {Lens} lens\r\n     * @param {*} x\r\n     * @return {*}\r\n     * @see R.prop, R.lensIndex, R.lensProp\r\n     * @example\r\n     *\r\n     *      var xLens = R.lensProp('x');\r\n     *\r\n     *      R.view(xLens, {x: 1, y: 2});  //=> 1\r\n     *      R.view(xLens, {x: 4, y: 2});  //=> 4\r\n     */\r\n    // `Const` is a functor that effectively ignores the function given to `map`.\r\n    // Using `Const` effectively ignores the setter function of the `lens`,\r\n    // leaving the value returned by the getter function unmodified.\r\n    var view = function () {\r\n        // `Const` is a functor that effectively ignores the function given to `map`.\r\n        var Const = function (x) {\r\n            return {\r\n                value: x,\r\n                map: function () {\r\n                    return this;\r\n                }\r\n            };\r\n        };\r\n        return _curry2(function view(lens, x) {\r\n            // Using `Const` effectively ignores the setter function of the `lens`,\r\n            // leaving the value returned by the getter function unmodified.\r\n            return lens(Const)(x).value;\r\n        });\r\n    }();\r\n\r\n    /**\r\n     * Tests the final argument by passing it to the given predicate function. If\r\n     * the predicate is satisfied, the function will return the result of calling\r\n     * the `whenTrueFn` function with the same argument. If the predicate is not\r\n     * satisfied, the argument is returned as is.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.18.0\r\n     * @category Logic\r\n     * @sig (a -> Boolean) -> (a -> a) -> a -> a\r\n     * @param {Function} pred       A predicate function\r\n     * @param {Function} whenTrueFn A function to invoke when the `condition`\r\n     *                              evaluates to a truthy value.\r\n     * @param {*}        x          An object to test with the `pred` function and\r\n     *                              pass to `whenTrueFn` if necessary.\r\n     * @return {*} Either `x` or the result of applying `x` to `whenTrueFn`.\r\n     * @see R.ifElse, R.unless\r\n     * @example\r\n     *\r\n     *      // truncate :: String -> String\r\n     *      var truncate = R.when(\r\n     *        R.propSatisfies(R.gt(R.__, 10), 'length'),\r\n     *        R.pipe(R.take(10), R.append('…'), R.join(''))\r\n     *      );\r\n     *      truncate('12345');         //=> '12345'\r\n     *      truncate('0123456789ABC'); //=> '0123456789…'\r\n     */\r\n    var when = _curry3(function when(pred, whenTrueFn, x) {\r\n        return pred(x) ? whenTrueFn(x) : x;\r\n    });\r\n\r\n    /**\r\n     * Takes a spec object and a test object; returns true if the test satisfies\r\n     * the spec. Each of the spec's own properties must be a predicate function.\r\n     * Each predicate is applied to the value of the corresponding property of the\r\n     * test object. `where` returns true if all the predicates return true, false\r\n     * otherwise.\r\n     *\r\n     * `where` is well suited to declaratively expressing constraints for other\r\n     * functions such as `filter` and `find`.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.1\r\n     * @category Object\r\n     * @sig {String: (* -> Boolean)} -> {String: *} -> Boolean\r\n     * @param {Object} spec\r\n     * @param {Object} testObj\r\n     * @return {Boolean}\r\n     * @example\r\n     *\r\n     *      // pred :: Object -> Boolean\r\n     *      var pred = where({\r\n     *        a: equals('foo'),\r\n     *        b: complement(equals('bar')),\r\n     *        x: gt(__, 10),\r\n     *        y: lt(__, 20)\r\n     *      });\r\n     *\r\n     *      pred({a: 'foo', b: 'xxx', x: 11, y: 19}); //=> true\r\n     *      pred({a: 'xxx', b: 'xxx', x: 11, y: 19}); //=> false\r\n     *      pred({a: 'foo', b: 'bar', x: 11, y: 19}); //=> false\r\n     *      pred({a: 'foo', b: 'xxx', x: 10, y: 19}); //=> false\r\n     *      pred({a: 'foo', b: 'xxx', x: 11, y: 20}); //=> false\r\n     */\r\n    var where = _curry2(function where(spec, testObj) {\r\n        for (var prop in spec) {\r\n            if (_has(prop, spec) && !spec[prop](testObj[prop])) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    });\r\n\r\n    /**\r\n     * Wrap a function inside another to allow you to make adjustments to the\r\n     * parameters, or do other processing either before the internal function is\r\n     * called or with its results.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category Function\r\n     * @sig (a... -> b) -> ((a... -> b) -> a... -> c) -> (a... -> c)\r\n     * @param {Function} fn The function to wrap.\r\n     * @param {Function} wrapper The wrapper function.\r\n     * @return {Function} The wrapped function.\r\n     * @deprecated since v0.22.0\r\n     * @example\r\n     *\r\n     *      var greet = name => 'Hello ' + name;\r\n     *\r\n     *      var shoutedGreet = R.wrap(greet, (gr, name) => gr(name).toUpperCase());\r\n     *\r\n     *      shoutedGreet(\"Kathy\"); //=> \"HELLO KATHY\"\r\n     *\r\n     *      var shortenedGreet = R.wrap(greet, function(gr, name) {\r\n     *        return gr(name.substring(0, 3));\r\n     *      });\r\n     *      shortenedGreet(\"Robert\"); //=> \"Hello Rob\"\r\n     */\r\n    var wrap = _curry2(function wrap(fn, wrapper) {\r\n        return curryN(fn.length, function () {\r\n            return wrapper.apply(this, _concat([fn], arguments));\r\n        });\r\n    });\r\n\r\n    /**\r\n     * Creates a new list out of the two supplied by creating each possible pair\r\n     * from the lists.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category List\r\n     * @sig [a] -> [b] -> [[a,b]]\r\n     * @param {Array} as The first list.\r\n     * @param {Array} bs The second list.\r\n     * @return {Array} The list made by combining each possible pair from\r\n     *         `as` and `bs` into pairs (`[a, b]`).\r\n     * @example\r\n     *\r\n     *      R.xprod([1, 2], ['a', 'b']); //=> [[1, 'a'], [1, 'b'], [2, 'a'], [2, 'b']]\r\n     */\r\n    // = xprodWith(prepend); (takes about 3 times as long...)\r\n    var xprod = _curry2(function xprod(a, b) {\r\n        // = xprodWith(prepend); (takes about 3 times as long...)\r\n        var idx = 0;\r\n        var ilen = a.length;\r\n        var j;\r\n        var jlen = b.length;\r\n        var result = [];\r\n        while (idx < ilen) {\r\n            j = 0;\r\n            while (j < jlen) {\r\n                result[result.length] = [\r\n                    a[idx],\r\n                    b[j]\r\n                ];\r\n                j += 1;\r\n            }\r\n            idx += 1;\r\n        }\r\n        return result;\r\n    });\r\n\r\n    /**\r\n     * Creates a new list out of the two supplied by pairing up equally-positioned\r\n     * items from both lists. The returned list is truncated to the length of the\r\n     * shorter of the two input lists.\r\n     * Note: `zip` is equivalent to `zipWith(function(a, b) { return [a, b] })`.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category List\r\n     * @sig [a] -> [b] -> [[a,b]]\r\n     * @param {Array} list1 The first array to consider.\r\n     * @param {Array} list2 The second array to consider.\r\n     * @return {Array} The list made by pairing up same-indexed elements of `list1` and `list2`.\r\n     * @example\r\n     *\r\n     *      R.zip([1, 2, 3], ['a', 'b', 'c']); //=> [[1, 'a'], [2, 'b'], [3, 'c']]\r\n     */\r\n    var zip = _curry2(function zip(a, b) {\r\n        var rv = [];\r\n        var idx = 0;\r\n        var len = Math.min(a.length, b.length);\r\n        while (idx < len) {\r\n            rv[idx] = [\r\n                a[idx],\r\n                b[idx]\r\n            ];\r\n            idx += 1;\r\n        }\r\n        return rv;\r\n    });\r\n\r\n    /**\r\n     * Creates a new object out of a list of keys and a list of values.\r\n     * Key/value pairing is truncated to the length of the shorter of the two lists.\r\n     * Note: `zipObj` is equivalent to `pipe(zipWith(pair), fromPairs)`.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.3.0\r\n     * @category List\r\n     * @sig [String] -> [*] -> {String: *}\r\n     * @param {Array} keys The array that will be properties on the output object.\r\n     * @param {Array} values The list of values on the output object.\r\n     * @return {Object} The object made by pairing up same-indexed elements of `keys` and `values`.\r\n     * @example\r\n     *\r\n     *      R.zipObj(['a', 'b', 'c'], [1, 2, 3]); //=> {a: 1, b: 2, c: 3}\r\n     */\r\n    var zipObj = _curry2(function zipObj(keys, values) {\r\n        var idx = 0;\r\n        var len = Math.min(keys.length, values.length);\r\n        var out = {};\r\n        while (idx < len) {\r\n            out[keys[idx]] = values[idx];\r\n            idx += 1;\r\n        }\r\n        return out;\r\n    });\r\n\r\n    /**\r\n     * Creates a new list out of the two supplied by applying the function to each\r\n     * equally-positioned pair in the lists. The returned list is truncated to the\r\n     * length of the shorter of the two input lists.\r\n     *\r\n     * @function\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category List\r\n     * @sig (a,b -> c) -> [a] -> [b] -> [c]\r\n     * @param {Function} fn The function used to combine the two elements into one value.\r\n     * @param {Array} list1 The first array to consider.\r\n     * @param {Array} list2 The second array to consider.\r\n     * @return {Array} The list made by combining same-indexed elements of `list1` and `list2`\r\n     *         using `fn`.\r\n     * @example\r\n     *\r\n     *      var f = (x, y) => {\r\n     *        // ...\r\n     *      };\r\n     *      R.zipWith(f, [1, 2, 3], ['a', 'b', 'c']);\r\n     *      //=> [f(1, 'a'), f(2, 'b'), f(3, 'c')]\r\n     */\r\n    var zipWith = _curry3(function zipWith(fn, a, b) {\r\n        var rv = [];\r\n        var idx = 0;\r\n        var len = Math.min(a.length, b.length);\r\n        while (idx < len) {\r\n            rv[idx] = fn(a[idx], b[idx]);\r\n            idx += 1;\r\n        }\r\n        return rv;\r\n    });\r\n\r\n    /**\r\n     * A function that always returns `false`. Any passed in parameters are ignored.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.9.0\r\n     * @category Function\r\n     * @sig * -> Boolean\r\n     * @param {*}\r\n     * @return {Boolean}\r\n     * @see R.always, R.T\r\n     * @example\r\n     *\r\n     *      R.F(); //=> false\r\n     */\r\n    var F = always(false);\r\n\r\n    /**\r\n     * A function that always returns `true`. Any passed in parameters are ignored.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.9.0\r\n     * @category Function\r\n     * @sig * -> Boolean\r\n     * @param {*}\r\n     * @return {Boolean}\r\n     * @see R.always, R.F\r\n     * @example\r\n     *\r\n     *      R.T(); //=> true\r\n     */\r\n    var T = always(true);\r\n\r\n    /**\r\n     * Copies an object.\r\n     *\r\n     * @private\r\n     * @param {*} value The value to be copied\r\n     * @param {Array} refFrom Array containing the source references\r\n     * @param {Array} refTo Array containing the copied source references\r\n     * @param {Boolean} deep Whether or not to perform deep cloning.\r\n     * @return {*} The copied value.\r\n     */\r\n    var _clone = function _clone(value, refFrom, refTo, deep) {\r\n        var copy = function copy(copiedValue) {\r\n            var len = refFrom.length;\r\n            var idx = 0;\r\n            while (idx < len) {\r\n                if (value === refFrom[idx]) {\r\n                    return refTo[idx];\r\n                }\r\n                idx += 1;\r\n            }\r\n            refFrom[idx + 1] = value;\r\n            refTo[idx + 1] = copiedValue;\r\n            for (var key in value) {\r\n                copiedValue[key] = deep ? _clone(value[key], refFrom, refTo, true) : value[key];\r\n            }\r\n            return copiedValue;\r\n        };\r\n        switch (type(value)) {\r\n        case 'Object':\r\n            return copy({});\r\n        case 'Array':\r\n            return copy([]);\r\n        case 'Date':\r\n            return new Date(value.valueOf());\r\n        case 'RegExp':\r\n            return _cloneRegExp(value);\r\n        default:\r\n            return value;\r\n        }\r\n    };\r\n\r\n    var _createPartialApplicator = function _createPartialApplicator(concat) {\r\n        return _curry2(function (fn, args) {\r\n            return _arity(Math.max(0, fn.length - args.length), function () {\r\n                return fn.apply(this, concat(args, arguments));\r\n            });\r\n        });\r\n    };\r\n\r\n    var _dropLast = function dropLast(n, xs) {\r\n        return take(n < xs.length ? xs.length - n : 0, xs);\r\n    };\r\n\r\n    // Values of other types are only equal if identical.\r\n    var _equals = function _equals(a, b, stackA, stackB) {\r\n        if (identical(a, b)) {\r\n            return true;\r\n        }\r\n        if (type(a) !== type(b)) {\r\n            return false;\r\n        }\r\n        if (a == null || b == null) {\r\n            return false;\r\n        }\r\n        if (typeof a.equals === 'function' || typeof b.equals === 'function') {\r\n            return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);\r\n        }\r\n        switch (type(a)) {\r\n        case 'Arguments':\r\n        case 'Array':\r\n        case 'Object':\r\n            if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {\r\n                return a === b;\r\n            }\r\n            break;\r\n        case 'Boolean':\r\n        case 'Number':\r\n        case 'String':\r\n            if (!(typeof a === typeof b && identical(a.valueOf(), b.valueOf()))) {\r\n                return false;\r\n            }\r\n            break;\r\n        case 'Date':\r\n            if (!identical(a.valueOf(), b.valueOf())) {\r\n                return false;\r\n            }\r\n            break;\r\n        case 'Error':\r\n            return a.name === b.name && a.message === b.message;\r\n        case 'RegExp':\r\n            if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {\r\n                return false;\r\n            }\r\n            break;\r\n        case 'Map':\r\n        case 'Set':\r\n            if (!_equals(_arrayFromIterator(a.entries()), _arrayFromIterator(b.entries()), stackA, stackB)) {\r\n                return false;\r\n            }\r\n            break;\r\n        case 'Int8Array':\r\n        case 'Uint8Array':\r\n        case 'Uint8ClampedArray':\r\n        case 'Int16Array':\r\n        case 'Uint16Array':\r\n        case 'Int32Array':\r\n        case 'Uint32Array':\r\n        case 'Float32Array':\r\n        case 'Float64Array':\r\n            break;\r\n        case 'ArrayBuffer':\r\n            break;\r\n        default:\r\n            // Values of other types are only equal if identical.\r\n            return false;\r\n        }\r\n        var keysA = keys(a);\r\n        if (keysA.length !== keys(b).length) {\r\n            return false;\r\n        }\r\n        var idx = stackA.length - 1;\r\n        while (idx >= 0) {\r\n            if (stackA[idx] === a) {\r\n                return stackB[idx] === b;\r\n            }\r\n            idx -= 1;\r\n        }\r\n        stackA.push(a);\r\n        stackB.push(b);\r\n        idx = keysA.length - 1;\r\n        while (idx >= 0) {\r\n            var key = keysA[idx];\r\n            if (!(_has(key, b) && _equals(b[key], a[key], stackA, stackB))) {\r\n                return false;\r\n            }\r\n            idx -= 1;\r\n        }\r\n        stackA.pop();\r\n        stackB.pop();\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * `_makeFlat` is a helper function that returns a one-level or fully recursive\r\n     * function based on the flag passed in.\r\n     *\r\n     * @private\r\n     */\r\n    var _makeFlat = function _makeFlat(recursive) {\r\n        return function flatt(list) {\r\n            var value, jlen, j;\r\n            var result = [];\r\n            var idx = 0;\r\n            var ilen = list.length;\r\n            while (idx < ilen) {\r\n                if (isArrayLike(list[idx])) {\r\n                    value = recursive ? flatt(list[idx]) : list[idx];\r\n                    j = 0;\r\n                    jlen = value.length;\r\n                    while (j < jlen) {\r\n                        result[result.length] = value[j];\r\n                        j += 1;\r\n                    }\r\n                } else {\r\n                    result[result.length] = list[idx];\r\n                }\r\n                idx += 1;\r\n            }\r\n            return result;\r\n        };\r\n    };\r\n\r\n    var _reduce = function () {\r\n        function _arrayReduce(xf, acc, list) {\r\n            var idx = 0;\r\n            var len = list.length;\r\n            while (idx < len) {\r\n                acc = xf['@@transducer/step'](acc, list[idx]);\r\n                if (acc && acc['@@transducer/reduced']) {\r\n                    acc = acc['@@transducer/value'];\r\n                    break;\r\n                }\r\n                idx += 1;\r\n            }\r\n            return xf['@@transducer/result'](acc);\r\n        }\r\n        function _iterableReduce(xf, acc, iter) {\r\n            var step = iter.next();\r\n            while (!step.done) {\r\n                acc = xf['@@transducer/step'](acc, step.value);\r\n                if (acc && acc['@@transducer/reduced']) {\r\n                    acc = acc['@@transducer/value'];\r\n                    break;\r\n                }\r\n                step = iter.next();\r\n            }\r\n            return xf['@@transducer/result'](acc);\r\n        }\r\n        function _methodReduce(xf, acc, obj) {\r\n            return xf['@@transducer/result'](obj.reduce(bind(xf['@@transducer/step'], xf), acc));\r\n        }\r\n        var symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\r\n        return function _reduce(fn, acc, list) {\r\n            if (typeof fn === 'function') {\r\n                fn = _xwrap(fn);\r\n            }\r\n            if (isArrayLike(list)) {\r\n                return _arrayReduce(fn, acc, list);\r\n            }\r\n            if (typeof list.reduce === 'function') {\r\n                return _methodReduce(fn, acc, list);\r\n            }\r\n            if (list[symIterator] != null) {\r\n                return _iterableReduce(fn, acc, list[symIterator]());\r\n            }\r\n            if (typeof list.next === 'function') {\r\n                return _iterableReduce(fn, acc, list);\r\n            }\r\n            throw new TypeError('reduce: list must be array or iterable');\r\n        };\r\n    }();\r\n\r\n    var _stepCat = function () {\r\n        var _stepCatArray = {\r\n            '@@transducer/init': Array,\r\n            '@@transducer/step': function (xs, x) {\r\n                xs.push(x);\r\n                return xs;\r\n            },\r\n            '@@transducer/result': _identity\r\n        };\r\n        var _stepCatString = {\r\n            '@@transducer/init': String,\r\n            '@@transducer/step': function (a, b) {\r\n                return a + b;\r\n            },\r\n            '@@transducer/result': _identity\r\n        };\r\n        var _stepCatObject = {\r\n            '@@transducer/init': Object,\r\n            '@@transducer/step': function (result, input) {\r\n                return _assign(result, isArrayLike(input) ? objOf(input[0], input[1]) : input);\r\n            },\r\n            '@@transducer/result': _identity\r\n        };\r\n        return function _stepCat(obj) {\r\n            if (_isTransformer(obj)) {\r\n                return obj;\r\n            }\r\n            if (isArrayLike(obj)) {\r\n                return _stepCatArray;\r\n            }\r\n            if (typeof obj === 'string') {\r\n                return _stepCatString;\r\n            }\r\n            if (typeof obj === 'object') {\r\n                return _stepCatObject;\r\n            }\r\n            throw new Error('Cannot create transformer for ' + obj);\r\n        };\r\n    }();\r\n\r\n    var _xdropLastWhile = function () {\r\n        function XDropLastWhile(fn, xf) {\r\n            this.f = fn;\r\n            this.retained = [];\r\n            this.xf = xf;\r\n        }\r\n        XDropLastWhile.prototype['@@transducer/init'] = _xfBase.init;\r\n        XDropLastWhile.prototype['@@transducer/result'] = function (result) {\r\n            this.retained = null;\r\n            return this.xf['@@transducer/result'](result);\r\n        };\r\n        XDropLastWhile.prototype['@@transducer/step'] = function (result, input) {\r\n            return this.f(input) ? this.retain(result, input) : this.flush(result, input);\r\n        };\r\n        XDropLastWhile.prototype.flush = function (result, input) {\r\n            result = _reduce(this.xf['@@transducer/step'], result, this.retained);\r\n            this.retained = [];\r\n            return this.xf['@@transducer/step'](result, input);\r\n        };\r\n        XDropLastWhile.prototype.retain = function (result, input) {\r\n            this.retained.push(input);\r\n            return result;\r\n        };\r\n        return _curry2(function _xdropLastWhile(fn, xf) {\r\n            return new XDropLastWhile(fn, xf);\r\n        });\r\n    }();\r\n\r\n    /**\r\n     * Creates a new list iteration function from an existing one by adding two new\r\n     * parameters to its callback function: the current index, and the entire list.\r\n     *\r\n     * This would turn, for instance, Ramda's simple `map` function into one that\r\n     * more closely resembles `Array.prototype.map`. Note that this will only work\r\n     * for functions in which the iteration callback function is the first\r\n     * parameter, and where the list is the last parameter. (This latter might be\r\n     * unimportant if the list parameter is not used.)\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.15.0\r\n     * @category Function\r\n     * @category List\r\n     * @sig ((a ... -> b) ... -> [a] -> *) -> (a ..., Int, [a] -> b) ... -> [a] -> *)\r\n     * @param {Function} fn A list iteration function that does not pass index or list to its callback\r\n     * @return {Function} An altered list iteration function that passes (item, index, list) to its callback\r\n     * @example\r\n     *\r\n     *      var mapIndexed = R.addIndex(R.map);\r\n     *      mapIndexed((val, idx) => idx + '-' + val, ['f', 'o', 'o', 'b', 'a', 'r']);\r\n     *      //=> ['0-f', '1-o', '2-o', '3-b', '4-a', '5-r']\r\n     */\r\n    var addIndex = _curry1(function addIndex(fn) {\r\n        return curryN(fn.length, function () {\r\n            var idx = 0;\r\n            var origFn = arguments[0];\r\n            var list = arguments[arguments.length - 1];\r\n            var args = _slice(arguments);\r\n            args[0] = function () {\r\n                var result = origFn.apply(this, _concat(arguments, [\r\n                    idx,\r\n                    list\r\n                ]));\r\n                idx += 1;\r\n                return result;\r\n            };\r\n            return fn.apply(this, args);\r\n        });\r\n    });\r\n\r\n    /**\r\n     * Wraps a function of any arity (including nullary) in a function that accepts\r\n     * exactly 2 parameters. Any extraneous parameters will not be passed to the\r\n     * supplied function.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.2.0\r\n     * @category Function\r\n     * @sig (* -> c) -> (a, b -> c)\r\n     * @param {Function} fn The function to wrap.\r\n     * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\r\n     *         arity 2.\r\n     * @example\r\n     *\r\n     *      var takesThreeArgs = function(a, b, c) {\r\n     *        return [a, b, c];\r\n     *      };\r\n     *      takesThreeArgs.length; //=> 3\r\n     *      takesThreeArgs(1, 2, 3); //=> [1, 2, 3]\r\n     *\r\n     *      var takesTwoArgs = R.binary(takesThreeArgs);\r\n     *      takesTwoArgs.length; //=> 2\r\n     *      // Only 2 arguments are passed to the wrapped function\r\n     *      takesTwoArgs(1, 2, 3); //=> [1, 2, undefined]\r\n     */\r\n    var binary = _curry1(function binary(fn) {\r\n        return nAry(2, fn);\r\n    });\r\n\r\n    /**\r\n     * Creates a deep copy of the value which may contain (nested) `Array`s and\r\n     * `Object`s, `Number`s, `String`s, `Boolean`s and `Date`s. `Function`s are not\r\n     * copied, but assigned by their reference.\r\n     *\r\n     * Dispatches to a `clone` method if present.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category Object\r\n     * @sig {*} -> {*}\r\n     * @param {*} value The object or array to clone\r\n     * @return {*} A new object or array.\r\n     * @example\r\n     *\r\n     *      var objects = [{}, {}, {}];\r\n     *      var objectsClone = R.clone(objects);\r\n     *      objects[0] === objectsClone[0]; //=> false\r\n     */\r\n    var clone = _curry1(function clone(value) {\r\n        return value != null && typeof value.clone === 'function' ? value.clone() : _clone(value, [], [], true);\r\n    });\r\n\r\n    /**\r\n     * Returns a curried equivalent of the provided function. The curried function\r\n     * has two unusual capabilities. First, its arguments needn't be provided one\r\n     * at a time. If `f` is a ternary function and `g` is `R.curry(f)`, the\r\n     * following are equivalent:\r\n     *\r\n     *   - `g(1)(2)(3)`\r\n     *   - `g(1)(2, 3)`\r\n     *   - `g(1, 2)(3)`\r\n     *   - `g(1, 2, 3)`\r\n     *\r\n     * Secondly, the special placeholder value `R.__` may be used to specify\r\n     * \"gaps\", allowing partial application of any combination of arguments,\r\n     * regardless of their positions. If `g` is as above and `_` is `R.__`, the\r\n     * following are equivalent:\r\n     *\r\n     *   - `g(1, 2, 3)`\r\n     *   - `g(_, 2, 3)(1)`\r\n     *   - `g(_, _, 3)(1)(2)`\r\n     *   - `g(_, _, 3)(1, 2)`\r\n     *   - `g(_, 2)(1)(3)`\r\n     *   - `g(_, 2)(1, 3)`\r\n     *   - `g(_, 2)(_, 3)(1)`\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category Function\r\n     * @sig (* -> a) -> (* -> a)\r\n     * @param {Function} fn The function to curry.\r\n     * @return {Function} A new, curried function.\r\n     * @see R.curryN\r\n     * @example\r\n     *\r\n     *      var addFourNumbers = (a, b, c, d) => a + b + c + d;\r\n     *\r\n     *      var curriedAddFourNumbers = R.curry(addFourNumbers);\r\n     *      var f = curriedAddFourNumbers(1, 2);\r\n     *      var g = f(3);\r\n     *      g(4); //=> 10\r\n     */\r\n    var curry = _curry1(function curry(fn) {\r\n        return curryN(fn.length, fn);\r\n    });\r\n\r\n    /**\r\n     * Returns all but the first `n` elements of the given list, string, or\r\n     * transducer/transformer (or object with a `drop` method).\r\n     *\r\n     * Dispatches to the `drop` method of the second argument, if present.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category List\r\n     * @sig Number -> [a] -> [a]\r\n     * @sig Number -> String -> String\r\n     * @param {Number} n\r\n     * @param {*} list\r\n     * @return {*}\r\n     * @see R.take, R.transduce\r\n     * @example\r\n     *\r\n     *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\r\n     *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']\r\n     *      R.drop(3, ['foo', 'bar', 'baz']); //=> []\r\n     *      R.drop(4, ['foo', 'bar', 'baz']); //=> []\r\n     *      R.drop(3, 'ramda');               //=> 'da'\r\n     */\r\n    var drop = _curry2(_dispatchable('drop', _xdrop, function drop(n, xs) {\r\n        return slice(Math.max(0, n), Infinity, xs);\r\n    }));\r\n\r\n    /**\r\n     * Returns a list containing all but the last `n` elements of the given `list`.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.16.0\r\n     * @category List\r\n     * @sig Number -> [a] -> [a]\r\n     * @sig Number -> String -> String\r\n     * @param {Number} n The number of elements of `xs` to skip.\r\n     * @param {Array} xs The collection to consider.\r\n     * @return {Array}\r\n     * @see R.takeLast\r\n     * @example\r\n     *\r\n     *      R.dropLast(1, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\r\n     *      R.dropLast(2, ['foo', 'bar', 'baz']); //=> ['foo']\r\n     *      R.dropLast(3, ['foo', 'bar', 'baz']); //=> []\r\n     *      R.dropLast(4, ['foo', 'bar', 'baz']); //=> []\r\n     *      R.dropLast(3, 'ramda');               //=> 'ra'\r\n     */\r\n    var dropLast = _curry2(_dispatchable('dropLast', _xdropLast, _dropLast));\r\n\r\n    /**\r\n     * Returns a new list excluding all the tailing elements of a given list which\r\n     * satisfy the supplied predicate function. It passes each value from the right\r\n     * to the supplied predicate function, skipping elements while the predicate\r\n     * function returns `true`. The predicate function is applied to one argument:\r\n     * *(value)*.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.16.0\r\n     * @category List\r\n     * @sig (a -> Boolean) -> [a] -> [a]\r\n     * @param {Function} fn The function called per iteration.\r\n     * @param {Array} list The collection to iterate over.\r\n     * @return {Array} A new array.\r\n     * @see R.takeLastWhile, R.addIndex\r\n     * @example\r\n     *\r\n     *      var lteThree = x => x <= 3;\r\n     *\r\n     *      R.dropLastWhile(lteThree, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3, 4]\r\n     */\r\n    var dropLastWhile = _curry2(_dispatchable('dropLastWhile', _xdropLastWhile, _dropLastWhile));\r\n\r\n    /**\r\n     * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\r\n     * cyclical data structures.\r\n     *\r\n     * Dispatches symmetrically to the `equals` methods of both arguments, if\r\n     * present.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.15.0\r\n     * @category Relation\r\n     * @sig a -> b -> Boolean\r\n     * @param {*} a\r\n     * @param {*} b\r\n     * @return {Boolean}\r\n     * @example\r\n     *\r\n     *      R.equals(1, 1); //=> true\r\n     *      R.equals(1, '1'); //=> false\r\n     *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\r\n     *\r\n     *      var a = {}; a.v = a;\r\n     *      var b = {}; b.v = b;\r\n     *      R.equals(a, b); //=> true\r\n     */\r\n    var equals = _curry2(function equals(a, b) {\r\n        return _equals(a, b, [], []);\r\n    });\r\n\r\n    /**\r\n     * Takes a predicate and a \"filterable\", and returns a new filterable of the\r\n     * same type containing the members of the given filterable which satisfy the\r\n     * given predicate.\r\n     *\r\n     * Dispatches to the `filter` method of the second argument, if present.\r\n     *\r\n     * Acts as a transducer if a transformer is given in list position.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category List\r\n     * @sig Filterable f => (a -> Boolean) -> f a -> f a\r\n     * @param {Function} pred\r\n     * @param {Array} filterable\r\n     * @return {Array}\r\n     * @see R.reject, R.transduce, R.addIndex\r\n     * @example\r\n     *\r\n     *      var isEven = n => n % 2 === 0;\r\n     *\r\n     *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\r\n     *\r\n     *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\r\n     */\r\n    // else\r\n    var filter = _curry2(_dispatchable('filter', _xfilter, function (pred, filterable) {\r\n        return _isObject(filterable) ? _reduce(function (acc, key) {\r\n            if (pred(filterable[key])) {\r\n                acc[key] = filterable[key];\r\n            }\r\n            return acc;\r\n        }, {}, keys(filterable)) : // else\r\n        _filter(pred, filterable);\r\n    }));\r\n\r\n    /**\r\n     * Returns a new list by pulling every item out of it (and all its sub-arrays)\r\n     * and putting them in a new array, depth-first.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category List\r\n     * @sig [a] -> [b]\r\n     * @param {Array} list The array to consider.\r\n     * @return {Array} The flattened list.\r\n     * @see R.unnest\r\n     * @example\r\n     *\r\n     *      R.flatten([1, 2, [3, 4], 5, [6, [7, 8, [9, [10, 11], 12]]]]);\r\n     *      //=> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\r\n     */\r\n    var flatten = _curry1(_makeFlat(true));\r\n\r\n    /**\r\n     * Returns a new function much like the supplied one, except that the first two\r\n     * arguments' order is reversed.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category Function\r\n     * @sig (a -> b -> c -> ... -> z) -> (b -> a -> c -> ... -> z)\r\n     * @param {Function} fn The function to invoke with its first two parameters reversed.\r\n     * @return {*} The result of invoking `fn` with its first two parameters' order reversed.\r\n     * @example\r\n     *\r\n     *      var mergeThree = (a, b, c) => [].concat(a, b, c);\r\n     *\r\n     *      mergeThree(1, 2, 3); //=> [1, 2, 3]\r\n     *\r\n     *      R.flip(mergeThree)(1, 2, 3); //=> [2, 1, 3]\r\n     */\r\n    var flip = _curry1(function flip(fn) {\r\n        return curry(function (a, b) {\r\n            var args = _slice(arguments);\r\n            args[0] = b;\r\n            args[1] = a;\r\n            return fn.apply(this, args);\r\n        });\r\n    });\r\n\r\n    /**\r\n     * Returns the first element of the given list or string. In some libraries\r\n     * this function is named `first`.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category List\r\n     * @sig [a] -> a | Undefined\r\n     * @sig String -> String\r\n     * @param {Array|String} list\r\n     * @return {*}\r\n     * @see R.tail, R.init, R.last\r\n     * @example\r\n     *\r\n     *      R.head(['fi', 'fo', 'fum']); //=> 'fi'\r\n     *      R.head([]); //=> undefined\r\n     *\r\n     *      R.head('abc'); //=> 'a'\r\n     *      R.head(''); //=> ''\r\n     */\r\n    var head = nth(0);\r\n\r\n    /**\r\n     * Returns all but the last element of the given list or string.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.9.0\r\n     * @category List\r\n     * @sig [a] -> [a]\r\n     * @sig String -> String\r\n     * @param {*} list\r\n     * @return {*}\r\n     * @see R.last, R.head, R.tail\r\n     * @example\r\n     *\r\n     *      R.init([1, 2, 3]);  //=> [1, 2]\r\n     *      R.init([1, 2]);     //=> [1]\r\n     *      R.init([1]);        //=> []\r\n     *      R.init([]);         //=> []\r\n     *\r\n     *      R.init('abc');  //=> 'ab'\r\n     *      R.init('ab');   //=> 'a'\r\n     *      R.init('a');    //=> ''\r\n     *      R.init('');     //=> ''\r\n     */\r\n    var init = slice(0, -1);\r\n\r\n    /**\r\n     * Combines two lists into a set (i.e. no duplicates) composed of those\r\n     * elements common to both lists. Duplication is determined according to the\r\n     * value returned by applying the supplied predicate to two list elements.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category Relation\r\n     * @sig (a -> a -> Boolean) -> [*] -> [*] -> [*]\r\n     * @param {Function} pred A predicate function that determines whether\r\n     *        the two supplied elements are equal.\r\n     * @param {Array} list1 One list of items to compare\r\n     * @param {Array} list2 A second list of items to compare\r\n     * @return {Array} A new list containing those elements common to both lists.\r\n     * @see R.intersection\r\n     * @example\r\n     *\r\n     *      var buffaloSpringfield = [\r\n     *        {id: 824, name: 'Richie Furay'},\r\n     *        {id: 956, name: 'Dewey Martin'},\r\n     *        {id: 313, name: 'Bruce Palmer'},\r\n     *        {id: 456, name: 'Stephen Stills'},\r\n     *        {id: 177, name: 'Neil Young'}\r\n     *      ];\r\n     *      var csny = [\r\n     *        {id: 204, name: 'David Crosby'},\r\n     *        {id: 456, name: 'Stephen Stills'},\r\n     *        {id: 539, name: 'Graham Nash'},\r\n     *        {id: 177, name: 'Neil Young'}\r\n     *      ];\r\n     *\r\n     *      R.intersectionWith(R.eqBy(R.prop('id')), buffaloSpringfield, csny);\r\n     *      //=> [{id: 456, name: 'Stephen Stills'}, {id: 177, name: 'Neil Young'}]\r\n     */\r\n    var intersectionWith = _curry3(function intersectionWith(pred, list1, list2) {\r\n        var lookupList, filteredList;\r\n        if (list1.length > list2.length) {\r\n            lookupList = list1;\r\n            filteredList = list2;\r\n        } else {\r\n            lookupList = list2;\r\n            filteredList = list1;\r\n        }\r\n        var results = [];\r\n        var idx = 0;\r\n        while (idx < filteredList.length) {\r\n            if (_containsWith(pred, filteredList[idx], lookupList)) {\r\n                results[results.length] = filteredList[idx];\r\n            }\r\n            idx += 1;\r\n        }\r\n        return uniqWith(pred, results);\r\n    });\r\n\r\n    /**\r\n     * Transforms the items of the list with the transducer and appends the\r\n     * transformed items to the accumulator using an appropriate iterator function\r\n     * based on the accumulator type.\r\n     *\r\n     * The accumulator can be an array, string, object or a transformer. Iterated\r\n     * items will be appended to arrays and concatenated to strings. Objects will\r\n     * be merged directly or 2-item arrays will be merged as key, value pairs.\r\n     *\r\n     * The accumulator can also be a transformer object that provides a 2-arity\r\n     * reducing iterator function, step, 0-arity initial value function, init, and\r\n     * 1-arity result extraction function result. The step function is used as the\r\n     * iterator function in reduce. The result function is used to convert the\r\n     * final accumulator into the return type and in most cases is R.identity. The\r\n     * init function is used to provide the initial accumulator.\r\n     *\r\n     * The iteration is performed with R.reduce after initializing the transducer.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.12.0\r\n     * @category List\r\n     * @sig a -> (b -> b) -> [c] -> a\r\n     * @param {*} acc The initial accumulator value.\r\n     * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\r\n     * @param {Array} list The list to iterate over.\r\n     * @return {*} The final, accumulated value.\r\n     * @example\r\n     *\r\n     *      var numbers = [1, 2, 3, 4];\r\n     *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\r\n     *\r\n     *      R.into([], transducer, numbers); //=> [2, 3]\r\n     *\r\n     *      var intoArray = R.into([]);\r\n     *      intoArray(transducer, numbers); //=> [2, 3]\r\n     */\r\n    var into = _curry3(function into(acc, xf, list) {\r\n        return _isTransformer(acc) ? _reduce(xf(acc), acc['@@transducer/init'](), list) : _reduce(xf(_stepCat(acc)), _clone(acc, [], [], false), list);\r\n    });\r\n\r\n    /**\r\n     * Same as R.invertObj, however this accounts for objects with duplicate values\r\n     * by putting the values into an array.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.9.0\r\n     * @category Object\r\n     * @sig {s: x} -> {x: [ s, ... ]}\r\n     * @param {Object} obj The object or array to invert\r\n     * @return {Object} out A new object with keys\r\n     * in an array.\r\n     * @example\r\n     *\r\n     *      var raceResultsByFirstName = {\r\n     *        first: 'alice',\r\n     *        second: 'jake',\r\n     *        third: 'alice',\r\n     *      };\r\n     *      R.invert(raceResultsByFirstName);\r\n     *      //=> { 'alice': ['first', 'third'], 'jake':['second'] }\r\n     */\r\n    var invert = _curry1(function invert(obj) {\r\n        var props = keys(obj);\r\n        var len = props.length;\r\n        var idx = 0;\r\n        var out = {};\r\n        while (idx < len) {\r\n            var key = props[idx];\r\n            var val = obj[key];\r\n            var list = _has(val, out) ? out[val] : out[val] = [];\r\n            list[list.length] = key;\r\n            idx += 1;\r\n        }\r\n        return out;\r\n    });\r\n\r\n    /**\r\n     * Returns a new object with the keys of the given object as values, and the\r\n     * values of the given object, which are coerced to strings, as keys. Note\r\n     * that the last key found is preferred when handling the same value.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.9.0\r\n     * @category Object\r\n     * @sig {s: x} -> {x: s}\r\n     * @param {Object} obj The object or array to invert\r\n     * @return {Object} out A new object\r\n     * @example\r\n     *\r\n     *      var raceResults = {\r\n     *        first: 'alice',\r\n     *        second: 'jake'\r\n     *      };\r\n     *      R.invertObj(raceResults);\r\n     *      //=> { 'alice': 'first', 'jake':'second' }\r\n     *\r\n     *      // Alternatively:\r\n     *      var raceResults = ['alice', 'jake'];\r\n     *      R.invertObj(raceResults);\r\n     *      //=> { 'alice': '0', 'jake':'1' }\r\n     */\r\n    var invertObj = _curry1(function invertObj(obj) {\r\n        var props = keys(obj);\r\n        var len = props.length;\r\n        var idx = 0;\r\n        var out = {};\r\n        while (idx < len) {\r\n            var key = props[idx];\r\n            out[obj[key]] = key;\r\n            idx += 1;\r\n        }\r\n        return out;\r\n    });\r\n\r\n    /**\r\n     * Returns `true` if the given value is its type's empty value; `false`\r\n     * otherwise.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category Logic\r\n     * @sig a -> Boolean\r\n     * @param {*} x\r\n     * @return {Boolean}\r\n     * @see R.empty\r\n     * @example\r\n     *\r\n     *      R.isEmpty([1, 2, 3]);   //=> false\r\n     *      R.isEmpty([]);          //=> true\r\n     *      R.isEmpty('');          //=> true\r\n     *      R.isEmpty(null);        //=> false\r\n     *      R.isEmpty({});          //=> true\r\n     *      R.isEmpty({length: 0}); //=> false\r\n     */\r\n    var isEmpty = _curry1(function isEmpty(x) {\r\n        return x != null && equals(x, empty(x));\r\n    });\r\n\r\n    /**\r\n     * Returns the last element of the given list or string.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.4\r\n     * @category List\r\n     * @sig [a] -> a | Undefined\r\n     * @sig String -> String\r\n     * @param {*} list\r\n     * @return {*}\r\n     * @see R.init, R.head, R.tail\r\n     * @example\r\n     *\r\n     *      R.last(['fi', 'fo', 'fum']); //=> 'fum'\r\n     *      R.last([]); //=> undefined\r\n     *\r\n     *      R.last('abc'); //=> 'c'\r\n     *      R.last(''); //=> ''\r\n     */\r\n    var last = nth(-1);\r\n\r\n    /**\r\n     * Returns the position of the last occurrence of an item in an array, or -1 if\r\n     * the item is not included in the array. `R.equals` is used to determine\r\n     * equality.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category List\r\n     * @sig a -> [a] -> Number\r\n     * @param {*} target The item to find.\r\n     * @param {Array} xs The array to search in.\r\n     * @return {Number} the index of the target, or -1 if the target is not found.\r\n     * @see R.indexOf\r\n     * @example\r\n     *\r\n     *      R.lastIndexOf(3, [-1,3,3,0,1,2,3,4]); //=> 6\r\n     *      R.lastIndexOf(10, [1,2,3,4]); //=> -1\r\n     */\r\n    var lastIndexOf = _curry2(function lastIndexOf(target, xs) {\r\n        if (typeof xs.lastIndexOf === 'function' && !_isArray(xs)) {\r\n            return xs.lastIndexOf(target);\r\n        } else {\r\n            var idx = xs.length - 1;\r\n            while (idx >= 0) {\r\n                if (equals(xs[idx], target)) {\r\n                    return idx;\r\n                }\r\n                idx -= 1;\r\n            }\r\n            return -1;\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Takes a function and\r\n     * a [functor](https://github.com/fantasyland/fantasy-land#functor),\r\n     * applies the function to each of the functor's values, and returns\r\n     * a functor of the same shape.\r\n     *\r\n     * Ramda provides suitable `map` implementations for `Array` and `Object`,\r\n     * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\r\n     *\r\n     * Dispatches to the `map` method of the second argument, if present.\r\n     *\r\n     * Acts as a transducer if a transformer is given in list position.\r\n     *\r\n     * Also treats functions as functors and will compose them together.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category List\r\n     * @sig Functor f => (a -> b) -> f a -> f b\r\n     * @param {Function} fn The function to be called on every element of the input `list`.\r\n     * @param {Array} list The list to be iterated over.\r\n     * @return {Array} The new list.\r\n     * @see R.transduce, R.addIndex\r\n     * @example\r\n     *\r\n     *      var double = x => x * 2;\r\n     *\r\n     *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\r\n     *\r\n     *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\r\n     */\r\n    var map = _curry2(_dispatchable('map', _xmap, function map(fn, functor) {\r\n        switch (Object.prototype.toString.call(functor)) {\r\n        case '[object Function]':\r\n            return curryN(functor.length, function () {\r\n                return fn.call(this, functor.apply(this, arguments));\r\n            });\r\n        case '[object Object]':\r\n            return _reduce(function (acc, key) {\r\n                acc[key] = fn(functor[key]);\r\n                return acc;\r\n            }, {}, keys(functor));\r\n        default:\r\n            return _map(fn, functor);\r\n        }\r\n    }));\r\n\r\n    /**\r\n     * An Object-specific version of `map`. The function is applied to three\r\n     * arguments: *(value, key, obj)*. If only the value is significant, use\r\n     * `map` instead.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.9.0\r\n     * @category Object\r\n     * @sig ((*, String, Object) -> *) -> Object -> Object\r\n     * @param {Function} fn\r\n     * @param {Object} obj\r\n     * @return {Object}\r\n     * @see R.map\r\n     * @example\r\n     *\r\n     *      var values = { x: 1, y: 2, z: 3 };\r\n     *      var prependKeyAndDouble = (num, key, obj) => key + (num * 2);\r\n     *\r\n     *      R.mapObjIndexed(prependKeyAndDouble, values); //=> { x: 'x2', y: 'y4', z: 'z6' }\r\n     */\r\n    var mapObjIndexed = _curry2(function mapObjIndexed(fn, obj) {\r\n        return _reduce(function (acc, key) {\r\n            acc[key] = fn(obj[key], key, obj);\r\n            return acc;\r\n        }, {}, keys(obj));\r\n    });\r\n\r\n    /**\r\n     * Creates a new object with the own properties of the two provided objects. If\r\n     * a key exists in both objects, the provided function is applied to the values\r\n     * associated with the key in each object, with the result being used as the\r\n     * value associated with the key in the returned object. The key will be\r\n     * excluded from the returned object if the resulting value is `undefined`.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.19.0\r\n     * @category Object\r\n     * @sig (a -> a -> a) -> {a} -> {a} -> {a}\r\n     * @param {Function} fn\r\n     * @param {Object} l\r\n     * @param {Object} r\r\n     * @return {Object}\r\n     * @see R.merge, R.mergeWithKey\r\n     * @example\r\n     *\r\n     *      R.mergeWith(R.concat,\r\n     *                  { a: true, values: [10, 20] },\r\n     *                  { b: true, values: [15, 35] });\r\n     *      //=> { a: true, b: true, values: [10, 20, 15, 35] }\r\n     */\r\n    var mergeWith = _curry3(function mergeWith(fn, l, r) {\r\n        return mergeWithKey(function (_, _l, _r) {\r\n            return fn(_l, _r);\r\n        }, l, r);\r\n    });\r\n\r\n    /**\r\n     * Takes a function `f` and a list of arguments, and returns a function `g`.\r\n     * When applied, `g` returns the result of applying `f` to the arguments\r\n     * provided initially followed by the arguments provided to `g`.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.10.0\r\n     * @category Function\r\n     * @sig ((a, b, c, ..., n) -> x) -> [a, b, c, ...] -> ((d, e, f, ..., n) -> x)\r\n     * @param {Function} f\r\n     * @param {Array} args\r\n     * @return {Function}\r\n     * @see R.partialRight\r\n     * @example\r\n     *\r\n     *      var multiply = (a, b) => a * b;\r\n     *      var double = R.partial(multiply, [2]);\r\n     *      double(2); //=> 4\r\n     *\r\n     *      var greet = (salutation, title, firstName, lastName) =>\r\n     *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\r\n     *\r\n     *      var sayHello = R.partial(greet, ['Hello']);\r\n     *      var sayHelloToMs = R.partial(sayHello, ['Ms.']);\r\n     *      sayHelloToMs('Jane', 'Jones'); //=> 'Hello, Ms. Jane Jones!'\r\n     */\r\n    var partial = _createPartialApplicator(_concat);\r\n\r\n    /**\r\n     * Takes a function `f` and a list of arguments, and returns a function `g`.\r\n     * When applied, `g` returns the result of applying `f` to the arguments\r\n     * provided to `g` followed by the arguments provided initially.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.10.0\r\n     * @category Function\r\n     * @sig ((a, b, c, ..., n) -> x) -> [d, e, f, ..., n] -> ((a, b, c, ...) -> x)\r\n     * @param {Function} f\r\n     * @param {Array} args\r\n     * @return {Function}\r\n     * @see R.partial\r\n     * @example\r\n     *\r\n     *      var greet = (salutation, title, firstName, lastName) =>\r\n     *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\r\n     *\r\n     *      var greetMsJaneJones = R.partialRight(greet, ['Ms.', 'Jane', 'Jones']);\r\n     *\r\n     *      greetMsJaneJones('Hello'); //=> 'Hello, Ms. Jane Jones!'\r\n     */\r\n    var partialRight = _createPartialApplicator(flip(_concat));\r\n\r\n    /**\r\n     * Determines whether a nested path on an object has a specific value, in\r\n     * `R.equals` terms. Most likely used to filter a list.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.7.0\r\n     * @category Relation\r\n     * @sig [String] -> * -> {String: *} -> Boolean\r\n     * @param {Array} path The path of the nested property to use\r\n     * @param {*} val The value to compare the nested property with\r\n     * @param {Object} obj The object to check the nested property in\r\n     * @return {Boolean} `true` if the value equals the nested object property,\r\n     *         `false` otherwise.\r\n     * @example\r\n     *\r\n     *      var user1 = { address: { zipCode: 90210 } };\r\n     *      var user2 = { address: { zipCode: 55555 } };\r\n     *      var user3 = { name: 'Bob' };\r\n     *      var users = [ user1, user2, user3 ];\r\n     *      var isFamous = R.pathEq(['address', 'zipCode'], 90210);\r\n     *      R.filter(isFamous, users); //=> [ user1 ]\r\n     */\r\n    var pathEq = _curry3(function pathEq(_path, val, obj) {\r\n        return equals(path(_path, obj), val);\r\n    });\r\n\r\n    /**\r\n     * Returns a new list by plucking the same named property off all objects in\r\n     * the list supplied.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category List\r\n     * @sig k -> [{k: v}] -> [v]\r\n     * @param {Number|String} key The key name to pluck off of each object.\r\n     * @param {Array} list The array to consider.\r\n     * @return {Array} The list of values for the given key.\r\n     * @see R.props\r\n     * @example\r\n     *\r\n     *      R.pluck('a')([{a: 1}, {a: 2}]); //=> [1, 2]\r\n     *      R.pluck(0)([[1, 2], [3, 4]]);   //=> [1, 3]\r\n     */\r\n    var pluck = _curry2(function pluck(p, list) {\r\n        return map(prop(p), list);\r\n    });\r\n\r\n    /**\r\n     * Reasonable analog to SQL `select` statement.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category Object\r\n     * @category Relation\r\n     * @sig [k] -> [{k: v}] -> [{k: v}]\r\n     * @param {Array} props The property names to project\r\n     * @param {Array} objs The objects to query\r\n     * @return {Array} An array of objects with just the `props` properties.\r\n     * @example\r\n     *\r\n     *      var abby = {name: 'Abby', age: 7, hair: 'blond', grade: 2};\r\n     *      var fred = {name: 'Fred', age: 12, hair: 'brown', grade: 7};\r\n     *      var kids = [abby, fred];\r\n     *      R.project(['name', 'grade'], kids); //=> [{name: 'Abby', grade: 2}, {name: 'Fred', grade: 7}]\r\n     */\r\n    // passing `identity` gives correct arity\r\n    var project = useWith(_map, [\r\n        pickAll,\r\n        identity\r\n    ]);\r\n\r\n    /**\r\n     * Returns `true` if the specified object property is equal, in `R.equals`\r\n     * terms, to the given value; `false` otherwise.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category Relation\r\n     * @sig String -> a -> Object -> Boolean\r\n     * @param {String} name\r\n     * @param {*} val\r\n     * @param {*} obj\r\n     * @return {Boolean}\r\n     * @see R.equals, R.propSatisfies\r\n     * @example\r\n     *\r\n     *      var abby = {name: 'Abby', age: 7, hair: 'blond'};\r\n     *      var fred = {name: 'Fred', age: 12, hair: 'brown'};\r\n     *      var rusty = {name: 'Rusty', age: 10, hair: 'brown'};\r\n     *      var alois = {name: 'Alois', age: 15, disposition: 'surly'};\r\n     *      var kids = [abby, fred, rusty, alois];\r\n     *      var hasBrownHair = R.propEq('hair', 'brown');\r\n     *      R.filter(hasBrownHair, kids); //=> [fred, rusty]\r\n     */\r\n    var propEq = _curry3(function propEq(name, val, obj) {\r\n        return equals(val, obj[name]);\r\n    });\r\n\r\n    /**\r\n     * Returns a single item by iterating through the list, successively calling\r\n     * the iterator function and passing it an accumulator value and the current\r\n     * value from the array, and then passing the result to the next call.\r\n     *\r\n     * The iterator function receives two values: *(acc, value)*. It may use\r\n     * `R.reduced` to shortcut the iteration.\r\n     *\r\n     * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\r\n     * arrays), unlike the native `Array.prototype.reduce` method. For more details\r\n     * on this behavior, see:\r\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\r\n     *\r\n     * Dispatches to the `reduce` method of the third argument, if present.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category List\r\n     * @sig ((a, b) -> a) -> a -> [b] -> a\r\n     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\r\n     *        current element from the array.\r\n     * @param {*} acc The accumulator value.\r\n     * @param {Array} list The list to iterate over.\r\n     * @return {*} The final, accumulated value.\r\n     * @see R.reduced, R.addIndex\r\n     * @example\r\n     *\r\n     *      var numbers = [1, 2, 3];\r\n     *      var plus = (a, b) => a + b;\r\n     *\r\n     *      R.reduce(plus, 10, numbers); //=> 16\r\n     */\r\n    var reduce = _curry3(_reduce);\r\n\r\n    /**\r\n     * Groups the elements of the list according to the result of calling\r\n     * the String-returning function `keyFn` on each element and reduces the elements\r\n     * of each group to a single value via the reducer function `valueFn`.\r\n     *\r\n     * This function is basically a more general `groupBy` function.\r\n     *\r\n     * Acts as a transducer if a transformer is given in list position.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.20.0\r\n     * @category List\r\n     * @sig ((a, b) -> a) -> a -> (b -> String) -> [b] -> {String: a}\r\n     * @param {Function} valueFn The function that reduces the elements of each group to a single\r\n     *        value. Receives two values, accumulator for a particular group and the current element.\r\n     * @param {*} acc The (initial) accumulator value for each group.\r\n     * @param {Function} keyFn The function that maps the list's element into a key.\r\n     * @param {Array} list The array to group.\r\n     * @return {Object} An object with the output of `keyFn` for keys, mapped to the output of\r\n     *         `valueFn` for elements which produced that key when passed to `keyFn`.\r\n     * @see R.groupBy, R.reduce\r\n     * @example\r\n     *\r\n     *      var reduceToNamesBy = R.reduceBy((acc, student) => acc.concat(student.name), []);\r\n     *      var namesByGrade = reduceToNamesBy(function(student) {\r\n     *        var score = student.score;\r\n     *        return score < 65 ? 'F' :\r\n     *               score < 70 ? 'D' :\r\n     *               score < 80 ? 'C' :\r\n     *               score < 90 ? 'B' : 'A';\r\n     *      });\r\n     *      var students = [{name: 'Lucy', score: 92},\r\n     *                      {name: 'Drew', score: 85},\r\n     *                      // ...\r\n     *                      {name: 'Bart', score: 62}];\r\n     *      namesByGrade(students);\r\n     *      // {\r\n     *      //   'A': ['Lucy'],\r\n     *      //   'B': ['Drew']\r\n     *      //   // ...,\r\n     *      //   'F': ['Bart']\r\n     *      // }\r\n     */\r\n    var reduceBy = _curryN(4, [], _dispatchable('reduceBy', _xreduceBy, function reduceBy(valueFn, valueAcc, keyFn, list) {\r\n        return _reduce(function (acc, elt) {\r\n            var key = keyFn(elt);\r\n            acc[key] = valueFn(_has(key, acc) ? acc[key] : valueAcc, elt);\r\n            return acc;\r\n        }, {}, list);\r\n    }));\r\n\r\n    /**\r\n     * Like `reduce`, `reduceWhile` returns a single item by iterating through\r\n     * the list, successively calling the iterator function. `reduceWhile` also\r\n     * takes a predicate that is evaluated before each step. If the predicate returns\r\n     * `false`, it \"short-circuits\" the iteration and returns the current value\r\n     * of the accumulator.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.22.0\r\n     * @category List\r\n     * @sig ((a, b) -> Boolean) -> ((a, b) -> a) -> a -> [b] -> a\r\n     * @param {Function} pred The predicate. It is passed the accumulator and the\r\n     *        current element.\r\n     * @param {Function} fn The iterator function. Receives two values, the\r\n     *        accumulator and the current element.\r\n     * @param {*} a The accumulator value.\r\n     * @param {Array} list The list to iterate over.\r\n     * @return {*} The final, accumulated value.\r\n     * @see R.reduce, R.reduced\r\n     * @example\r\n     *\r\n     *      var isOdd = (acc, x) => x % 2 === 1;\r\n     *      var xs = [1, 3, 5, 60, 777, 800];\r\n     *      R.reduceWhile(isOdd, R.add, 0, xs); //=> 9\r\n     *\r\n     *      var ys = [2, 4, 6]\r\n     *      R.reduceWhile(isOdd, R.add, 111, ys); //=> 111\r\n     */\r\n    var reduceWhile = _curryN(4, [], function _reduceWhile(pred, fn, a, list) {\r\n        return _reduce(function (acc, x) {\r\n            return pred(acc, x) ? fn(acc, x) : _reduced(acc);\r\n        }, a, list);\r\n    });\r\n\r\n    /**\r\n     * The complement of `filter`.\r\n     *\r\n     * Acts as a transducer if a transformer is given in list position.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category List\r\n     * @sig Filterable f => (a -> Boolean) -> f a -> f a\r\n     * @param {Function} pred\r\n     * @param {Array} filterable\r\n     * @return {Array}\r\n     * @see R.filter, R.transduce, R.addIndex\r\n     * @example\r\n     *\r\n     *      var isOdd = (n) => n % 2 === 1;\r\n     *\r\n     *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\r\n     *\r\n     *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\r\n     */\r\n    var reject = _curry2(function reject(pred, filterable) {\r\n        return filter(_complement(pred), filterable);\r\n    });\r\n\r\n    /**\r\n     * Returns a fixed list of size `n` containing a specified identical value.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.1\r\n     * @category List\r\n     * @sig a -> n -> [a]\r\n     * @param {*} value The value to repeat.\r\n     * @param {Number} n The desired size of the output list.\r\n     * @return {Array} A new array containing `n` `value`s.\r\n     * @example\r\n     *\r\n     *      R.repeat('hi', 5); //=> ['hi', 'hi', 'hi', 'hi', 'hi']\r\n     *\r\n     *      var obj = {};\r\n     *      var repeatedObjs = R.repeat(obj, 5); //=> [{}, {}, {}, {}, {}]\r\n     *      repeatedObjs[0] === repeatedObjs[1]; //=> true\r\n     */\r\n    var repeat = _curry2(function repeat(value, n) {\r\n        return times(always(value), n);\r\n    });\r\n\r\n    /**\r\n     * Adds together all the elements of a list.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category Math\r\n     * @sig [Number] -> Number\r\n     * @param {Array} list An array of numbers\r\n     * @return {Number} The sum of all the numbers in the list.\r\n     * @see R.reduce\r\n     * @example\r\n     *\r\n     *      R.sum([2,4,6,8,100,1]); //=> 121\r\n     */\r\n    var sum = reduce(add, 0);\r\n\r\n    /**\r\n     * Returns a new list containing the last `n` elements of the given list.\r\n     * If `n > list.length`, returns a list of `list.length` elements.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.16.0\r\n     * @category List\r\n     * @sig Number -> [a] -> [a]\r\n     * @sig Number -> String -> String\r\n     * @param {Number} n The number of elements to return.\r\n     * @param {Array} xs The collection to consider.\r\n     * @return {Array}\r\n     * @see R.dropLast\r\n     * @example\r\n     *\r\n     *      R.takeLast(1, ['foo', 'bar', 'baz']); //=> ['baz']\r\n     *      R.takeLast(2, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\r\n     *      R.takeLast(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\r\n     *      R.takeLast(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\r\n     *      R.takeLast(3, 'ramda');               //=> 'mda'\r\n     */\r\n    var takeLast = _curry2(function takeLast(n, xs) {\r\n        return drop(n >= 0 ? xs.length - n : 0, xs);\r\n    });\r\n\r\n    /**\r\n     * Initializes a transducer using supplied iterator function. Returns a single\r\n     * item by iterating through the list, successively calling the transformed\r\n     * iterator function and passing it an accumulator value and the current value\r\n     * from the array, and then passing the result to the next call.\r\n     *\r\n     * The iterator function receives two values: *(acc, value)*. It will be\r\n     * wrapped as a transformer to initialize the transducer. A transformer can be\r\n     * passed directly in place of an iterator function. In both cases, iteration\r\n     * may be stopped early with the `R.reduced` function.\r\n     *\r\n     * A transducer is a function that accepts a transformer and returns a\r\n     * transformer and can be composed directly.\r\n     *\r\n     * A transformer is an an object that provides a 2-arity reducing iterator\r\n     * function, step, 0-arity initial value function, init, and 1-arity result\r\n     * extraction function, result. The step function is used as the iterator\r\n     * function in reduce. The result function is used to convert the final\r\n     * accumulator into the return type and in most cases is R.identity. The init\r\n     * function can be used to provide an initial accumulator, but is ignored by\r\n     * transduce.\r\n     *\r\n     * The iteration is performed with R.reduce after initializing the transducer.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.12.0\r\n     * @category List\r\n     * @sig (c -> c) -> (a,b -> a) -> a -> [b] -> a\r\n     * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\r\n     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\r\n     *        current element from the array. Wrapped as transformer, if necessary, and used to\r\n     *        initialize the transducer\r\n     * @param {*} acc The initial accumulator value.\r\n     * @param {Array} list The list to iterate over.\r\n     * @return {*} The final, accumulated value.\r\n     * @see R.reduce, R.reduced, R.into\r\n     * @example\r\n     *\r\n     *      var numbers = [1, 2, 3, 4];\r\n     *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\r\n     *\r\n     *      R.transduce(transducer, R.flip(R.append), [], numbers); //=> [2, 3]\r\n     */\r\n    var transduce = curryN(4, function transduce(xf, fn, acc, list) {\r\n        return _reduce(xf(typeof fn === 'function' ? _xwrap(fn) : fn), acc, list);\r\n    });\r\n\r\n    /**\r\n     * Combines two lists into a set (i.e. no duplicates) composed of the elements\r\n     * of each list. Duplication is determined according to the value returned by\r\n     * applying the supplied predicate to two list elements.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category Relation\r\n     * @sig (a -> a -> Boolean) -> [*] -> [*] -> [*]\r\n     * @param {Function} pred A predicate used to test whether two items are equal.\r\n     * @param {Array} list1 The first list.\r\n     * @param {Array} list2 The second list.\r\n     * @return {Array} The first and second lists concatenated, with\r\n     *         duplicates removed.\r\n     * @see R.union\r\n     * @example\r\n     *\r\n     *      var l1 = [{a: 1}, {a: 2}];\r\n     *      var l2 = [{a: 1}, {a: 4}];\r\n     *      R.unionWith(R.eqBy(R.prop('a')), l1, l2); //=> [{a: 1}, {a: 2}, {a: 4}]\r\n     */\r\n    var unionWith = _curry3(function unionWith(pred, list1, list2) {\r\n        return uniqWith(pred, _concat(list1, list2));\r\n    });\r\n\r\n    /**\r\n     * Takes a spec object and a test object; returns true if the test satisfies\r\n     * the spec, false otherwise. An object satisfies the spec if, for each of the\r\n     * spec's own properties, accessing that property of the object gives the same\r\n     * value (in `R.equals` terms) as accessing that property of the spec.\r\n     *\r\n     * `whereEq` is a specialization of [`where`](#where).\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.14.0\r\n     * @category Object\r\n     * @sig {String: *} -> {String: *} -> Boolean\r\n     * @param {Object} spec\r\n     * @param {Object} testObj\r\n     * @return {Boolean}\r\n     * @see R.where\r\n     * @example\r\n     *\r\n     *      // pred :: Object -> Boolean\r\n     *      var pred = R.whereEq({a: 1, b: 2});\r\n     *\r\n     *      pred({a: 1});              //=> false\r\n     *      pred({a: 1, b: 2});        //=> true\r\n     *      pred({a: 1, b: 2, c: 3});  //=> true\r\n     *      pred({a: 1, b: 1});        //=> false\r\n     */\r\n    var whereEq = _curry2(function whereEq(spec, testObj) {\r\n        return where(map(equals, spec), testObj);\r\n    });\r\n\r\n    var _flatCat = function () {\r\n        var preservingReduced = function (xf) {\r\n            return {\r\n                '@@transducer/init': _xfBase.init,\r\n                '@@transducer/result': function (result) {\r\n                    return xf['@@transducer/result'](result);\r\n                },\r\n                '@@transducer/step': function (result, input) {\r\n                    var ret = xf['@@transducer/step'](result, input);\r\n                    return ret['@@transducer/reduced'] ? _forceReduced(ret) : ret;\r\n                }\r\n            };\r\n        };\r\n        return function _xcat(xf) {\r\n            var rxf = preservingReduced(xf);\r\n            return {\r\n                '@@transducer/init': _xfBase.init,\r\n                '@@transducer/result': function (result) {\r\n                    return rxf['@@transducer/result'](result);\r\n                },\r\n                '@@transducer/step': function (result, input) {\r\n                    return !isArrayLike(input) ? _reduce(rxf, result, [input]) : _reduce(rxf, result, input);\r\n                }\r\n            };\r\n        };\r\n    }();\r\n\r\n    // Array.prototype.indexOf doesn't exist below IE9\r\n    // manually crawl the list to distinguish between +0 and -0\r\n    // NaN\r\n    // non-zero numbers can utilise Set\r\n    // all these types can utilise Set\r\n    // null can utilise Set\r\n    // anything else not covered above, defer to R.equals\r\n    var _indexOf = function _indexOf(list, a, idx) {\r\n        var inf, item;\r\n        // Array.prototype.indexOf doesn't exist below IE9\r\n        if (typeof list.indexOf === 'function') {\r\n            switch (typeof a) {\r\n            case 'number':\r\n                if (a === 0) {\r\n                    // manually crawl the list to distinguish between +0 and -0\r\n                    inf = 1 / a;\r\n                    while (idx < list.length) {\r\n                        item = list[idx];\r\n                        if (item === 0 && 1 / item === inf) {\r\n                            return idx;\r\n                        }\r\n                        idx += 1;\r\n                    }\r\n                    return -1;\r\n                } else if (a !== a) {\r\n                    // NaN\r\n                    while (idx < list.length) {\r\n                        item = list[idx];\r\n                        if (typeof item === 'number' && item !== item) {\r\n                            return idx;\r\n                        }\r\n                        idx += 1;\r\n                    }\r\n                    return -1;\r\n                }\r\n                // non-zero numbers can utilise Set\r\n                return list.indexOf(a, idx);\r\n            // all these types can utilise Set\r\n            case 'string':\r\n            case 'boolean':\r\n            case 'function':\r\n            case 'undefined':\r\n                return list.indexOf(a, idx);\r\n            case 'object':\r\n                if (a === null) {\r\n                    // null can utilise Set\r\n                    return list.indexOf(a, idx);\r\n                }\r\n            }\r\n        }\r\n        // anything else not covered above, defer to R.equals\r\n        while (idx < list.length) {\r\n            if (equals(list[idx], a)) {\r\n                return idx;\r\n            }\r\n            idx += 1;\r\n        }\r\n        return -1;\r\n    };\r\n\r\n    var _xchain = _curry2(function _xchain(f, xf) {\r\n        return map(f, _flatCat(xf));\r\n    });\r\n\r\n    /**\r\n     * Takes a list of predicates and returns a predicate that returns true for a\r\n     * given list of arguments if every one of the provided predicates is satisfied\r\n     * by those arguments.\r\n     *\r\n     * The function returned is a curried function whose arity matches that of the\r\n     * highest-arity predicate.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.9.0\r\n     * @category Logic\r\n     * @sig [(*... -> Boolean)] -> (*... -> Boolean)\r\n     * @param {Array} preds\r\n     * @return {Function}\r\n     * @see R.anyPass\r\n     * @example\r\n     *\r\n     *      var isQueen = R.propEq('rank', 'Q');\r\n     *      var isSpade = R.propEq('suit', '♠︎');\r\n     *      var isQueenOfSpades = R.allPass([isQueen, isSpade]);\r\n     *\r\n     *      isQueenOfSpades({rank: 'Q', suit: '♣︎'}); //=> false\r\n     *      isQueenOfSpades({rank: 'Q', suit: '♠︎'}); //=> true\r\n     */\r\n    var allPass = _curry1(function allPass(preds) {\r\n        return curryN(reduce(max, 0, pluck('length', preds)), function () {\r\n            var idx = 0;\r\n            var len = preds.length;\r\n            while (idx < len) {\r\n                if (!preds[idx].apply(this, arguments)) {\r\n                    return false;\r\n                }\r\n                idx += 1;\r\n            }\r\n            return true;\r\n        });\r\n    });\r\n\r\n    /**\r\n     * Takes a list of predicates and returns a predicate that returns true for a\r\n     * given list of arguments if at least one of the provided predicates is\r\n     * satisfied by those arguments.\r\n     *\r\n     * The function returned is a curried function whose arity matches that of the\r\n     * highest-arity predicate.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.9.0\r\n     * @category Logic\r\n     * @sig [(*... -> Boolean)] -> (*... -> Boolean)\r\n     * @param {Array} preds\r\n     * @return {Function}\r\n     * @see R.allPass\r\n     * @example\r\n     *\r\n     *      var gte = R.anyPass([R.gt, R.equals]);\r\n     *\r\n     *      gte(3, 2); //=> true\r\n     *      gte(2, 2); //=> true\r\n     *      gte(2, 3); //=> false\r\n     */\r\n    var anyPass = _curry1(function anyPass(preds) {\r\n        return curryN(reduce(max, 0, pluck('length', preds)), function () {\r\n            var idx = 0;\r\n            var len = preds.length;\r\n            while (idx < len) {\r\n                if (preds[idx].apply(this, arguments)) {\r\n                    return true;\r\n                }\r\n                idx += 1;\r\n            }\r\n            return false;\r\n        });\r\n    });\r\n\r\n    /**\r\n     * ap applies a list of functions to a list of values.\r\n     *\r\n     * Dispatches to the `ap` method of the second argument, if present. Also\r\n     * treats curried functions as applicatives.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.3.0\r\n     * @category Function\r\n     * @sig [a -> b] -> [a] -> [b]\r\n     * @sig Apply f => f (a -> b) -> f a -> f b\r\n     * @param {Array} fns An array of functions\r\n     * @param {Array} vs An array of values\r\n     * @return {Array} An array of results of applying each of `fns` to all of `vs` in turn.\r\n     * @example\r\n     *\r\n     *      R.ap([R.multiply(2), R.add(3)], [1,2,3]); //=> [2, 4, 6, 4, 5, 6]\r\n     */\r\n    // else\r\n    var ap = _curry2(function ap(applicative, fn) {\r\n        return typeof applicative.ap === 'function' ? applicative.ap(fn) : typeof applicative === 'function' ? function (x) {\r\n            return applicative(x)(fn(x));\r\n        } : // else\r\n        _reduce(function (acc, f) {\r\n            return _concat(acc, map(f, fn));\r\n        }, [], applicative);\r\n    });\r\n\r\n    /**\r\n     * Given a spec object recursively mapping properties to functions, creates a\r\n     * function producing an object of the same structure, by mapping each property\r\n     * to the result of calling its associated function with the supplied arguments.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.20.0\r\n     * @category Function\r\n     * @sig {k: ((a, b, ..., m) -> v)} -> ((a, b, ..., m) -> {k: v})\r\n     * @param {Object} spec an object recursively mapping properties to functions for\r\n     *        producing the values for these properties.\r\n     * @return {Function} A function that returns an object of the same structure\r\n     * as `spec', with each property set to the value returned by calling its\r\n     * associated function with the supplied arguments.\r\n     * @see R.converge, R.juxt\r\n     * @example\r\n     *\r\n     *      var getMetrics = R.applySpec({\r\n     *                                      sum: R.add,\r\n     *                                      nested: { mul: R.multiply }\r\n     *                                   });\r\n     *      getMetrics(2, 4); // => { sum: 6, nested: { mul: 8 } }\r\n     */\r\n    var applySpec = _curry1(function applySpec(spec) {\r\n        spec = map(function (v) {\r\n            return typeof v == 'function' ? v : applySpec(v);\r\n        }, spec);\r\n        return curryN(reduce(max, 0, pluck('length', values(spec))), function () {\r\n            var args = arguments;\r\n            return map(function (f) {\r\n                return apply(f, args);\r\n            }, spec);\r\n        });\r\n    });\r\n\r\n    /**\r\n     * Returns the result of calling its first argument with the remaining\r\n     * arguments. This is occasionally useful as a converging function for\r\n     * `R.converge`: the left branch can produce a function while the right branch\r\n     * produces a value to be passed to that function as an argument.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.9.0\r\n     * @category Function\r\n     * @sig (*... -> a),*... -> a\r\n     * @param {Function} fn The function to apply to the remaining arguments.\r\n     * @param {...*} args Any number of positional arguments.\r\n     * @return {*}\r\n     * @see R.apply\r\n     * @example\r\n     *\r\n     *      var indentN = R.pipe(R.times(R.always(' ')),\r\n     *                           R.join(''),\r\n     *                           R.replace(/^(?!$)/gm));\r\n     *\r\n     *      var format = R.converge(R.call, [\r\n     *                                  R.pipe(R.prop('indent'), indentN),\r\n     *                                  R.prop('value')\r\n     *                              ]);\r\n     *\r\n     *      format({indent: 2, value: 'foo\\nbar\\nbaz\\n'}); //=> '  foo\\n  bar\\n  baz\\n'\r\n     */\r\n    var call = curry(function call(fn) {\r\n        return fn.apply(this, _slice(arguments, 1));\r\n    });\r\n\r\n    /**\r\n     * `chain` maps a function over a list and concatenates the results. `chain`\r\n     * is also known as `flatMap` in some libraries\r\n     *\r\n     * Dispatches to the `chain` method of the second argument, if present,\r\n     * according to the [FantasyLand Chain spec](https://github.com/fantasyland/fantasy-land#chain).\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.3.0\r\n     * @category List\r\n     * @sig Chain m => (a -> m b) -> m a -> m b\r\n     * @param {Function} fn\r\n     * @param {Array} list\r\n     * @return {Array}\r\n     * @example\r\n     *\r\n     *      var duplicate = n => [n, n];\r\n     *      R.chain(duplicate, [1, 2, 3]); //=> [1, 1, 2, 2, 3, 3]\r\n     */\r\n    var chain = _curry2(_dispatchable('chain', _xchain, function chain(fn, monad) {\r\n        if (typeof monad === 'function') {\r\n            return function () {\r\n                return monad.call(this, fn.apply(this, arguments)).apply(this, arguments);\r\n            };\r\n        }\r\n        return _makeFlat(false)(map(fn, monad));\r\n    }));\r\n\r\n    /**\r\n     * Returns a function, `fn`, which encapsulates if/else-if/else logic.\r\n     * `R.cond` takes a list of [predicate, transform] pairs. All of the arguments\r\n     * to `fn` are applied to each of the predicates in turn until one returns a\r\n     * \"truthy\" value, at which point `fn` returns the result of applying its\r\n     * arguments to the corresponding transformer. If none of the predicates\r\n     * matches, `fn` returns undefined.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.6.0\r\n     * @category Logic\r\n     * @sig [[(*... -> Boolean),(*... -> *)]] -> (*... -> *)\r\n     * @param {Array} pairs\r\n     * @return {Function}\r\n     * @example\r\n     *\r\n     *      var fn = R.cond([\r\n     *        [R.equals(0),   R.always('water freezes at 0°C')],\r\n     *        [R.equals(100), R.always('water boils at 100°C')],\r\n     *        [R.T,           temp => 'nothing special happens at ' + temp + '°C']\r\n     *      ]);\r\n     *      fn(0); //=> 'water freezes at 0°C'\r\n     *      fn(50); //=> 'nothing special happens at 50°C'\r\n     *      fn(100); //=> 'water boils at 100°C'\r\n     */\r\n    var cond = _curry1(function cond(pairs) {\r\n        var arity = reduce(max, 0, map(function (pair) {\r\n            return pair[0].length;\r\n        }, pairs));\r\n        return _arity(arity, function () {\r\n            var idx = 0;\r\n            while (idx < pairs.length) {\r\n                if (pairs[idx][0].apply(this, arguments)) {\r\n                    return pairs[idx][1].apply(this, arguments);\r\n                }\r\n                idx += 1;\r\n            }\r\n        });\r\n    });\r\n\r\n    /**\r\n     * Wraps a constructor function inside a curried function that can be called\r\n     * with the same arguments and returns the same type. The arity of the function\r\n     * returned is specified to allow using variadic constructor functions.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.4.0\r\n     * @category Function\r\n     * @sig Number -> (* -> {*}) -> (* -> {*})\r\n     * @param {Number} n The arity of the constructor function.\r\n     * @param {Function} Fn The constructor function to wrap.\r\n     * @return {Function} A wrapped, curried constructor function.\r\n     * @example\r\n     *\r\n     *      // Variadic constructor function\r\n     *      var Widget = () => {\r\n     *        this.children = Array.prototype.slice.call(arguments);\r\n     *        // ...\r\n     *      };\r\n     *      Widget.prototype = {\r\n     *        // ...\r\n     *      };\r\n     *      var allConfigs = [\r\n     *        // ...\r\n     *      ];\r\n     *      R.map(R.constructN(1, Widget), allConfigs); // a list of Widgets\r\n     */\r\n    var constructN = _curry2(function constructN(n, Fn) {\r\n        if (n > 10) {\r\n            throw new Error('Constructor with greater than ten arguments');\r\n        }\r\n        if (n === 0) {\r\n            return function () {\r\n                return new Fn();\r\n            };\r\n        }\r\n        return curry(nAry(n, function ($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {\r\n            switch (arguments.length) {\r\n            case 1:\r\n                return new Fn($0);\r\n            case 2:\r\n                return new Fn($0, $1);\r\n            case 3:\r\n                return new Fn($0, $1, $2);\r\n            case 4:\r\n                return new Fn($0, $1, $2, $3);\r\n            case 5:\r\n                return new Fn($0, $1, $2, $3, $4);\r\n            case 6:\r\n                return new Fn($0, $1, $2, $3, $4, $5);\r\n            case 7:\r\n                return new Fn($0, $1, $2, $3, $4, $5, $6);\r\n            case 8:\r\n                return new Fn($0, $1, $2, $3, $4, $5, $6, $7);\r\n            case 9:\r\n                return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8);\r\n            case 10:\r\n                return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8, $9);\r\n            }\r\n        }));\r\n    });\r\n\r\n    /**\r\n     * Accepts a converging function and a list of branching functions and returns\r\n     * a new function. When invoked, this new function is applied to some\r\n     * arguments, each branching function is applied to those same arguments. The\r\n     * results of each branching function are passed as arguments to the converging\r\n     * function to produce the return value.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.4.2\r\n     * @category Function\r\n     * @sig (x1 -> x2 -> ... -> z) -> [(a -> b -> ... -> x1), (a -> b -> ... -> x2), ...] -> (a -> b -> ... -> z)\r\n     * @param {Function} after A function. `after` will be invoked with the return values of\r\n     *        `fn1` and `fn2` as its arguments.\r\n     * @param {Array} functions A list of functions.\r\n     * @return {Function} A new function.\r\n     * @example\r\n     *\r\n     *      var add = (a, b) => a + b;\r\n     *      var multiply = (a, b) => a * b;\r\n     *      var subtract = (a, b) => a - b;\r\n     *\r\n     *      //≅ multiply( add(1, 2), subtract(1, 2) );\r\n     *      R.converge(multiply, [add, subtract])(1, 2); //=> -3\r\n     *\r\n     *      var add3 = (a, b, c) => a + b + c;\r\n     *      R.converge(add3, [multiply, add, subtract])(1, 2); //=> 4\r\n     */\r\n    var converge = _curry2(function converge(after, fns) {\r\n        return curryN(reduce(max, 0, pluck('length', fns)), function () {\r\n            var args = arguments;\r\n            var context = this;\r\n            return after.apply(context, _map(function (fn) {\r\n                return fn.apply(context, args);\r\n            }, fns));\r\n        });\r\n    });\r\n\r\n    /**\r\n     * Counts the elements of a list according to how many match each value of a\r\n     * key generated by the supplied function. Returns an object mapping the keys\r\n     * produced by `fn` to the number of occurrences in the list. Note that all\r\n     * keys are coerced to strings because of how JavaScript objects work.\r\n     *\r\n     * Acts as a transducer if a transformer is given in list position.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category Relation\r\n     * @sig (a -> String) -> [a] -> {*}\r\n     * @param {Function} fn The function used to map values to keys.\r\n     * @param {Array} list The list to count elements from.\r\n     * @return {Object} An object mapping keys to number of occurrences in the list.\r\n     * @example\r\n     *\r\n     *      var numbers = [1.0, 1.1, 1.2, 2.0, 3.0, 2.2];\r\n     *      var letters = R.split('', 'abcABCaaaBBc');\r\n     *      R.countBy(Math.floor)(numbers);    //=> {'1': 3, '2': 2, '3': 1}\r\n     *      R.countBy(R.toLower)(letters);   //=> {'a': 5, 'b': 4, 'c': 3}\r\n     */\r\n    var countBy = reduceBy(function (acc, elem) {\r\n        return acc + 1;\r\n    }, 0);\r\n\r\n    /**\r\n     * Returns a new list without any consecutively repeating elements. Equality is\r\n     * determined by applying the supplied predicate two consecutive elements. The\r\n     * first element in a series of equal element is the one being preserved.\r\n     *\r\n     * Dispatches to the `dropRepeatsWith` method of the second argument, if present.\r\n     *\r\n     * Acts as a transducer if a transformer is given in list position.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.14.0\r\n     * @category List\r\n     * @sig (a, a -> Boolean) -> [a] -> [a]\r\n     * @param {Function} pred A predicate used to test whether two items are equal.\r\n     * @param {Array} list The array to consider.\r\n     * @return {Array} `list` without repeating elements.\r\n     * @see R.transduce\r\n     * @example\r\n     *\r\n     *      var l = [1, -1, 1, 3, 4, -4, -4, -5, 5, 3, 3];\r\n     *      R.dropRepeatsWith(R.eqBy(Math.abs), l); //=> [1, 3, 4, -5, 3]\r\n     */\r\n    var dropRepeatsWith = _curry2(_dispatchable('dropRepeatsWith', _xdropRepeatsWith, function dropRepeatsWith(pred, list) {\r\n        var result = [];\r\n        var idx = 1;\r\n        var len = list.length;\r\n        if (len !== 0) {\r\n            result[0] = list[0];\r\n            while (idx < len) {\r\n                if (!pred(last(result), list[idx])) {\r\n                    result[result.length] = list[idx];\r\n                }\r\n                idx += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }));\r\n\r\n    /**\r\n     * Takes a function and two values in its domain and returns `true` if the\r\n     * values map to the same value in the codomain; `false` otherwise.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.18.0\r\n     * @category Relation\r\n     * @sig (a -> b) -> a -> a -> Boolean\r\n     * @param {Function} f\r\n     * @param {*} x\r\n     * @param {*} y\r\n     * @return {Boolean}\r\n     * @example\r\n     *\r\n     *      R.eqBy(Math.abs, 5, -5); //=> true\r\n     */\r\n    var eqBy = _curry3(function eqBy(f, x, y) {\r\n        return equals(f(x), f(y));\r\n    });\r\n\r\n    /**\r\n     * Reports whether two objects have the same value, in `R.equals` terms, for\r\n     * the specified property. Useful as a curried predicate.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category Object\r\n     * @sig k -> {k: v} -> {k: v} -> Boolean\r\n     * @param {String} prop The name of the property to compare\r\n     * @param {Object} obj1\r\n     * @param {Object} obj2\r\n     * @return {Boolean}\r\n     *\r\n     * @example\r\n     *\r\n     *      var o1 = { a: 1, b: 2, c: 3, d: 4 };\r\n     *      var o2 = { a: 10, b: 20, c: 3, d: 40 };\r\n     *      R.eqProps('a', o1, o2); //=> false\r\n     *      R.eqProps('c', o1, o2); //=> true\r\n     */\r\n    var eqProps = _curry3(function eqProps(prop, obj1, obj2) {\r\n        return equals(obj1[prop], obj2[prop]);\r\n    });\r\n\r\n    /**\r\n     * Splits a list into sub-lists stored in an object, based on the result of\r\n     * calling a String-returning function on each element, and grouping the\r\n     * results according to values returned.\r\n     *\r\n     * Dispatches to the `groupBy` method of the second argument, if present.\r\n     *\r\n     * Acts as a transducer if a transformer is given in list position.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category List\r\n     * @sig (a -> String) -> [a] -> {String: [a]}\r\n     * @param {Function} fn Function :: a -> String\r\n     * @param {Array} list The array to group\r\n     * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements\r\n     *         that produced that key when passed to `fn`.\r\n     * @see R.transduce\r\n     * @example\r\n     *\r\n     *      var byGrade = R.groupBy(function(student) {\r\n     *        var score = student.score;\r\n     *        return score < 65 ? 'F' :\r\n     *               score < 70 ? 'D' :\r\n     *               score < 80 ? 'C' :\r\n     *               score < 90 ? 'B' : 'A';\r\n     *      });\r\n     *      var students = [{name: 'Abby', score: 84},\r\n     *                      {name: 'Eddy', score: 58},\r\n     *                      // ...\r\n     *                      {name: 'Jack', score: 69}];\r\n     *      byGrade(students);\r\n     *      // {\r\n     *      //   'A': [{name: 'Dianne', score: 99}],\r\n     *      //   'B': [{name: 'Abby', score: 84}]\r\n     *      //   // ...,\r\n     *      //   'F': [{name: 'Eddy', score: 58}]\r\n     *      // }\r\n     */\r\n    var groupBy = _curry2(_checkForMethod('groupBy', reduceBy(function (acc, item) {\r\n        if (acc == null) {\r\n            acc = [];\r\n        }\r\n        acc.push(item);\r\n        return acc;\r\n    }, null)));\r\n\r\n    /**\r\n     * Given a function that generates a key, turns a list of objects into an\r\n     * object indexing the objects by the given key. Note that if multiple\r\n     * objects generate the same value for the indexing key only the last value\r\n     * will be included in the generated object.\r\n     *\r\n     * Acts as a transducer if a transformer is given in list position.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.19.0\r\n     * @category List\r\n     * @sig (a -> String) -> [{k: v}] -> {k: {k: v}}\r\n     * @param {Function} fn Function :: a -> String\r\n     * @param {Array} array The array of objects to index\r\n     * @return {Object} An object indexing each array element by the given property.\r\n     * @example\r\n     *\r\n     *      var list = [{id: 'xyz', title: 'A'}, {id: 'abc', title: 'B'}];\r\n     *      R.indexBy(R.prop('id'), list);\r\n     *      //=> {abc: {id: 'abc', title: 'B'}, xyz: {id: 'xyz', title: 'A'}}\r\n     */\r\n    var indexBy = reduceBy(function (acc, elem) {\r\n        return elem;\r\n    }, null);\r\n\r\n    /**\r\n     * Returns the position of the first occurrence of an item in an array, or -1\r\n     * if the item is not included in the array. `R.equals` is used to determine\r\n     * equality.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category List\r\n     * @sig a -> [a] -> Number\r\n     * @param {*} target The item to find.\r\n     * @param {Array} xs The array to search in.\r\n     * @return {Number} the index of the target, or -1 if the target is not found.\r\n     * @see R.lastIndexOf\r\n     * @example\r\n     *\r\n     *      R.indexOf(3, [1,2,3,4]); //=> 2\r\n     *      R.indexOf(10, [1,2,3,4]); //=> -1\r\n     */\r\n    var indexOf = _curry2(function indexOf(target, xs) {\r\n        return typeof xs.indexOf === 'function' && !_isArray(xs) ? xs.indexOf(target) : _indexOf(xs, target, 0);\r\n    });\r\n\r\n    /**\r\n     * juxt applies a list of functions to a list of values.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.19.0\r\n     * @category Function\r\n     * @sig [(a, b, ..., m) -> n] -> ((a, b, ..., m) -> [n])\r\n     * @param {Array} fns An array of functions\r\n     * @return {Function} A function that returns a list of values after applying each of the original `fns` to its parameters.\r\n     * @see R.applySpec\r\n     * @example\r\n     *\r\n     *      var getRange = R.juxt([Math.min, Math.max]);\r\n     *      getRange(3, 4, 9, -3); //=> [-3, 9]\r\n     */\r\n    var juxt = _curry1(function juxt(fns) {\r\n        return converge(_arrayOf, fns);\r\n    });\r\n\r\n    /**\r\n     * Returns a lens for the given getter and setter functions. The getter \"gets\"\r\n     * the value of the focus; the setter \"sets\" the value of the focus. The setter\r\n     * should not mutate the data structure.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.8.0\r\n     * @category Object\r\n     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\r\n     * @sig (s -> a) -> ((a, s) -> s) -> Lens s a\r\n     * @param {Function} getter\r\n     * @param {Function} setter\r\n     * @return {Lens}\r\n     * @see R.view, R.set, R.over, R.lensIndex, R.lensProp\r\n     * @example\r\n     *\r\n     *      var xLens = R.lens(R.prop('x'), R.assoc('x'));\r\n     *\r\n     *      R.view(xLens, {x: 1, y: 2});            //=> 1\r\n     *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\r\n     *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\r\n     */\r\n    var lens = _curry2(function lens(getter, setter) {\r\n        return function (toFunctorFn) {\r\n            return function (target) {\r\n                return map(function (focus) {\r\n                    return setter(focus, target);\r\n                }, toFunctorFn(getter(target)));\r\n            };\r\n        };\r\n    });\r\n\r\n    /**\r\n     * Returns a lens whose focus is the specified index.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.14.0\r\n     * @category Object\r\n     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\r\n     * @sig Number -> Lens s a\r\n     * @param {Number} n\r\n     * @return {Lens}\r\n     * @see R.view, R.set, R.over\r\n     * @example\r\n     *\r\n     *      var headLens = R.lensIndex(0);\r\n     *\r\n     *      R.view(headLens, ['a', 'b', 'c']);            //=> 'a'\r\n     *      R.set(headLens, 'x', ['a', 'b', 'c']);        //=> ['x', 'b', 'c']\r\n     *      R.over(headLens, R.toUpper, ['a', 'b', 'c']); //=> ['A', 'b', 'c']\r\n     */\r\n    var lensIndex = _curry1(function lensIndex(n) {\r\n        return lens(nth(n), update(n));\r\n    });\r\n\r\n    /**\r\n     * Returns a lens whose focus is the specified path.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.19.0\r\n     * @category Object\r\n     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\r\n     * @sig [String] -> Lens s a\r\n     * @param {Array} path The path to use.\r\n     * @return {Lens}\r\n     * @see R.view, R.set, R.over\r\n     * @example\r\n     *\r\n     *      var xyLens = R.lensPath(['x', 'y']);\r\n     *\r\n     *      R.view(xyLens, {x: {y: 2, z: 3}});            //=> 2\r\n     *      R.set(xyLens, 4, {x: {y: 2, z: 3}});          //=> {x: {y: 4, z: 3}}\r\n     *      R.over(xyLens, R.negate, {x: {y: 2, z: 3}});  //=> {x: {y: -2, z: 3}}\r\n     */\r\n    var lensPath = _curry1(function lensPath(p) {\r\n        return lens(path(p), assocPath(p));\r\n    });\r\n\r\n    /**\r\n     * Returns a lens whose focus is the specified property.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.14.0\r\n     * @category Object\r\n     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\r\n     * @sig String -> Lens s a\r\n     * @param {String} k\r\n     * @return {Lens}\r\n     * @see R.view, R.set, R.over\r\n     * @example\r\n     *\r\n     *      var xLens = R.lensProp('x');\r\n     *\r\n     *      R.view(xLens, {x: 1, y: 2});            //=> 1\r\n     *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\r\n     *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\r\n     */\r\n    var lensProp = _curry1(function lensProp(k) {\r\n        return lens(prop(k), assoc(k));\r\n    });\r\n\r\n    /**\r\n     * \"lifts\" a function to be the specified arity, so that it may \"map over\" that\r\n     * many lists, Functions or other objects that satisfy the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.7.0\r\n     * @category Function\r\n     * @sig Number -> (*... -> *) -> ([*]... -> [*])\r\n     * @param {Function} fn The function to lift into higher context\r\n     * @return {Function} The lifted function.\r\n     * @see R.lift, R.ap\r\n     * @example\r\n     *\r\n     *      var madd3 = R.liftN(3, R.curryN(3, (...args) => R.sum(args)));\r\n     *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\r\n     */\r\n    var liftN = _curry2(function liftN(arity, fn) {\r\n        var lifted = curryN(arity, fn);\r\n        return curryN(arity, function () {\r\n            return _reduce(ap, map(lifted, arguments[0]), _slice(arguments, 1));\r\n        });\r\n    });\r\n\r\n    /**\r\n     * Returns the mean of the given list of numbers.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.14.0\r\n     * @category Math\r\n     * @sig [Number] -> Number\r\n     * @param {Array} list\r\n     * @return {Number}\r\n     * @example\r\n     *\r\n     *      R.mean([2, 7, 9]); //=> 6\r\n     *      R.mean([]); //=> NaN\r\n     */\r\n    var mean = _curry1(function mean(list) {\r\n        return sum(list) / list.length;\r\n    });\r\n\r\n    /**\r\n     * Returns the median of the given list of numbers.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.14.0\r\n     * @category Math\r\n     * @sig [Number] -> Number\r\n     * @param {Array} list\r\n     * @return {Number}\r\n     * @example\r\n     *\r\n     *      R.median([2, 9, 7]); //=> 7\r\n     *      R.median([7, 2, 10, 9]); //=> 8\r\n     *      R.median([]); //=> NaN\r\n     */\r\n    var median = _curry1(function median(list) {\r\n        var len = list.length;\r\n        if (len === 0) {\r\n            return NaN;\r\n        }\r\n        var width = 2 - len % 2;\r\n        var idx = (len - width) / 2;\r\n        return mean(_slice(list).sort(function (a, b) {\r\n            return a < b ? -1 : a > b ? 1 : 0;\r\n        }).slice(idx, idx + width));\r\n    });\r\n\r\n    /**\r\n     * Takes a predicate and a list or other \"filterable\" object and returns the\r\n     * pair of filterable objects of the same type of elements which do and do not\r\n     * satisfy, the predicate, respectively.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.4\r\n     * @category List\r\n     * @sig Filterable f => (a -> Boolean) -> f a -> [f a, f a]\r\n     * @param {Function} pred A predicate to determine which side the element belongs to.\r\n     * @param {Array} filterable the list (or other filterable) to partition.\r\n     * @return {Array} An array, containing first the subset of elements that satisfy the\r\n     *         predicate, and second the subset of elements that do not satisfy.\r\n     * @see R.filter, R.reject\r\n     * @example\r\n     *\r\n     *      R.partition(R.contains('s'), ['sss', 'ttt', 'foo', 'bars']);\r\n     *      // => [ [ 'sss', 'bars' ],  [ 'ttt', 'foo' ] ]\r\n     *\r\n     *      R.partition(R.contains('s'), { a: 'sss', b: 'ttt', foo: 'bars' });\r\n     *      // => [ { a: 'sss', foo: 'bars' }, { b: 'ttt' }  ]\r\n     */\r\n    var partition = juxt([\r\n        filter,\r\n        reject\r\n    ]);\r\n\r\n    /**\r\n     * Performs left-to-right function composition. The leftmost function may have\r\n     * any arity; the remaining functions must be unary.\r\n     *\r\n     * In some libraries this function is named `sequence`.\r\n     *\r\n     * **Note:** The result of pipe is not automatically curried.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category Function\r\n     * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)\r\n     * @param {...Function} functions\r\n     * @return {Function}\r\n     * @see R.compose\r\n     * @example\r\n     *\r\n     *      var f = R.pipe(Math.pow, R.negate, R.inc);\r\n     *\r\n     *      f(3, 4); // -(3^4) + 1\r\n     */\r\n    var pipe = function pipe() {\r\n        if (arguments.length === 0) {\r\n            throw new Error('pipe requires at least one argument');\r\n        }\r\n        return _arity(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));\r\n    };\r\n\r\n    /**\r\n     * Performs left-to-right composition of one or more Promise-returning\r\n     * functions. The leftmost function may have any arity; the remaining functions\r\n     * must be unary.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.10.0\r\n     * @category Function\r\n     * @sig ((a -> Promise b), (b -> Promise c), ..., (y -> Promise z)) -> (a -> Promise z)\r\n     * @param {...Function} functions\r\n     * @return {Function}\r\n     * @see R.composeP\r\n     * @example\r\n     *\r\n     *      //  followersForUser :: String -> Promise [User]\r\n     *      var followersForUser = R.pipeP(db.getUserById, db.getFollowers);\r\n     */\r\n    var pipeP = function pipeP() {\r\n        if (arguments.length === 0) {\r\n            throw new Error('pipeP requires at least one argument');\r\n        }\r\n        return _arity(arguments[0].length, reduce(_pipeP, arguments[0], tail(arguments)));\r\n    };\r\n\r\n    /**\r\n     * Multiplies together all the elements of a list.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category Math\r\n     * @sig [Number] -> Number\r\n     * @param {Array} list An array of numbers\r\n     * @return {Number} The product of all the numbers in the list.\r\n     * @see R.reduce\r\n     * @example\r\n     *\r\n     *      R.product([2,4,6,8,100,1]); //=> 38400\r\n     */\r\n    var product = reduce(multiply, 1);\r\n\r\n    /**\r\n     * Transforms a [Traversable](https://github.com/fantasyland/fantasy-land#traversable)\r\n     * of [Applicative](https://github.com/fantasyland/fantasy-land#applicative) into an\r\n     * Applicative of Traversable.\r\n     *\r\n     * Dispatches to the `sequence` method of the second argument, if present.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.19.0\r\n     * @category List\r\n     * @sig (Applicative f, Traversable t) => (a -> f a) -> t (f a) -> f (t a)\r\n     * @param {Function} of\r\n     * @param {*} traversable\r\n     * @return {*}\r\n     * @see R.traverse\r\n     * @example\r\n     *\r\n     *      R.sequence(Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([1, 2, 3])\r\n     *      R.sequence(Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()\r\n     *\r\n     *      R.sequence(R.of, Just([1, 2, 3])); //=> [Just(1), Just(2), Just(3)]\r\n     *      R.sequence(R.of, Nothing());       //=> [Nothing()]\r\n     */\r\n    var sequence = _curry2(function sequence(of, traversable) {\r\n        return typeof traversable.sequence === 'function' ? traversable.sequence(of) : reduceRight(function (acc, x) {\r\n            return ap(map(prepend, x), acc);\r\n        }, of([]), traversable);\r\n    });\r\n\r\n    /**\r\n     * Maps an [Applicative](https://github.com/fantasyland/fantasy-land#applicative)-returning\r\n     * function over a [Traversable](https://github.com/fantasyland/fantasy-land#traversable),\r\n     * then uses [`sequence`](#sequence) to transform the resulting Traversable of Applicative\r\n     * into an Applicative of Traversable.\r\n     *\r\n     * Dispatches to the `sequence` method of the third argument, if present.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.19.0\r\n     * @category List\r\n     * @sig (Applicative f, Traversable t) => (a -> f a) -> (a -> f b) -> t a -> f (t b)\r\n     * @param {Function} of\r\n     * @param {Function} f\r\n     * @param {*} traversable\r\n     * @return {*}\r\n     * @see R.sequence\r\n     * @example\r\n     *\r\n     *      // Returns `Nothing` if the given divisor is `0`\r\n     *      safeDiv = n => d => d === 0 ? Nothing() : Just(n / d)\r\n     *\r\n     *      R.traverse(Maybe.of, safeDiv(10), [2, 4, 5]); //=> Just([5, 2.5, 2])\r\n     *      R.traverse(Maybe.of, safeDiv(10), [2, 0, 5]); //=> Nothing\r\n     */\r\n    var traverse = _curry3(function traverse(of, f, traversable) {\r\n        return sequence(of, map(f, traversable));\r\n    });\r\n\r\n    /**\r\n     * Shorthand for `R.chain(R.identity)`, which removes one level of nesting from\r\n     * any [Chain](https://github.com/fantasyland/fantasy-land#chain).\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.3.0\r\n     * @category List\r\n     * @sig Chain c => c (c a) -> c a\r\n     * @param {*} list\r\n     * @return {*}\r\n     * @see R.flatten, R.chain\r\n     * @example\r\n     *\r\n     *      R.unnest([1, [2], [[3]]]); //=> [1, 2, [3]]\r\n     *      R.unnest([[1, 2], [3, 4], [5, 6]]); //=> [1, 2, 3, 4, 5, 6]\r\n     */\r\n    var unnest = chain(_identity);\r\n\r\n    var _contains = function _contains(a, list) {\r\n        return _indexOf(list, a, 0) >= 0;\r\n    };\r\n\r\n    //  mapPairs :: (Object, [String]) -> [String]\r\n    var _toString = function _toString(x, seen) {\r\n        var recur = function recur(y) {\r\n            var xs = seen.concat([x]);\r\n            return _contains(y, xs) ? '<Circular>' : _toString(y, xs);\r\n        };\r\n        //  mapPairs :: (Object, [String]) -> [String]\r\n        var mapPairs = function (obj, keys) {\r\n            return _map(function (k) {\r\n                return _quote(k) + ': ' + recur(obj[k]);\r\n            }, keys.slice().sort());\r\n        };\r\n        switch (Object.prototype.toString.call(x)) {\r\n        case '[object Arguments]':\r\n            return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';\r\n        case '[object Array]':\r\n            return '[' + _map(recur, x).concat(mapPairs(x, reject(function (k) {\r\n                return /^\\d+$/.test(k);\r\n            }, keys(x)))).join(', ') + ']';\r\n        case '[object Boolean]':\r\n            return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();\r\n        case '[object Date]':\r\n            return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';\r\n        case '[object Null]':\r\n            return 'null';\r\n        case '[object Number]':\r\n            return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);\r\n        case '[object String]':\r\n            return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);\r\n        case '[object Undefined]':\r\n            return 'undefined';\r\n        default:\r\n            if (typeof x.toString === 'function') {\r\n                var repr = x.toString();\r\n                if (repr !== '[object Object]') {\r\n                    return repr;\r\n                }\r\n            }\r\n            return '{' + mapPairs(x, keys(x)).join(', ') + '}';\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Performs right-to-left function composition. The rightmost function may have\r\n     * any arity; the remaining functions must be unary.\r\n     *\r\n     * **Note:** The result of compose is not automatically curried.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category Function\r\n     * @sig ((y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)) -> ((a, b, ..., n) -> z)\r\n     * @param {...Function} functions\r\n     * @return {Function}\r\n     * @see R.pipe\r\n     * @example\r\n     *\r\n     *      var f = R.compose(R.inc, R.negate, Math.pow);\r\n     *\r\n     *      f(3, 4); // -(3^4) + 1\r\n     */\r\n    var compose = function compose() {\r\n        if (arguments.length === 0) {\r\n            throw new Error('compose requires at least one argument');\r\n        }\r\n        return pipe.apply(this, reverse(arguments));\r\n    };\r\n\r\n    /**\r\n     * Returns the right-to-left Kleisli composition of the provided functions,\r\n     * each of which must return a value of a type supported by [`chain`](#chain).\r\n     *\r\n     * `R.composeK(h, g, f)` is equivalent to `R.compose(R.chain(h), R.chain(g), R.chain(f))`.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.16.0\r\n     * @category Function\r\n     * @sig Chain m => ((y -> m z), (x -> m y), ..., (a -> m b)) -> (m a -> m z)\r\n     * @param {...Function}\r\n     * @return {Function}\r\n     * @see R.pipeK\r\n     * @example\r\n     *\r\n     *      //  parseJson :: String -> Maybe *\r\n     *      //  get :: String -> Object -> Maybe *\r\n     *\r\n     *      //  getStateCode :: Maybe String -> Maybe String\r\n     *      var getStateCode = R.composeK(\r\n     *        R.compose(Maybe.of, R.toUpper),\r\n     *        get('state'),\r\n     *        get('address'),\r\n     *        get('user'),\r\n     *        parseJson\r\n     *      );\r\n     *\r\n     *      getStateCode(Maybe.of('{\"user\":{\"address\":{\"state\":\"ny\"}}}'));\r\n     *      //=> Just('NY')\r\n     *      getStateCode(Maybe.of('[Invalid JSON]'));\r\n     *      //=> Nothing()\r\n     */\r\n    var composeK = function composeK() {\r\n        return compose.apply(this, prepend(identity, map(chain, arguments)));\r\n    };\r\n\r\n    /**\r\n     * Performs right-to-left composition of one or more Promise-returning\r\n     * functions. The rightmost function may have any arity; the remaining\r\n     * functions must be unary.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.10.0\r\n     * @category Function\r\n     * @sig ((y -> Promise z), (x -> Promise y), ..., (a -> Promise b)) -> (a -> Promise z)\r\n     * @param {...Function} functions\r\n     * @return {Function}\r\n     * @see R.pipeP\r\n     * @example\r\n     *\r\n     *      //  followersForUser :: String -> Promise [User]\r\n     *      var followersForUser = R.composeP(db.getFollowers, db.getUserById);\r\n     */\r\n    var composeP = function composeP() {\r\n        if (arguments.length === 0) {\r\n            throw new Error('composeP requires at least one argument');\r\n        }\r\n        return pipeP.apply(this, reverse(arguments));\r\n    };\r\n\r\n    /**\r\n     * Wraps a constructor function inside a curried function that can be called\r\n     * with the same arguments and returns the same type.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category Function\r\n     * @sig (* -> {*}) -> (* -> {*})\r\n     * @param {Function} Fn The constructor function to wrap.\r\n     * @return {Function} A wrapped, curried constructor function.\r\n     * @example\r\n     *\r\n     *      // Constructor function\r\n     *      var Widget = config => {\r\n     *        // ...\r\n     *      };\r\n     *      Widget.prototype = {\r\n     *        // ...\r\n     *      };\r\n     *      var allConfigs = [\r\n     *        // ...\r\n     *      ];\r\n     *      R.map(R.construct(Widget), allConfigs); // a list of Widgets\r\n     */\r\n    var construct = _curry1(function construct(Fn) {\r\n        return constructN(Fn.length, Fn);\r\n    });\r\n\r\n    /**\r\n     * Returns `true` if the specified value is equal, in `R.equals` terms, to at\r\n     * least one element of the given list; `false` otherwise.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category List\r\n     * @sig a -> [a] -> Boolean\r\n     * @param {Object} a The item to compare against.\r\n     * @param {Array} list The array to consider.\r\n     * @return {Boolean} `true` if the item is in the list, `false` otherwise.\r\n     * @see R.any\r\n     * @example\r\n     *\r\n     *      R.contains(3, [1, 2, 3]); //=> true\r\n     *      R.contains(4, [1, 2, 3]); //=> false\r\n     *      R.contains([42], [[42]]); //=> true\r\n     */\r\n    var contains = _curry2(_contains);\r\n\r\n    /**\r\n     * Finds the set (i.e. no duplicates) of all elements in the first list not\r\n     * contained in the second list.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category Relation\r\n     * @sig [*] -> [*] -> [*]\r\n     * @param {Array} list1 The first list.\r\n     * @param {Array} list2 The second list.\r\n     * @return {Array} The elements in `list1` that are not in `list2`.\r\n     * @see R.differenceWith, R.symmetricDifference, R.symmetricDifferenceWith\r\n     * @example\r\n     *\r\n     *      R.difference([1,2,3,4], [7,6,5,4,3]); //=> [1,2]\r\n     *      R.difference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5]\r\n     */\r\n    var difference = _curry2(function difference(first, second) {\r\n        var out = [];\r\n        var idx = 0;\r\n        var firstLen = first.length;\r\n        while (idx < firstLen) {\r\n            if (!_contains(first[idx], second) && !_contains(first[idx], out)) {\r\n                out[out.length] = first[idx];\r\n            }\r\n            idx += 1;\r\n        }\r\n        return out;\r\n    });\r\n\r\n    /**\r\n     * Returns a new list without any consecutively repeating elements. `R.equals`\r\n     * is used to determine equality.\r\n     *\r\n     * Dispatches to the `dropRepeats` method of the first argument, if present.\r\n     *\r\n     * Acts as a transducer if a transformer is given in list position.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.14.0\r\n     * @category List\r\n     * @sig [a] -> [a]\r\n     * @param {Array} list The array to consider.\r\n     * @return {Array} `list` without repeating elements.\r\n     * @see R.transduce\r\n     * @example\r\n     *\r\n     *     R.dropRepeats([1, 1, 1, 2, 3, 4, 4, 2, 2]); //=> [1, 2, 3, 4, 2]\r\n     */\r\n    var dropRepeats = _curry1(_dispatchable('dropRepeats', _xdropRepeatsWith(equals), dropRepeatsWith(equals)));\r\n\r\n    /**\r\n     * \"lifts\" a function of arity > 1 so that it may \"map over\" a list, Function or other\r\n     * object that satisfies the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.7.0\r\n     * @category Function\r\n     * @sig (*... -> *) -> ([*]... -> [*])\r\n     * @param {Function} fn The function to lift into higher context\r\n     * @return {Function} The lifted function.\r\n     * @see R.liftN\r\n     * @example\r\n     *\r\n     *      var madd3 = R.lift(R.curry((a, b, c) => a + b + c));\r\n     *\r\n     *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\r\n     *\r\n     *      var madd5 = R.lift(R.curry((a, b, c, d, e) => a + b + c + d + e));\r\n     *\r\n     *      madd5([1,2], [3], [4, 5], [6], [7, 8]); //=> [21, 22, 22, 23, 22, 23, 23, 24]\r\n     */\r\n    var lift = _curry1(function lift(fn) {\r\n        return liftN(fn.length, fn);\r\n    });\r\n\r\n    /**\r\n     * Returns a partial copy of an object omitting the keys specified.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category Object\r\n     * @sig [String] -> {String: *} -> {String: *}\r\n     * @param {Array} names an array of String property names to omit from the new object\r\n     * @param {Object} obj The object to copy from\r\n     * @return {Object} A new object with properties from `names` not on it.\r\n     * @see R.pick\r\n     * @example\r\n     *\r\n     *      R.omit(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, c: 3}\r\n     */\r\n    var omit = _curry2(function omit(names, obj) {\r\n        var result = {};\r\n        for (var prop in obj) {\r\n            if (!_contains(prop, names)) {\r\n                result[prop] = obj[prop];\r\n            }\r\n        }\r\n        return result;\r\n    });\r\n\r\n    /**\r\n     * Returns the left-to-right Kleisli composition of the provided functions,\r\n     * each of which must return a value of a type supported by [`chain`](#chain).\r\n     *\r\n     * `R.pipeK(f, g, h)` is equivalent to `R.pipe(R.chain(f), R.chain(g), R.chain(h))`.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.16.0\r\n     * @category Function\r\n     * @sig Chain m => ((a -> m b), (b -> m c), ..., (y -> m z)) -> (m a -> m z)\r\n     * @param {...Function}\r\n     * @return {Function}\r\n     * @see R.composeK\r\n     * @example\r\n     *\r\n     *      //  parseJson :: String -> Maybe *\r\n     *      //  get :: String -> Object -> Maybe *\r\n     *\r\n     *      //  getStateCode :: Maybe String -> Maybe String\r\n     *      var getStateCode = R.pipeK(\r\n     *        parseJson,\r\n     *        get('user'),\r\n     *        get('address'),\r\n     *        get('state'),\r\n     *        R.compose(Maybe.of, R.toUpper)\r\n     *      );\r\n     *\r\n     *      getStateCode(Maybe.of('{\"user\":{\"address\":{\"state\":\"ny\"}}}'));\r\n     *      //=> Just('NY')\r\n     *      getStateCode(Maybe.of('[Invalid JSON]'));\r\n     *      //=> Nothing()\r\n     */\r\n    var pipeK = function pipeK() {\r\n        return composeK.apply(this, reverse(arguments));\r\n    };\r\n\r\n    /**\r\n     * Returns the string representation of the given value. `eval`'ing the output\r\n     * should result in a value equivalent to the input value. Many of the built-in\r\n     * `toString` methods do not satisfy this requirement.\r\n     *\r\n     * If the given value is an `[object Object]` with a `toString` method other\r\n     * than `Object.prototype.toString`, this method is invoked with no arguments\r\n     * to produce the return value. This means user-defined constructor functions\r\n     * can provide a suitable `toString` method. For example:\r\n     *\r\n     *     function Point(x, y) {\r\n     *       this.x = x;\r\n     *       this.y = y;\r\n     *     }\r\n     *\r\n     *     Point.prototype.toString = function() {\r\n     *       return 'new Point(' + this.x + ', ' + this.y + ')';\r\n     *     };\r\n     *\r\n     *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.14.0\r\n     * @category String\r\n     * @sig * -> String\r\n     * @param {*} val\r\n     * @return {String}\r\n     * @example\r\n     *\r\n     *      R.toString(42); //=> '42'\r\n     *      R.toString('abc'); //=> '\"abc\"'\r\n     *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'\r\n     *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{\"bar\": 2, \"baz\": 3, \"foo\": 1}'\r\n     *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date(\"2001-02-03T04:05:06.000Z\")'\r\n     */\r\n    var toString = _curry1(function toString(val) {\r\n        return _toString(val, []);\r\n    });\r\n\r\n    /**\r\n     * Returns a new list without values in the first argument.\r\n     * `R.equals` is used to determine equality.\r\n     *\r\n     * Acts as a transducer if a transformer is given in list position.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.19.0\r\n     * @category List\r\n     * @sig [a] -> [a] -> [a]\r\n     * @param {Array} list1 The values to be removed from `list2`.\r\n     * @param {Array} list2 The array to remove values from.\r\n     * @return {Array} The new array without values in `list1`.\r\n     * @see R.transduce\r\n     * @example\r\n     *\r\n     *      R.without([1, 2], [1, 2, 1, 3, 4]); //=> [3, 4]\r\n     */\r\n    var without = _curry2(function (xs, list) {\r\n        return reject(flip(_contains)(xs), list);\r\n    });\r\n\r\n    // A simple Set type that honours R.equals semantics\r\n    /* globals Set */\r\n    // until we figure out why jsdoc chokes on this\r\n    // @param item The item to add to the Set\r\n    // @returns {boolean} true if the item did not exist prior, otherwise false\r\n    //\r\n    //\r\n    // @param item The item to check for existence in the Set\r\n    // @returns {boolean} true if the item exists in the Set, otherwise false\r\n    //\r\n    //\r\n    // Combines the logic for checking whether an item is a member of the set and\r\n    // for adding a new item to the set.\r\n    //\r\n    // @param item       The item to check or add to the Set instance.\r\n    // @param shouldAdd  If true, the item will be added to the set if it doesn't\r\n    //                   already exist.\r\n    // @param set        The set instance to check or add to.\r\n    // @return {boolean} true if the item already existed, otherwise false.\r\n    //\r\n    // distinguish between +0 and -0\r\n    // these types can all utilise the native Set\r\n    // set._items['boolean'] holds a two element array\r\n    // representing [ falseExists, trueExists ]\r\n    // compare functions for reference equality\r\n    /* falls through */\r\n    // reduce the search size of heterogeneous sets by creating buckets\r\n    // for each type.\r\n    // scan through all previously applied items\r\n    var _Set = function () {\r\n        function _Set() {\r\n            /* globals Set */\r\n            this._nativeSet = typeof Set === 'function' ? new Set() : null;\r\n            this._items = {};\r\n        }\r\n        // until we figure out why jsdoc chokes on this\r\n        // @param item The item to add to the Set\r\n        // @returns {boolean} true if the item did not exist prior, otherwise false\r\n        //\r\n        _Set.prototype.add = function (item) {\r\n            return !hasOrAdd(item, true, this);\r\n        };\r\n        //\r\n        // @param item The item to check for existence in the Set\r\n        // @returns {boolean} true if the item exists in the Set, otherwise false\r\n        //\r\n        _Set.prototype.has = function (item) {\r\n            return hasOrAdd(item, false, this);\r\n        };\r\n        //\r\n        // Combines the logic for checking whether an item is a member of the set and\r\n        // for adding a new item to the set.\r\n        //\r\n        // @param item       The item to check or add to the Set instance.\r\n        // @param shouldAdd  If true, the item will be added to the set if it doesn't\r\n        //                   already exist.\r\n        // @param set        The set instance to check or add to.\r\n        // @return {boolean} true if the item already existed, otherwise false.\r\n        //\r\n        function hasOrAdd(item, shouldAdd, set) {\r\n            var type = typeof item;\r\n            var prevSize, newSize;\r\n            switch (type) {\r\n            case 'string':\r\n            case 'number':\r\n                // distinguish between +0 and -0\r\n                if (item === 0 && 1 / item === -Infinity) {\r\n                    if (set._items['-0']) {\r\n                        return true;\r\n                    } else {\r\n                        if (shouldAdd) {\r\n                            set._items['-0'] = true;\r\n                        }\r\n                        return false;\r\n                    }\r\n                }\r\n                // these types can all utilise the native Set\r\n                if (set._nativeSet !== null) {\r\n                    if (shouldAdd) {\r\n                        prevSize = set._nativeSet.size;\r\n                        set._nativeSet.add(item);\r\n                        newSize = set._nativeSet.size;\r\n                        return newSize === prevSize;\r\n                    } else {\r\n                        return set._nativeSet.has(item);\r\n                    }\r\n                } else {\r\n                    if (!(type in set._items)) {\r\n                        if (shouldAdd) {\r\n                            set._items[type] = {};\r\n                            set._items[type][item] = true;\r\n                        }\r\n                        return false;\r\n                    } else if (item in set._items[type]) {\r\n                        return true;\r\n                    } else {\r\n                        if (shouldAdd) {\r\n                            set._items[type][item] = true;\r\n                        }\r\n                        return false;\r\n                    }\r\n                }\r\n            case 'boolean':\r\n                // set._items['boolean'] holds a two element array\r\n                // representing [ falseExists, trueExists ]\r\n                if (type in set._items) {\r\n                    var bIdx = item ? 1 : 0;\r\n                    if (set._items[type][bIdx]) {\r\n                        return true;\r\n                    } else {\r\n                        if (shouldAdd) {\r\n                            set._items[type][bIdx] = true;\r\n                        }\r\n                        return false;\r\n                    }\r\n                } else {\r\n                    if (shouldAdd) {\r\n                        set._items[type] = item ? [\r\n                            false,\r\n                            true\r\n                        ] : [\r\n                            true,\r\n                            false\r\n                        ];\r\n                    }\r\n                    return false;\r\n                }\r\n            case 'function':\r\n                // compare functions for reference equality\r\n                if (set._nativeSet !== null) {\r\n                    if (shouldAdd) {\r\n                        prevSize = set._nativeSet.size;\r\n                        set._nativeSet.add(item);\r\n                        newSize = set._nativeSet.size;\r\n                        return newSize > prevSize;\r\n                    } else {\r\n                        return set._nativeSet.has(item);\r\n                    }\r\n                } else {\r\n                    if (!(type in set._items)) {\r\n                        if (shouldAdd) {\r\n                            set._items[type] = [item];\r\n                        }\r\n                        return false;\r\n                    }\r\n                    if (!_contains(item, set._items[type])) {\r\n                        if (shouldAdd) {\r\n                            set._items[type].push(item);\r\n                        }\r\n                        return false;\r\n                    }\r\n                    return true;\r\n                }\r\n            case 'undefined':\r\n                if (set._items[type]) {\r\n                    return true;\r\n                } else {\r\n                    if (shouldAdd) {\r\n                        set._items[type] = true;\r\n                    }\r\n                    return false;\r\n                }\r\n            case 'object':\r\n                if (item === null) {\r\n                    if (!set._items['null']) {\r\n                        if (shouldAdd) {\r\n                            set._items['null'] = true;\r\n                        }\r\n                        return false;\r\n                    }\r\n                    return true;\r\n                }\r\n            /* falls through */\r\n            default:\r\n                // reduce the search size of heterogeneous sets by creating buckets\r\n                // for each type.\r\n                type = Object.prototype.toString.call(item);\r\n                if (!(type in set._items)) {\r\n                    if (shouldAdd) {\r\n                        set._items[type] = [item];\r\n                    }\r\n                    return false;\r\n                }\r\n                // scan through all previously applied items\r\n                if (!_contains(item, set._items[type])) {\r\n                    if (shouldAdd) {\r\n                        set._items[type].push(item);\r\n                    }\r\n                    return false;\r\n                }\r\n                return true;\r\n            }\r\n        }\r\n        return _Set;\r\n    }();\r\n\r\n    /**\r\n     * A function wrapping calls to the two functions in an `&&` operation,\r\n     * returning the result of the first function if it is false-y and the result\r\n     * of the second function otherwise. Note that this is short-circuited,\r\n     * meaning that the second function will not be invoked if the first returns a\r\n     * false-y value.\r\n     *\r\n     * In addition to functions, `R.both` also accepts any fantasy-land compatible\r\n     * applicative functor.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.12.0\r\n     * @category Logic\r\n     * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\r\n     * @param {Function} f a predicate\r\n     * @param {Function} g another predicate\r\n     * @return {Function} a function that applies its arguments to `f` and `g` and `&&`s their outputs together.\r\n     * @see R.and\r\n     * @example\r\n     *\r\n     *      var gt10 = x => x > 10;\r\n     *      var even = x => x % 2 === 0;\r\n     *      var f = R.both(gt10, even);\r\n     *      f(100); //=> true\r\n     *      f(101); //=> false\r\n     */\r\n    var both = _curry2(function both(f, g) {\r\n        return _isFunction(f) ? function _both() {\r\n            return f.apply(this, arguments) && g.apply(this, arguments);\r\n        } : lift(and)(f, g);\r\n    });\r\n\r\n    /**\r\n     * Takes a function `f` and returns a function `g` such that:\r\n     *\r\n     *   - applying `g` to zero or more arguments will give __true__ if applying\r\n     *     the same arguments to `f` gives a logical __false__ value; and\r\n     *\r\n     *   - applying `g` to zero or more arguments will give __false__ if applying\r\n     *     the same arguments to `f` gives a logical __true__ value.\r\n     *\r\n     * `R.complement` will work on all other functors as well.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.12.0\r\n     * @category Logic\r\n     * @sig (*... -> *) -> (*... -> Boolean)\r\n     * @param {Function} f\r\n     * @return {Function}\r\n     * @see R.not\r\n     * @example\r\n     *\r\n     *      var isEven = n => n % 2 === 0;\r\n     *      var isOdd = R.complement(isEven);\r\n     *      isOdd(21); //=> true\r\n     *      isOdd(42); //=> false\r\n     */\r\n    var complement = lift(not);\r\n\r\n    /**\r\n     * Returns the result of concatenating the given lists or strings.\r\n     *\r\n     * Note: `R.concat` expects both arguments to be of the same type,\r\n     * unlike the native `Array.prototype.concat` method. It will throw\r\n     * an error if you `concat` an Array with a non-Array value.\r\n     *\r\n     * Dispatches to the `concat` method of the first argument, if present.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category List\r\n     * @sig [a] -> [a] -> [a]\r\n     * @sig String -> String -> String\r\n     * @param {Array|String} a\r\n     * @param {Array|String} b\r\n     * @return {Array|String}\r\n     *\r\n     * @example\r\n     *\r\n     *      R.concat([], []); //=> []\r\n     *      R.concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\r\n     *      R.concat('ABC', 'DEF'); // 'ABCDEF'\r\n     */\r\n    var concat = _curry2(function concat(a, b) {\r\n        if (a == null || !_isFunction(a.concat)) {\r\n            throw new TypeError(toString(a) + ' does not have a method named \"concat\"');\r\n        }\r\n        if (_isArray(a) && !_isArray(b)) {\r\n            throw new TypeError(toString(b) + ' is not an array');\r\n        }\r\n        return a.concat(b);\r\n    });\r\n\r\n    /**\r\n     * A function wrapping calls to the two functions in an `||` operation,\r\n     * returning the result of the first function if it is truth-y and the result\r\n     * of the second function otherwise. Note that this is short-circuited,\r\n     * meaning that the second function will not be invoked if the first returns a\r\n     * truth-y value.\r\n     *\r\n     * In addition to functions, `R.either` also accepts any fantasy-land compatible\r\n     * applicative functor.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.12.0\r\n     * @category Logic\r\n     * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\r\n     * @param {Function} f a predicate\r\n     * @param {Function} g another predicate\r\n     * @return {Function} a function that applies its arguments to `f` and `g` and `||`s their outputs together.\r\n     * @see R.or\r\n     * @example\r\n     *\r\n     *      var gt10 = x => x > 10;\r\n     *      var even = x => x % 2 === 0;\r\n     *      var f = R.either(gt10, even);\r\n     *      f(101); //=> true\r\n     *      f(8); //=> true\r\n     */\r\n    var either = _curry2(function either(f, g) {\r\n        return _isFunction(f) ? function _either() {\r\n            return f.apply(this, arguments) || g.apply(this, arguments);\r\n        } : lift(or)(f, g);\r\n    });\r\n\r\n    /**\r\n     * Turns a named method with a specified arity into a function that can be\r\n     * called directly supplied with arguments and a target object.\r\n     *\r\n     * The returned function is curried and accepts `arity + 1` parameters where\r\n     * the final parameter is the target object.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category Function\r\n     * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)\r\n     * @param {Number} arity Number of arguments the returned function should take\r\n     *        before the target object.\r\n     * @param {String} method Name of the method to call.\r\n     * @return {Function} A new curried function.\r\n     * @example\r\n     *\r\n     *      var sliceFrom = R.invoker(1, 'slice');\r\n     *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\r\n     *      var sliceFrom6 = R.invoker(2, 'slice')(6);\r\n     *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\r\n     */\r\n    var invoker = _curry2(function invoker(arity, method) {\r\n        return curryN(arity + 1, function () {\r\n            var target = arguments[arity];\r\n            if (target != null && _isFunction(target[method])) {\r\n                return target[method].apply(target, _slice(arguments, 0, arity));\r\n            }\r\n            throw new TypeError(toString(target) + ' does not have a method named \"' + method + '\"');\r\n        });\r\n    });\r\n\r\n    /**\r\n     * Returns a string made by inserting the `separator` between each element and\r\n     * concatenating all the elements into a single string.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category List\r\n     * @sig String -> [a] -> String\r\n     * @param {Number|String} separator The string used to separate the elements.\r\n     * @param {Array} xs The elements to join into a string.\r\n     * @return {String} str The string made by concatenating `xs` with `separator`.\r\n     * @see R.split\r\n     * @example\r\n     *\r\n     *      var spacer = R.join(' ');\r\n     *      spacer(['a', 2, 3.4]);   //=> 'a 2 3.4'\r\n     *      R.join('|', [1, 2, 3]);    //=> '1|2|3'\r\n     */\r\n    var join = invoker(1, 'join');\r\n\r\n    /**\r\n     * Creates a new function that, when invoked, caches the result of calling `fn`\r\n     * for a given argument set and returns the result. Subsequent calls to the\r\n     * memoized `fn` with the same argument set will not result in an additional\r\n     * call to `fn`; instead, the cached result for that set of arguments will be\r\n     * returned.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category Function\r\n     * @sig (*... -> a) -> (*... -> a)\r\n     * @param {Function} fn The function to memoize.\r\n     * @return {Function} Memoized version of `fn`.\r\n     * @example\r\n     *\r\n     *      var count = 0;\r\n     *      var factorial = R.memoize(n => {\r\n     *        count += 1;\r\n     *        return R.product(R.range(1, n + 1));\r\n     *      });\r\n     *      factorial(5); //=> 120\r\n     *      factorial(5); //=> 120\r\n     *      factorial(5); //=> 120\r\n     *      count; //=> 1\r\n     */\r\n    var memoize = _curry1(function memoize(fn) {\r\n        var cache = {};\r\n        return _arity(fn.length, function () {\r\n            var key = toString(arguments);\r\n            if (!_has(key, cache)) {\r\n                cache[key] = fn.apply(this, arguments);\r\n            }\r\n            return cache[key];\r\n        });\r\n    });\r\n\r\n    /**\r\n     * Splits a string into an array of strings based on the given\r\n     * separator.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category String\r\n     * @sig (String | RegExp) -> String -> [String]\r\n     * @param {String|RegExp} sep The pattern.\r\n     * @param {String} str The string to separate into an array.\r\n     * @return {Array} The array of strings from `str` separated by `str`.\r\n     * @see R.join\r\n     * @example\r\n     *\r\n     *      var pathComponents = R.split('/');\r\n     *      R.tail(pathComponents('/usr/local/bin/node')); //=> ['usr', 'local', 'bin', 'node']\r\n     *\r\n     *      R.split('.', 'a.b.c.xyz.d'); //=> ['a', 'b', 'c', 'xyz', 'd']\r\n     */\r\n    var split = invoker(1, 'split');\r\n\r\n    /**\r\n     * Finds the set (i.e. no duplicates) of all elements contained in the first or\r\n     * second list, but not both.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.19.0\r\n     * @category Relation\r\n     * @sig [*] -> [*] -> [*]\r\n     * @param {Array} list1 The first list.\r\n     * @param {Array} list2 The second list.\r\n     * @return {Array} The elements in `list1` or `list2`, but not both.\r\n     * @see R.symmetricDifferenceWith, R.difference, R.differenceWith\r\n     * @example\r\n     *\r\n     *      R.symmetricDifference([1,2,3,4], [7,6,5,4,3]); //=> [1,2,7,6,5]\r\n     *      R.symmetricDifference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5,1,2]\r\n     */\r\n    var symmetricDifference = _curry2(function symmetricDifference(list1, list2) {\r\n        return concat(difference(list1, list2), difference(list2, list1));\r\n    });\r\n\r\n    /**\r\n     * Finds the set (i.e. no duplicates) of all elements contained in the first or\r\n     * second list, but not both. Duplication is determined according to the value\r\n     * returned by applying the supplied predicate to two list elements.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.19.0\r\n     * @category Relation\r\n     * @sig (a -> a -> Boolean) -> [a] -> [a] -> [a]\r\n     * @param {Function} pred A predicate used to test whether two items are equal.\r\n     * @param {Array} list1 The first list.\r\n     * @param {Array} list2 The second list.\r\n     * @return {Array} The elements in `list1` or `list2`, but not both.\r\n     * @see R.symmetricDifference, R.difference, R.differenceWith\r\n     * @example\r\n     *\r\n     *      var eqA = R.eqBy(R.prop('a'));\r\n     *      var l1 = [{a: 1}, {a: 2}, {a: 3}, {a: 4}];\r\n     *      var l2 = [{a: 3}, {a: 4}, {a: 5}, {a: 6}];\r\n     *      R.symmetricDifferenceWith(eqA, l1, l2); //=> [{a: 1}, {a: 2}, {a: 5}, {a: 6}]\r\n     */\r\n    var symmetricDifferenceWith = _curry3(function symmetricDifferenceWith(pred, list1, list2) {\r\n        return concat(differenceWith(pred, list1, list2), differenceWith(pred, list2, list1));\r\n    });\r\n\r\n    /**\r\n     * Determines whether a given string matches a given regular expression.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.12.0\r\n     * @category String\r\n     * @sig RegExp -> String -> Boolean\r\n     * @param {RegExp} pattern\r\n     * @param {String} str\r\n     * @return {Boolean}\r\n     * @see R.match\r\n     * @example\r\n     *\r\n     *      R.test(/^x/, 'xyz'); //=> true\r\n     *      R.test(/^y/, 'xyz'); //=> false\r\n     */\r\n    var test = _curry2(function test(pattern, str) {\r\n        if (!_isRegExp(pattern)) {\r\n            throw new TypeError('\\u2018test\\u2019 requires a value of type RegExp as its first argument; received ' + toString(pattern));\r\n        }\r\n        return _cloneRegExp(pattern).test(str);\r\n    });\r\n\r\n    /**\r\n     * The lower case version of a string.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.9.0\r\n     * @category String\r\n     * @sig String -> String\r\n     * @param {String} str The string to lower case.\r\n     * @return {String} The lower case version of `str`.\r\n     * @see R.toUpper\r\n     * @example\r\n     *\r\n     *      R.toLower('XYZ'); //=> 'xyz'\r\n     */\r\n    var toLower = invoker(0, 'toLowerCase');\r\n\r\n    /**\r\n     * The upper case version of a string.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.9.0\r\n     * @category String\r\n     * @sig String -> String\r\n     * @param {String} str The string to upper case.\r\n     * @return {String} The upper case version of `str`.\r\n     * @see R.toLower\r\n     * @example\r\n     *\r\n     *      R.toUpper('abc'); //=> 'ABC'\r\n     */\r\n    var toUpper = invoker(0, 'toUpperCase');\r\n\r\n    /**\r\n     * Returns a new list containing only one copy of each element in the original\r\n     * list, based upon the value returned by applying the supplied function to\r\n     * each list element. Prefers the first item if the supplied function produces\r\n     * the same value on two items. `R.equals` is used for comparison.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.16.0\r\n     * @category List\r\n     * @sig (a -> b) -> [a] -> [a]\r\n     * @param {Function} fn A function used to produce a value to use during comparisons.\r\n     * @param {Array} list The array to consider.\r\n     * @return {Array} The list of unique items.\r\n     * @example\r\n     *\r\n     *      R.uniqBy(Math.abs, [-1, -5, 2, 10, 1, 2]); //=> [-1, -5, 2, 10]\r\n     */\r\n    var uniqBy = _curry2(function uniqBy(fn, list) {\r\n        var set = new _Set();\r\n        var result = [];\r\n        var idx = 0;\r\n        var appliedItem, item;\r\n        while (idx < list.length) {\r\n            item = list[idx];\r\n            appliedItem = fn(item);\r\n            if (set.add(appliedItem)) {\r\n                result.push(item);\r\n            }\r\n            idx += 1;\r\n        }\r\n        return result;\r\n    });\r\n\r\n    /**\r\n     * Returns a new list containing only one copy of each element in the original\r\n     * list. `R.equals` is used to determine equality.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category List\r\n     * @sig [a] -> [a]\r\n     * @param {Array} list The array to consider.\r\n     * @return {Array} The list of unique items.\r\n     * @example\r\n     *\r\n     *      R.uniq([1, 1, 2, 1]); //=> [1, 2]\r\n     *      R.uniq([1, '1']);     //=> [1, '1']\r\n     *      R.uniq([[42], [42]]); //=> [[42]]\r\n     */\r\n    var uniq = uniqBy(identity);\r\n\r\n    /**\r\n     * Combines two lists into a set (i.e. no duplicates) composed of those\r\n     * elements common to both lists.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category Relation\r\n     * @sig [*] -> [*] -> [*]\r\n     * @param {Array} list1 The first list.\r\n     * @param {Array} list2 The second list.\r\n     * @return {Array} The list of elements found in both `list1` and `list2`.\r\n     * @see R.intersectionWith\r\n     * @example\r\n     *\r\n     *      R.intersection([1,2,3,4], [7,6,5,4,3]); //=> [4, 3]\r\n     */\r\n    var intersection = _curry2(function intersection(list1, list2) {\r\n        var lookupList, filteredList;\r\n        if (list1.length > list2.length) {\r\n            lookupList = list1;\r\n            filteredList = list2;\r\n        } else {\r\n            lookupList = list2;\r\n            filteredList = list1;\r\n        }\r\n        return uniq(_filter(flip(_contains)(lookupList), filteredList));\r\n    });\r\n\r\n    /**\r\n     * Combines two lists into a set (i.e. no duplicates) composed of the elements\r\n     * of each list.\r\n     *\r\n     * @func\r\n     * @memberOf R\r\n     * @since v0.1.0\r\n     * @category Relation\r\n     * @sig [*] -> [*] -> [*]\r\n     * @param {Array} as The first list.\r\n     * @param {Array} bs The second list.\r\n     * @return {Array} The first and second lists concatenated, with\r\n     *         duplicates removed.\r\n     * @example\r\n     *\r\n     *      R.union([1, 2, 3], [2, 3, 4]); //=> [1, 2, 3, 4]\r\n     */\r\n    var union = _curry2(compose(uniq, _concat));\r\n\r\n    var R = {\r\n        F: F,\r\n        T: T,\r\n        __: __,\r\n        add: add,\r\n        addIndex: addIndex,\r\n        adjust: adjust,\r\n        all: all,\r\n        allPass: allPass,\r\n        always: always,\r\n        and: and,\r\n        any: any,\r\n        anyPass: anyPass,\r\n        ap: ap,\r\n        aperture: aperture,\r\n        append: append,\r\n        apply: apply,\r\n        applySpec: applySpec,\r\n        assoc: assoc,\r\n        assocPath: assocPath,\r\n        binary: binary,\r\n        bind: bind,\r\n        both: both,\r\n        call: call,\r\n        chain: chain,\r\n        clamp: clamp,\r\n        clone: clone,\r\n        comparator: comparator,\r\n        complement: complement,\r\n        compose: compose,\r\n        composeK: composeK,\r\n        composeP: composeP,\r\n        concat: concat,\r\n        cond: cond,\r\n        construct: construct,\r\n        constructN: constructN,\r\n        contains: contains,\r\n        converge: converge,\r\n        countBy: countBy,\r\n        curry: curry,\r\n        curryN: curryN,\r\n        dec: dec,\r\n        defaultTo: defaultTo,\r\n        difference: difference,\r\n        differenceWith: differenceWith,\r\n        dissoc: dissoc,\r\n        dissocPath: dissocPath,\r\n        divide: divide,\r\n        drop: drop,\r\n        dropLast: dropLast,\r\n        dropLastWhile: dropLastWhile,\r\n        dropRepeats: dropRepeats,\r\n        dropRepeatsWith: dropRepeatsWith,\r\n        dropWhile: dropWhile,\r\n        either: either,\r\n        empty: empty,\r\n        eqBy: eqBy,\r\n        eqProps: eqProps,\r\n        equals: equals,\r\n        evolve: evolve,\r\n        filter: filter,\r\n        find: find,\r\n        findIndex: findIndex,\r\n        findLast: findLast,\r\n        findLastIndex: findLastIndex,\r\n        flatten: flatten,\r\n        flip: flip,\r\n        forEach: forEach,\r\n        fromPairs: fromPairs,\r\n        groupBy: groupBy,\r\n        groupWith: groupWith,\r\n        gt: gt,\r\n        gte: gte,\r\n        has: has,\r\n        hasIn: hasIn,\r\n        head: head,\r\n        identical: identical,\r\n        identity: identity,\r\n        ifElse: ifElse,\r\n        inc: inc,\r\n        indexBy: indexBy,\r\n        indexOf: indexOf,\r\n        init: init,\r\n        insert: insert,\r\n        insertAll: insertAll,\r\n        intersection: intersection,\r\n        intersectionWith: intersectionWith,\r\n        intersperse: intersperse,\r\n        into: into,\r\n        invert: invert,\r\n        invertObj: invertObj,\r\n        invoker: invoker,\r\n        is: is,\r\n        isArrayLike: isArrayLike,\r\n        isEmpty: isEmpty,\r\n        isNil: isNil,\r\n        join: join,\r\n        juxt: juxt,\r\n        keys: keys,\r\n        keysIn: keysIn,\r\n        last: last,\r\n        lastIndexOf: lastIndexOf,\r\n        length: length,\r\n        lens: lens,\r\n        lensIndex: lensIndex,\r\n        lensPath: lensPath,\r\n        lensProp: lensProp,\r\n        lift: lift,\r\n        liftN: liftN,\r\n        lt: lt,\r\n        lte: lte,\r\n        map: map,\r\n        mapAccum: mapAccum,\r\n        mapAccumRight: mapAccumRight,\r\n        mapObjIndexed: mapObjIndexed,\r\n        match: match,\r\n        mathMod: mathMod,\r\n        max: max,\r\n        maxBy: maxBy,\r\n        mean: mean,\r\n        median: median,\r\n        memoize: memoize,\r\n        merge: merge,\r\n        mergeAll: mergeAll,\r\n        mergeWith: mergeWith,\r\n        mergeWithKey: mergeWithKey,\r\n        min: min,\r\n        minBy: minBy,\r\n        modulo: modulo,\r\n        multiply: multiply,\r\n        nAry: nAry,\r\n        negate: negate,\r\n        none: none,\r\n        not: not,\r\n        nth: nth,\r\n        nthArg: nthArg,\r\n        objOf: objOf,\r\n        of: of,\r\n        omit: omit,\r\n        once: once,\r\n        or: or,\r\n        over: over,\r\n        pair: pair,\r\n        partial: partial,\r\n        partialRight: partialRight,\r\n        partition: partition,\r\n        path: path,\r\n        pathEq: pathEq,\r\n        pathOr: pathOr,\r\n        pathSatisfies: pathSatisfies,\r\n        pick: pick,\r\n        pickAll: pickAll,\r\n        pickBy: pickBy,\r\n        pipe: pipe,\r\n        pipeK: pipeK,\r\n        pipeP: pipeP,\r\n        pluck: pluck,\r\n        prepend: prepend,\r\n        product: product,\r\n        project: project,\r\n        prop: prop,\r\n        propEq: propEq,\r\n        propIs: propIs,\r\n        propOr: propOr,\r\n        propSatisfies: propSatisfies,\r\n        props: props,\r\n        range: range,\r\n        reduce: reduce,\r\n        reduceBy: reduceBy,\r\n        reduceRight: reduceRight,\r\n        reduceWhile: reduceWhile,\r\n        reduced: reduced,\r\n        reject: reject,\r\n        remove: remove,\r\n        repeat: repeat,\r\n        replace: replace,\r\n        reverse: reverse,\r\n        scan: scan,\r\n        sequence: sequence,\r\n        set: set,\r\n        slice: slice,\r\n        sort: sort,\r\n        sortBy: sortBy,\r\n        split: split,\r\n        splitAt: splitAt,\r\n        splitEvery: splitEvery,\r\n        splitWhen: splitWhen,\r\n        subtract: subtract,\r\n        sum: sum,\r\n        symmetricDifference: symmetricDifference,\r\n        symmetricDifferenceWith: symmetricDifferenceWith,\r\n        tail: tail,\r\n        take: take,\r\n        takeLast: takeLast,\r\n        takeLastWhile: takeLastWhile,\r\n        takeWhile: takeWhile,\r\n        tap: tap,\r\n        test: test,\r\n        times: times,\r\n        toLower: toLower,\r\n        toPairs: toPairs,\r\n        toPairsIn: toPairsIn,\r\n        toString: toString,\r\n        toUpper: toUpper,\r\n        transduce: transduce,\r\n        transpose: transpose,\r\n        traverse: traverse,\r\n        trim: trim,\r\n        tryCatch: tryCatch,\r\n        type: type,\r\n        unapply: unapply,\r\n        unary: unary,\r\n        uncurryN: uncurryN,\r\n        unfold: unfold,\r\n        union: union,\r\n        unionWith: unionWith,\r\n        uniq: uniq,\r\n        uniqBy: uniqBy,\r\n        uniqWith: uniqWith,\r\n        unless: unless,\r\n        unnest: unnest,\r\n        until: until,\r\n        update: update,\r\n        useWith: useWith,\r\n        values: values,\r\n        valuesIn: valuesIn,\r\n        view: view,\r\n        when: when,\r\n        where: where,\r\n        whereEq: whereEq,\r\n        without: without,\r\n        wrap: wrap,\r\n        xprod: xprod,\r\n        zip: zip,\r\n        zipObj: zipObj,\r\n        zipWith: zipWith\r\n    };\r\n  /* eslint-env amd */\r\n\r\n  /* TEST_ENTRY_POINT */\r\n\r\n  if (typeof exports === 'object') {\r\n    module.exports = R;\r\n  } else if (typeof define === 'function' && define.amd) {\r\n    define(function() { return R; });\r\n  } else {\r\n    this.R = R;\r\n  }\r\n\r\n}.call(this));\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/ramda/dist/ramda.js\n ** module id = 5\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = merge;\r\nfunction merge() {\r\n  var obj = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\r\n  var defaults = arguments[1];\r\n\r\n  for (var key in defaults) {\r\n    if (typeof obj[key] === 'undefined') {\r\n      obj[key] = defaults[key];\r\n    }\r\n  }\r\n  return obj;\r\n}\r\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/lib/util/merge.js\n ** module id = 17\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = isFDQN;\r\n\r\nvar _assertString = require('./util/assertString');\r\n\r\nvar _assertString2 = _interopRequireDefault(_assertString);\r\n\r\nvar _merge = require('./util/merge');\r\n\r\nvar _merge2 = _interopRequireDefault(_merge);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nvar default_fqdn_options = {\r\n  require_tld: true,\r\n  allow_underscores: false,\r\n  allow_trailing_dot: false\r\n};\r\n\r\nfunction isFDQN(str, options) {\r\n  (0, _assertString2.default)(str);\r\n  options = (0, _merge2.default)(options, default_fqdn_options);\r\n\r\n  /* Remove the optional trailing dot before checking validity */\r\n  if (options.allow_trailing_dot && str[str.length - 1] === '.') {\r\n    str = str.substring(0, str.length - 1);\r\n  }\r\n  var parts = str.split('.');\r\n  if (options.require_tld) {\r\n    var tld = parts.pop();\r\n    if (!parts.length || !/^([a-z\\u00a1-\\uffff]{2,}|xn[a-z0-9-]{2,})$/i.test(tld)) {\r\n      return false;\r\n    }\r\n  }\r\n  for (var part, i = 0; i < parts.length; i++) {\r\n    part = parts[i];\r\n    if (options.allow_underscores) {\r\n      part = part.replace(/_/g, '');\r\n    }\r\n    if (!/^[a-z\\u00a1-\\uffff0-9-]+$/i.test(part)) {\r\n      return false;\r\n    }\r\n    if (/[\\uff01-\\uff5e]/.test(part)) {\r\n      // disallow full-width chars\r\n      return false;\r\n    }\r\n    if (part[0] === '-' || part[part.length - 1] === '-') {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/lib/isFQDN.js\n ** module id = 37\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = toDate;\r\n\r\nvar _assertString = require('./util/assertString');\r\n\r\nvar _assertString2 = _interopRequireDefault(_assertString);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nfunction toDate(date) {\r\n  (0, _assertString2.default)(date);\r\n  date = Date.parse(date);\r\n  return !isNaN(date) ? new Date(date) : null;\r\n}\r\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/lib/toDate.js\n ** module id = 38\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\n\r\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\r\n\r\nexports.default = toString;\r\nfunction toString(input) {\r\n  if ((typeof input === 'undefined' ? 'undefined' : _typeof(input)) === 'object' && input !== null) {\r\n    if (typeof input.toString === 'function') {\r\n      input = input.toString();\r\n    } else {\r\n      input = '[object Object]';\r\n    }\r\n  } else if (input === null || typeof input === 'undefined' || isNaN(input) && !input.length) {\r\n    input = '';\r\n  }\r\n  return String(input);\r\n}\r\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/lib/util/toString.js\n ** module id = 39\n ** module chunks = 0\n **/","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar symbol_observable_1 = require('symbol-observable');\r\nvar NO = {};\r\nfunction noop() { }\r\nfunction copy(a) {\r\n    var l = a.length;\r\n    var b = Array(l);\r\n    for (var i = 0; i < l; ++i) {\r\n        b[i] = a[i];\r\n    }\r\n    return b;\r\n}\r\nexports.NO_IL = {\r\n    _n: noop,\r\n    _e: noop,\r\n    _c: noop,\r\n};\r\n// mutates the input\r\nfunction internalizeProducer(producer) {\r\n    producer._start =\r\n        function _start(il) {\r\n            il.next = il._n;\r\n            il.error = il._e;\r\n            il.complete = il._c;\r\n            this.start(il);\r\n        };\r\n    producer._stop = producer.stop;\r\n}\r\nfunction compose2(f1, f2) {\r\n    return function composedFn(arg) {\r\n        return f1(f2(arg));\r\n    };\r\n}\r\nfunction and(f1, f2) {\r\n    return function andFn(t) {\r\n        return f1(t) && f2(t);\r\n    };\r\n}\r\nvar Subscription = (function () {\r\n    function Subscription(_stream, _listener) {\r\n        this._stream = _stream;\r\n        this._listener = _listener;\r\n    }\r\n    Subscription.prototype.unsubscribe = function () {\r\n        this._stream.removeListener(this._listener);\r\n    };\r\n    return Subscription;\r\n}());\r\nexports.Subscription = Subscription;\r\nvar ObservableProducer = (function () {\r\n    function ObservableProducer(observable) {\r\n        this.type = 'fromObservable';\r\n        this.ins = observable;\r\n    }\r\n    ObservableProducer.prototype._start = function (out) {\r\n        this.out = out;\r\n        this._subscription = this.ins.subscribe(new ObservableListener(out));\r\n    };\r\n    ObservableProducer.prototype._stop = function () {\r\n        this._subscription.unsubscribe();\r\n    };\r\n    return ObservableProducer;\r\n}());\r\nvar ObservableListener = (function () {\r\n    function ObservableListener(_listener) {\r\n        this._listener = _listener;\r\n    }\r\n    ObservableListener.prototype.next = function (value) {\r\n        this._listener._n(value);\r\n    };\r\n    ObservableListener.prototype.error = function (err) {\r\n        this._listener._e(err);\r\n    };\r\n    ObservableListener.prototype.complete = function () {\r\n        this._listener._c();\r\n    };\r\n    return ObservableListener;\r\n}());\r\nvar MergeProducer = (function () {\r\n    function MergeProducer(insArr) {\r\n        this.type = 'merge';\r\n        this.insArr = insArr;\r\n        this.out = NO;\r\n        this.ac = 0;\r\n    }\r\n    MergeProducer.prototype._start = function (out) {\r\n        this.out = out;\r\n        var s = this.insArr;\r\n        var L = s.length;\r\n        this.ac = L;\r\n        for (var i = 0; i < L; i++) {\r\n            s[i]._add(this);\r\n        }\r\n    };\r\n    MergeProducer.prototype._stop = function () {\r\n        var s = this.insArr;\r\n        var L = s.length;\r\n        for (var i = 0; i < L; i++) {\r\n            s[i]._remove(this);\r\n        }\r\n        this.out = NO;\r\n    };\r\n    MergeProducer.prototype._n = function (t) {\r\n        var u = this.out;\r\n        if (u === NO)\r\n            return;\r\n        u._n(t);\r\n    };\r\n    MergeProducer.prototype._e = function (err) {\r\n        var u = this.out;\r\n        if (u === NO)\r\n            return;\r\n        u._e(err);\r\n    };\r\n    MergeProducer.prototype._c = function () {\r\n        if (--this.ac <= 0) {\r\n            var u = this.out;\r\n            if (u === NO)\r\n                return;\r\n            u._c();\r\n        }\r\n    };\r\n    return MergeProducer;\r\n}());\r\nexports.MergeProducer = MergeProducer;\r\nvar CombineListener = (function () {\r\n    function CombineListener(i, out, p) {\r\n        this.i = i;\r\n        this.out = out;\r\n        this.p = p;\r\n        p.ils.push(this);\r\n    }\r\n    CombineListener.prototype._n = function (t) {\r\n        var p = this.p, out = this.out;\r\n        if (out === NO)\r\n            return;\r\n        if (p.up(t, this.i)) {\r\n            out._n(p.vals);\r\n        }\r\n    };\r\n    CombineListener.prototype._e = function (err) {\r\n        var out = this.out;\r\n        if (out === NO)\r\n            return;\r\n        out._e(err);\r\n    };\r\n    CombineListener.prototype._c = function () {\r\n        var p = this.p;\r\n        if (p.out === NO)\r\n            return;\r\n        if (--p.Nc === 0) {\r\n            p.out._c();\r\n        }\r\n    };\r\n    return CombineListener;\r\n}());\r\nexports.CombineListener = CombineListener;\r\nvar CombineProducer = (function () {\r\n    function CombineProducer(insArr) {\r\n        this.type = 'combine';\r\n        this.insArr = insArr;\r\n        this.out = NO;\r\n        this.ils = [];\r\n        this.Nc = this.Nn = 0;\r\n        this.vals = [];\r\n    }\r\n    CombineProducer.prototype.up = function (t, i) {\r\n        var v = this.vals[i];\r\n        var Nn = !this.Nn ? 0 : v === NO ? --this.Nn : this.Nn;\r\n        this.vals[i] = t;\r\n        return Nn === 0;\r\n    };\r\n    CombineProducer.prototype._start = function (out) {\r\n        this.out = out;\r\n        var s = this.insArr;\r\n        var n = this.Nc = this.Nn = s.length;\r\n        var vals = this.vals = new Array(n);\r\n        if (n === 0) {\r\n            out._n([]);\r\n            out._c();\r\n        }\r\n        else {\r\n            for (var i = 0; i < n; i++) {\r\n                vals[i] = NO;\r\n                s[i]._add(new CombineListener(i, out, this));\r\n            }\r\n        }\r\n    };\r\n    CombineProducer.prototype._stop = function () {\r\n        var s = this.insArr;\r\n        var n = s.length;\r\n        var ils = this.ils;\r\n        for (var i = 0; i < n; i++) {\r\n            s[i]._remove(ils[i]);\r\n        }\r\n        this.out = NO;\r\n        this.ils = [];\r\n        this.vals = [];\r\n    };\r\n    return CombineProducer;\r\n}());\r\nexports.CombineProducer = CombineProducer;\r\nvar FromArrayProducer = (function () {\r\n    function FromArrayProducer(a) {\r\n        this.type = 'fromArray';\r\n        this.a = a;\r\n    }\r\n    FromArrayProducer.prototype._start = function (out) {\r\n        var a = this.a;\r\n        for (var i = 0, l = a.length; i < l; i++) {\r\n            out._n(a[i]);\r\n        }\r\n        out._c();\r\n    };\r\n    FromArrayProducer.prototype._stop = function () {\r\n    };\r\n    return FromArrayProducer;\r\n}());\r\nexports.FromArrayProducer = FromArrayProducer;\r\nvar FromPromiseProducer = (function () {\r\n    function FromPromiseProducer(p) {\r\n        this.type = 'fromPromise';\r\n        this.on = false;\r\n        this.p = p;\r\n    }\r\n    FromPromiseProducer.prototype._start = function (out) {\r\n        var prod = this;\r\n        this.on = true;\r\n        this.p.then(function (v) {\r\n            if (prod.on) {\r\n                out._n(v);\r\n                out._c();\r\n            }\r\n        }, function (e) {\r\n            out._e(e);\r\n        }).then(null, function (err) {\r\n            setTimeout(function () { throw err; });\r\n        });\r\n    };\r\n    FromPromiseProducer.prototype._stop = function () {\r\n        this.on = false;\r\n    };\r\n    return FromPromiseProducer;\r\n}());\r\nexports.FromPromiseProducer = FromPromiseProducer;\r\nvar PeriodicProducer = (function () {\r\n    function PeriodicProducer(period) {\r\n        this.type = 'periodic';\r\n        this.period = period;\r\n        this.intervalID = -1;\r\n        this.i = 0;\r\n    }\r\n    PeriodicProducer.prototype._start = function (stream) {\r\n        var self = this;\r\n        function intervalHandler() { stream._n(self.i++); }\r\n        this.intervalID = setInterval(intervalHandler, this.period);\r\n    };\r\n    PeriodicProducer.prototype._stop = function () {\r\n        if (this.intervalID !== -1)\r\n            clearInterval(this.intervalID);\r\n        this.intervalID = -1;\r\n        this.i = 0;\r\n    };\r\n    return PeriodicProducer;\r\n}());\r\nexports.PeriodicProducer = PeriodicProducer;\r\nvar DebugOperator = (function () {\r\n    function DebugOperator(arg, ins) {\r\n        this.type = 'debug';\r\n        this.ins = ins;\r\n        this.out = NO;\r\n        this.s = noop;\r\n        this.l = '';\r\n        if (typeof arg === 'string') {\r\n            this.l = arg;\r\n        }\r\n        else if (typeof arg === 'function') {\r\n            this.s = arg;\r\n        }\r\n    }\r\n    DebugOperator.prototype._start = function (out) {\r\n        this.out = out;\r\n        this.ins._add(this);\r\n    };\r\n    DebugOperator.prototype._stop = function () {\r\n        this.ins._remove(this);\r\n        this.out = NO;\r\n    };\r\n    DebugOperator.prototype._n = function (t) {\r\n        var u = this.out;\r\n        if (u === NO)\r\n            return;\r\n        var s = this.s, l = this.l;\r\n        if (s !== noop) {\r\n            try {\r\n                s(t);\r\n            }\r\n            catch (e) {\r\n                u._e(e);\r\n            }\r\n        }\r\n        else if (l) {\r\n            console.log(l + ':', t);\r\n        }\r\n        else {\r\n            console.log(t);\r\n        }\r\n        u._n(t);\r\n    };\r\n    DebugOperator.prototype._e = function (err) {\r\n        var u = this.out;\r\n        if (u === NO)\r\n            return;\r\n        u._e(err);\r\n    };\r\n    DebugOperator.prototype._c = function () {\r\n        var u = this.out;\r\n        if (u === NO)\r\n            return;\r\n        u._c();\r\n    };\r\n    return DebugOperator;\r\n}());\r\nexports.DebugOperator = DebugOperator;\r\nvar DropOperator = (function () {\r\n    function DropOperator(max, ins) {\r\n        this.type = 'drop';\r\n        this.ins = ins;\r\n        this.out = NO;\r\n        this.max = max;\r\n        this.dropped = 0;\r\n    }\r\n    DropOperator.prototype._start = function (out) {\r\n        this.out = out;\r\n        this.dropped = 0;\r\n        this.ins._add(this);\r\n    };\r\n    DropOperator.prototype._stop = function () {\r\n        this.ins._remove(this);\r\n        this.out = NO;\r\n    };\r\n    DropOperator.prototype._n = function (t) {\r\n        var u = this.out;\r\n        if (u === NO)\r\n            return;\r\n        if (this.dropped++ >= this.max)\r\n            u._n(t);\r\n    };\r\n    DropOperator.prototype._e = function (err) {\r\n        var u = this.out;\r\n        if (u === NO)\r\n            return;\r\n        u._e(err);\r\n    };\r\n    DropOperator.prototype._c = function () {\r\n        var u = this.out;\r\n        if (u === NO)\r\n            return;\r\n        u._c();\r\n    };\r\n    return DropOperator;\r\n}());\r\nexports.DropOperator = DropOperator;\r\nvar OtherIL = (function () {\r\n    function OtherIL(out, op) {\r\n        this.out = out;\r\n        this.op = op;\r\n    }\r\n    OtherIL.prototype._n = function (t) {\r\n        this.op.end();\r\n    };\r\n    OtherIL.prototype._e = function (err) {\r\n        this.out._e(err);\r\n    };\r\n    OtherIL.prototype._c = function () {\r\n        this.op.end();\r\n    };\r\n    return OtherIL;\r\n}());\r\nvar EndWhenOperator = (function () {\r\n    function EndWhenOperator(o, ins) {\r\n        this.type = 'endWhen';\r\n        this.ins = ins;\r\n        this.out = NO;\r\n        this.o = o;\r\n        this.oil = exports.NO_IL;\r\n    }\r\n    EndWhenOperator.prototype._start = function (out) {\r\n        this.out = out;\r\n        this.o._add(this.oil = new OtherIL(out, this));\r\n        this.ins._add(this);\r\n    };\r\n    EndWhenOperator.prototype._stop = function () {\r\n        this.ins._remove(this);\r\n        this.o._remove(this.oil);\r\n        this.out = NO;\r\n        this.oil = exports.NO_IL;\r\n    };\r\n    EndWhenOperator.prototype.end = function () {\r\n        var u = this.out;\r\n        if (u === NO)\r\n            return;\r\n        u._c();\r\n    };\r\n    EndWhenOperator.prototype._n = function (t) {\r\n        var u = this.out;\r\n        if (u === NO)\r\n            return;\r\n        u._n(t);\r\n    };\r\n    EndWhenOperator.prototype._e = function (err) {\r\n        var u = this.out;\r\n        if (u === NO)\r\n            return;\r\n        u._e(err);\r\n    };\r\n    EndWhenOperator.prototype._c = function () {\r\n        this.end();\r\n    };\r\n    return EndWhenOperator;\r\n}());\r\nexports.EndWhenOperator = EndWhenOperator;\r\nvar FilterOperator = (function () {\r\n    function FilterOperator(passes, ins) {\r\n        this.type = 'filter';\r\n        this.ins = ins;\r\n        this.out = NO;\r\n        this.passes = passes;\r\n    }\r\n    FilterOperator.prototype._start = function (out) {\r\n        this.out = out;\r\n        this.ins._add(this);\r\n    };\r\n    FilterOperator.prototype._stop = function () {\r\n        this.ins._remove(this);\r\n        this.out = NO;\r\n    };\r\n    FilterOperator.prototype._n = function (t) {\r\n        var u = this.out;\r\n        if (u === NO)\r\n            return;\r\n        try {\r\n            if (this.passes(t))\r\n                u._n(t);\r\n        }\r\n        catch (e) {\r\n            u._e(e);\r\n        }\r\n    };\r\n    FilterOperator.prototype._e = function (err) {\r\n        var u = this.out;\r\n        if (u === NO)\r\n            return;\r\n        u._e(err);\r\n    };\r\n    FilterOperator.prototype._c = function () {\r\n        var u = this.out;\r\n        if (u === NO)\r\n            return;\r\n        u._c();\r\n    };\r\n    return FilterOperator;\r\n}());\r\nexports.FilterOperator = FilterOperator;\r\nvar FlattenListener = (function () {\r\n    function FlattenListener(out, op) {\r\n        this.out = out;\r\n        this.op = op;\r\n    }\r\n    FlattenListener.prototype._n = function (t) {\r\n        this.out._n(t);\r\n    };\r\n    FlattenListener.prototype._e = function (err) {\r\n        this.out._e(err);\r\n    };\r\n    FlattenListener.prototype._c = function () {\r\n        this.op.inner = NO;\r\n        this.op.less();\r\n    };\r\n    return FlattenListener;\r\n}());\r\nvar FlattenOperator = (function () {\r\n    function FlattenOperator(ins) {\r\n        this.type = 'flatten';\r\n        this.ins = ins;\r\n        this.out = NO;\r\n        this.open = true;\r\n        this.inner = NO;\r\n        this.il = exports.NO_IL;\r\n    }\r\n    FlattenOperator.prototype._start = function (out) {\r\n        this.out = out;\r\n        this.open = true;\r\n        this.inner = NO;\r\n        this.il = exports.NO_IL;\r\n        this.ins._add(this);\r\n    };\r\n    FlattenOperator.prototype._stop = function () {\r\n        this.ins._remove(this);\r\n        if (this.inner !== NO)\r\n            this.inner._remove(this.il);\r\n        this.out = NO;\r\n        this.open = true;\r\n        this.inner = NO;\r\n        this.il = exports.NO_IL;\r\n    };\r\n    FlattenOperator.prototype.less = function () {\r\n        var u = this.out;\r\n        if (u === NO)\r\n            return;\r\n        if (!this.open && this.inner === NO)\r\n            u._c();\r\n    };\r\n    FlattenOperator.prototype._n = function (s) {\r\n        var u = this.out;\r\n        if (u === NO)\r\n            return;\r\n        var _a = this, inner = _a.inner, il = _a.il;\r\n        if (inner !== NO && il !== exports.NO_IL)\r\n            inner._remove(il);\r\n        (this.inner = s)._add(this.il = new FlattenListener(u, this));\r\n    };\r\n    FlattenOperator.prototype._e = function (err) {\r\n        var u = this.out;\r\n        if (u === NO)\r\n            return;\r\n        u._e(err);\r\n    };\r\n    FlattenOperator.prototype._c = function () {\r\n        this.open = false;\r\n        this.less();\r\n    };\r\n    return FlattenOperator;\r\n}());\r\nexports.FlattenOperator = FlattenOperator;\r\nvar FoldOperator = (function () {\r\n    function FoldOperator(f, seed, ins) {\r\n        this.type = 'fold';\r\n        this.ins = ins;\r\n        this.out = NO;\r\n        this.f = f;\r\n        this.acc = this.seed = seed;\r\n    }\r\n    FoldOperator.prototype._start = function (out) {\r\n        this.out = out;\r\n        this.acc = this.seed;\r\n        out._n(this.acc);\r\n        this.ins._add(this);\r\n    };\r\n    FoldOperator.prototype._stop = function () {\r\n        this.ins._remove(this);\r\n        this.out = NO;\r\n        this.acc = this.seed;\r\n    };\r\n    FoldOperator.prototype._n = function (t) {\r\n        var u = this.out;\r\n        if (u === NO)\r\n            return;\r\n        try {\r\n            u._n(this.acc = this.f(this.acc, t));\r\n        }\r\n        catch (e) {\r\n            u._e(e);\r\n        }\r\n    };\r\n    FoldOperator.prototype._e = function (err) {\r\n        var u = this.out;\r\n        if (u === NO)\r\n            return;\r\n        u._e(err);\r\n    };\r\n    FoldOperator.prototype._c = function () {\r\n        var u = this.out;\r\n        if (u === NO)\r\n            return;\r\n        u._c();\r\n    };\r\n    return FoldOperator;\r\n}());\r\nexports.FoldOperator = FoldOperator;\r\nvar LastOperator = (function () {\r\n    function LastOperator(ins) {\r\n        this.type = 'last';\r\n        this.ins = ins;\r\n        this.out = NO;\r\n        this.has = false;\r\n        this.val = NO;\r\n    }\r\n    LastOperator.prototype._start = function (out) {\r\n        this.out = out;\r\n        this.has = false;\r\n        this.ins._add(this);\r\n    };\r\n    LastOperator.prototype._stop = function () {\r\n        this.ins._remove(this);\r\n        this.out = NO;\r\n        this.val = NO;\r\n    };\r\n    LastOperator.prototype._n = function (t) {\r\n        this.has = true;\r\n        this.val = t;\r\n    };\r\n    LastOperator.prototype._e = function (err) {\r\n        var u = this.out;\r\n        if (u === NO)\r\n            return;\r\n        u._e(err);\r\n    };\r\n    LastOperator.prototype._c = function () {\r\n        var u = this.out;\r\n        if (u === NO)\r\n            return;\r\n        if (this.has) {\r\n            u._n(this.val);\r\n            u._c();\r\n        }\r\n        else {\r\n            u._e('TODO show proper error');\r\n        }\r\n    };\r\n    return LastOperator;\r\n}());\r\nexports.LastOperator = LastOperator;\r\nvar MapFlattenInner = (function () {\r\n    function MapFlattenInner(out, op) {\r\n        this.out = out;\r\n        this.op = op;\r\n    }\r\n    MapFlattenInner.prototype._n = function (r) {\r\n        this.out._n(r);\r\n    };\r\n    MapFlattenInner.prototype._e = function (err) {\r\n        this.out._e(err);\r\n    };\r\n    MapFlattenInner.prototype._c = function () {\r\n        this.op.inner = NO;\r\n        this.op.less();\r\n    };\r\n    return MapFlattenInner;\r\n}());\r\nvar MapFlattenOperator = (function () {\r\n    function MapFlattenOperator(mapOp) {\r\n        this.type = mapOp.type + \"+flatten\";\r\n        this.ins = mapOp.ins;\r\n        this.out = NO;\r\n        this.mapOp = mapOp;\r\n        this.inner = NO;\r\n        this.il = exports.NO_IL;\r\n        this.open = true;\r\n    }\r\n    MapFlattenOperator.prototype._start = function (out) {\r\n        this.out = out;\r\n        this.inner = NO;\r\n        this.il = exports.NO_IL;\r\n        this.open = true;\r\n        this.mapOp.ins._add(this);\r\n    };\r\n    MapFlattenOperator.prototype._stop = function () {\r\n        this.mapOp.ins._remove(this);\r\n        if (this.inner !== NO)\r\n            this.inner._remove(this.il);\r\n        this.out = NO;\r\n        this.inner = NO;\r\n        this.il = exports.NO_IL;\r\n    };\r\n    MapFlattenOperator.prototype.less = function () {\r\n        if (!this.open && this.inner === NO) {\r\n            var u = this.out;\r\n            if (u === NO)\r\n                return;\r\n            u._c();\r\n        }\r\n    };\r\n    MapFlattenOperator.prototype._n = function (v) {\r\n        var u = this.out;\r\n        if (u === NO)\r\n            return;\r\n        var _a = this, inner = _a.inner, il = _a.il;\r\n        var s;\r\n        try {\r\n            s = this.mapOp.project(v);\r\n        }\r\n        catch (e) {\r\n            u._e(e);\r\n            return;\r\n        }\r\n        if (inner !== NO && il !== exports.NO_IL)\r\n            inner._remove(il);\r\n        (this.inner = s)._add(this.il = new MapFlattenInner(u, this));\r\n    };\r\n    MapFlattenOperator.prototype._e = function (err) {\r\n        var u = this.out;\r\n        if (u === NO)\r\n            return;\r\n        u._e(err);\r\n    };\r\n    MapFlattenOperator.prototype._c = function () {\r\n        this.open = false;\r\n        this.less();\r\n    };\r\n    return MapFlattenOperator;\r\n}());\r\nexports.MapFlattenOperator = MapFlattenOperator;\r\nvar MapOperator = (function () {\r\n    function MapOperator(project, ins) {\r\n        this.type = 'map';\r\n        this.ins = ins;\r\n        this.out = NO;\r\n        this.project = project;\r\n    }\r\n    MapOperator.prototype._start = function (out) {\r\n        this.out = out;\r\n        this.ins._add(this);\r\n    };\r\n    MapOperator.prototype._stop = function () {\r\n        this.ins._remove(this);\r\n        this.out = NO;\r\n    };\r\n    MapOperator.prototype._n = function (t) {\r\n        var u = this.out;\r\n        if (u === NO)\r\n            return;\r\n        try {\r\n            u._n(this.project(t));\r\n        }\r\n        catch (e) {\r\n            u._e(e);\r\n        }\r\n    };\r\n    MapOperator.prototype._e = function (err) {\r\n        var u = this.out;\r\n        if (u === NO)\r\n            return;\r\n        u._e(err);\r\n    };\r\n    MapOperator.prototype._c = function () {\r\n        var u = this.out;\r\n        if (u === NO)\r\n            return;\r\n        u._c();\r\n    };\r\n    return MapOperator;\r\n}());\r\nexports.MapOperator = MapOperator;\r\nvar FilterMapOperator = (function (_super) {\r\n    __extends(FilterMapOperator, _super);\r\n    function FilterMapOperator(passes, project, ins) {\r\n        _super.call(this, project, ins);\r\n        this.type = 'filter+map';\r\n        this.passes = passes;\r\n    }\r\n    FilterMapOperator.prototype._n = function (v) {\r\n        if (this.passes(v)) {\r\n            _super.prototype._n.call(this, v);\r\n        }\r\n        ;\r\n    };\r\n    return FilterMapOperator;\r\n}(MapOperator));\r\nexports.FilterMapOperator = FilterMapOperator;\r\nvar RememberOperator = (function () {\r\n    function RememberOperator(ins) {\r\n        this.type = 'remember';\r\n        this.ins = ins;\r\n        this.out = NO;\r\n    }\r\n    RememberOperator.prototype._start = function (out) {\r\n        this.out = out;\r\n        this.ins._add(out);\r\n    };\r\n    RememberOperator.prototype._stop = function () {\r\n        this.ins._remove(this.out);\r\n        this.out = NO;\r\n    };\r\n    return RememberOperator;\r\n}());\r\nexports.RememberOperator = RememberOperator;\r\nvar ReplaceErrorOperator = (function () {\r\n    function ReplaceErrorOperator(fn, ins) {\r\n        this.type = 'replaceError';\r\n        this.ins = ins;\r\n        this.out = NO;\r\n        this.fn = fn;\r\n    }\r\n    ReplaceErrorOperator.prototype._start = function (out) {\r\n        this.out = out;\r\n        this.ins._add(this);\r\n    };\r\n    ReplaceErrorOperator.prototype._stop = function () {\r\n        this.ins._remove(this);\r\n        this.out = NO;\r\n    };\r\n    ReplaceErrorOperator.prototype._n = function (t) {\r\n        var u = this.out;\r\n        if (u === NO)\r\n            return;\r\n        u._n(t);\r\n    };\r\n    ReplaceErrorOperator.prototype._e = function (err) {\r\n        var u = this.out;\r\n        if (u === NO)\r\n            return;\r\n        try {\r\n            this.ins._remove(this);\r\n            (this.ins = this.fn(err))._add(this);\r\n        }\r\n        catch (e) {\r\n            u._e(e);\r\n        }\r\n    };\r\n    ReplaceErrorOperator.prototype._c = function () {\r\n        var u = this.out;\r\n        if (u === NO)\r\n            return;\r\n        u._c();\r\n    };\r\n    return ReplaceErrorOperator;\r\n}());\r\nexports.ReplaceErrorOperator = ReplaceErrorOperator;\r\nvar StartWithOperator = (function () {\r\n    function StartWithOperator(ins, val) {\r\n        this.type = 'startWith';\r\n        this.ins = ins;\r\n        this.out = NO;\r\n        this.val = val;\r\n    }\r\n    StartWithOperator.prototype._start = function (out) {\r\n        this.out = out;\r\n        this.out._n(this.val);\r\n        this.ins._add(out);\r\n    };\r\n    StartWithOperator.prototype._stop = function () {\r\n        this.ins._remove(this.out);\r\n        this.out = NO;\r\n    };\r\n    return StartWithOperator;\r\n}());\r\nexports.StartWithOperator = StartWithOperator;\r\nvar TakeOperator = (function () {\r\n    function TakeOperator(max, ins) {\r\n        this.type = 'take';\r\n        this.ins = ins;\r\n        this.out = NO;\r\n        this.max = max;\r\n        this.taken = 0;\r\n    }\r\n    TakeOperator.prototype._start = function (out) {\r\n        this.out = out;\r\n        this.taken = 0;\r\n        if (this.max <= 0) {\r\n            out._c();\r\n        }\r\n        else {\r\n            this.ins._add(this);\r\n        }\r\n    };\r\n    TakeOperator.prototype._stop = function () {\r\n        this.ins._remove(this);\r\n        this.out = NO;\r\n    };\r\n    TakeOperator.prototype._n = function (t) {\r\n        var u = this.out;\r\n        if (u === NO)\r\n            return;\r\n        if (this.taken++ < this.max - 1) {\r\n            u._n(t);\r\n        }\r\n        else {\r\n            u._n(t);\r\n            u._c();\r\n        }\r\n    };\r\n    TakeOperator.prototype._e = function (err) {\r\n        var u = this.out;\r\n        if (u === NO)\r\n            return;\r\n        u._e(err);\r\n    };\r\n    TakeOperator.prototype._c = function () {\r\n        var u = this.out;\r\n        if (u === NO)\r\n            return;\r\n        u._c();\r\n    };\r\n    return TakeOperator;\r\n}());\r\nexports.TakeOperator = TakeOperator;\r\nvar Stream = (function () {\r\n    function Stream(producer) {\r\n        this._prod = producer || NO;\r\n        this._ils = [];\r\n        this._stopID = NO;\r\n        this._dl = NO;\r\n        this._d = false;\r\n        this._target = NO;\r\n        this._err = NO;\r\n    }\r\n    Stream.prototype._n = function (t) {\r\n        var a = this._ils;\r\n        var L = a.length;\r\n        if (this._d)\r\n            this._dl._n(t);\r\n        if (L == 1)\r\n            a[0]._n(t);\r\n        else {\r\n            var b = copy(a);\r\n            for (var i = 0; i < L; i++)\r\n                b[i]._n(t);\r\n        }\r\n    };\r\n    Stream.prototype._e = function (err) {\r\n        if (this._err !== NO)\r\n            return;\r\n        this._err = err;\r\n        var a = this._ils;\r\n        var L = a.length;\r\n        this._x();\r\n        if (this._d)\r\n            this._dl._e(err);\r\n        if (L == 1)\r\n            a[0]._e(err);\r\n        else {\r\n            var b = copy(a);\r\n            for (var i = 0; i < L; i++)\r\n                b[i]._e(err);\r\n        }\r\n    };\r\n    Stream.prototype._c = function () {\r\n        var a = this._ils;\r\n        var L = a.length;\r\n        this._x();\r\n        if (this._d)\r\n            this._dl._c();\r\n        if (L == 1)\r\n            a[0]._c();\r\n        else {\r\n            var b = copy(a);\r\n            for (var i = 0; i < L; i++)\r\n                b[i]._c();\r\n        }\r\n    };\r\n    Stream.prototype._x = function () {\r\n        if (this._ils.length === 0)\r\n            return;\r\n        if (this._prod !== NO)\r\n            this._prod._stop();\r\n        this._err = NO;\r\n        this._ils = [];\r\n    };\r\n    Stream.prototype._stopNow = function () {\r\n        // WARNING: code that calls this method should\r\n        // first check if this._prod is valid (not `NO`)\r\n        this._prod._stop();\r\n        this._err = NO;\r\n        this._stopID = NO;\r\n    };\r\n    Stream.prototype._add = function (il) {\r\n        var ta = this._target;\r\n        if (ta !== NO)\r\n            return ta._add(il);\r\n        var a = this._ils;\r\n        a.push(il);\r\n        if (a.length > 1)\r\n            return;\r\n        if (this._stopID !== NO) {\r\n            clearTimeout(this._stopID);\r\n            this._stopID = NO;\r\n        }\r\n        else {\r\n            var p = this._prod;\r\n            if (p !== NO)\r\n                p._start(this);\r\n        }\r\n    };\r\n    Stream.prototype._remove = function (il) {\r\n        var _this = this;\r\n        var ta = this._target;\r\n        if (ta !== NO)\r\n            return ta._remove(il);\r\n        var a = this._ils;\r\n        var i = a.indexOf(il);\r\n        if (i > -1) {\r\n            a.splice(i, 1);\r\n            if (this._prod !== NO && a.length <= 0) {\r\n                this._err = NO;\r\n                this._stopID = setTimeout(function () { return _this._stopNow(); });\r\n            }\r\n            else if (a.length === 1) {\r\n                this._pruneCycles();\r\n            }\r\n        }\r\n    };\r\n    // If all paths stemming from `this` stream eventually end at `this`\r\n    // stream, then we remove the single listener of `this` stream, to\r\n    // force it to end its execution and dispose resources. This method\r\n    // assumes as a precondition that this._ils has just one listener.\r\n    Stream.prototype._pruneCycles = function () {\r\n        if (this._hasNoSinks(this, [])) {\r\n            this._remove(this._ils[0]);\r\n        }\r\n    };\r\n    // Checks whether *there is no* path starting from `x` that leads to an end\r\n    // listener (sink) in the stream graph, following edges A->B where B is a\r\n    // listener of A. This means these paths constitute a cycle somehow. Is given\r\n    // a trace of all visited nodes so far.\r\n    Stream.prototype._hasNoSinks = function (x, trace) {\r\n        if (trace.indexOf(x) !== -1) {\r\n            return true;\r\n        }\r\n        else if (x.out === this) {\r\n            return true;\r\n        }\r\n        else if (x.out && x.out !== NO) {\r\n            return this._hasNoSinks(x.out, trace.concat(x));\r\n        }\r\n        else if (x._ils) {\r\n            for (var i = 0, N = x._ils.length; i < N; i++) {\r\n                if (!this._hasNoSinks(x._ils[i], trace.concat(x))) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    Stream.prototype.ctor = function () {\r\n        return this instanceof MemoryStream ? MemoryStream : Stream;\r\n    };\r\n    /**\r\n     * Adds a Listener to the Stream.\r\n     *\r\n     * @param {Listener<T>} listener\r\n     */\r\n    Stream.prototype.addListener = function (listener) {\r\n        if (typeof listener.next !== 'function'\r\n            || typeof listener.error !== 'function'\r\n            || typeof listener.complete !== 'function') {\r\n            throw new Error('stream.addListener() requires all three next, error, ' +\r\n                'and complete functions.');\r\n        }\r\n        listener._n = listener.next;\r\n        listener._e = listener.error;\r\n        listener._c = listener.complete;\r\n        this._add(listener);\r\n    };\r\n    /**\r\n     * Removes a Listener from the Stream, assuming the Listener was added to it.\r\n     *\r\n     * @param {Listener<T>} listener\r\n     */\r\n    Stream.prototype.removeListener = function (listener) {\r\n        this._remove(listener);\r\n    };\r\n    /**\r\n     * Adds a Listener to the Stream returning a Subscription to remove that\r\n     * listener.\r\n     *\r\n     * @param {Listener} listener\r\n     * @returns {Subscription}\r\n     */\r\n    Stream.prototype.subscribe = function (listener) {\r\n        this.addListener(listener);\r\n        return new Subscription(this, listener);\r\n    };\r\n    /**\r\n     * Add interop between most.js and RxJS 5\r\n     *\r\n     * @returns {Stream}\r\n     */\r\n    Stream.prototype[symbol_observable_1.default] = function () {\r\n        return this;\r\n    };\r\n    /**\r\n     * Creates a new Stream given a Producer.\r\n     *\r\n     * @factory true\r\n     * @param {Producer} producer An optional Producer that dictates how to\r\n     * start, generate events, and stop the Stream.\r\n     * @return {Stream}\r\n     */\r\n    Stream.create = function (producer) {\r\n        if (producer) {\r\n            if (typeof producer.start !== 'function'\r\n                || typeof producer.stop !== 'function') {\r\n                throw new Error('producer requires both start and stop functions');\r\n            }\r\n            internalizeProducer(producer); // mutates the input\r\n        }\r\n        return new Stream(producer);\r\n    };\r\n    /**\r\n     * Creates a new MemoryStream given a Producer.\r\n     *\r\n     * @factory true\r\n     * @param {Producer} producer An optional Producer that dictates how to\r\n     * start, generate events, and stop the Stream.\r\n     * @return {MemoryStream}\r\n     */\r\n    Stream.createWithMemory = function (producer) {\r\n        if (producer) {\r\n            internalizeProducer(producer); // mutates the input\r\n        }\r\n        return new MemoryStream(producer);\r\n    };\r\n    /**\r\n     * Creates a Stream that does nothing when started. It never emits any event.\r\n     *\r\n     * Marble diagram:\r\n     *\r\n     * ```text\r\n     *          never\r\n     * -----------------------\r\n     * ```\r\n     *\r\n     * @factory true\r\n     * @return {Stream}\r\n     */\r\n    Stream.never = function () {\r\n        return new Stream({ _start: noop, _stop: noop });\r\n    };\r\n    /**\r\n     * Creates a Stream that immediately emits the \"complete\" notification when\r\n     * started, and that's it.\r\n     *\r\n     * Marble diagram:\r\n     *\r\n     * ```text\r\n     * empty\r\n     * -|\r\n     * ```\r\n     *\r\n     * @factory true\r\n     * @return {Stream}\r\n     */\r\n    Stream.empty = function () {\r\n        return new Stream({\r\n            _start: function (il) { il._c(); },\r\n            _stop: noop,\r\n        });\r\n    };\r\n    /**\r\n     * Creates a Stream that immediately emits an \"error\" notification with the\r\n     * value you passed as the `error` argument when the stream starts, and that's\r\n     * it.\r\n     *\r\n     * Marble diagram:\r\n     *\r\n     * ```text\r\n     * throw(X)\r\n     * -X\r\n     * ```\r\n     *\r\n     * @factory true\r\n     * @param error The error event to emit on the created stream.\r\n     * @return {Stream}\r\n     */\r\n    Stream.throw = function (error) {\r\n        return new Stream({\r\n            _start: function (il) { il._e(error); },\r\n            _stop: noop,\r\n        });\r\n    };\r\n    /**\r\n     * Creates a stream from an Array, Promise, or an Observable.\r\n     *\r\n     * @factory true\r\n     * @param {Array|Promise|Observable} input The input to make a stream from.\r\n     * @return {Stream}\r\n     */\r\n    Stream.from = function (input) {\r\n        if (typeof input[symbol_observable_1.default] === 'function') {\r\n            return Stream.fromObservable(input);\r\n        }\r\n        else if (typeof input.then === 'function') {\r\n            return Stream.fromPromise(input);\r\n        }\r\n        else if (Array.isArray(input)) {\r\n            return Stream.fromArray(input);\r\n        }\r\n        throw new TypeError(\"Type of input to from() must be an Array, Promise, or Observable\");\r\n    };\r\n    /**\r\n     * Creates a Stream that immediately emits the arguments that you give to\r\n     * *of*, then completes.\r\n     *\r\n     * Marble diagram:\r\n     *\r\n     * ```text\r\n     * of(1,2,3)\r\n     * 123|\r\n     * ```\r\n     *\r\n     * @factory true\r\n     * @param a The first value you want to emit as an event on the stream.\r\n     * @param b The second value you want to emit as an event on the stream. One\r\n     * or more of these values may be given as arguments.\r\n     * @return {Stream}\r\n     */\r\n    Stream.of = function () {\r\n        var items = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            items[_i - 0] = arguments[_i];\r\n        }\r\n        return Stream.fromArray(items);\r\n    };\r\n    /**\r\n     * Converts an array to a stream. The returned stream will emit synchronously\r\n     * all the items in the array, and then complete.\r\n     *\r\n     * Marble diagram:\r\n     *\r\n     * ```text\r\n     * fromArray([1,2,3])\r\n     * 123|\r\n     * ```\r\n     *\r\n     * @factory true\r\n     * @param {Array} array The array to be converted as a stream.\r\n     * @return {Stream}\r\n     */\r\n    Stream.fromArray = function (array) {\r\n        return new Stream(new FromArrayProducer(array));\r\n    };\r\n    /**\r\n     * Converts a promise to a stream. The returned stream will emit the resolved\r\n     * value of the promise, and then complete. However, if the promise is\r\n     * rejected, the stream will emit the corresponding error.\r\n     *\r\n     * Marble diagram:\r\n     *\r\n     * ```text\r\n     * fromPromise( ----42 )\r\n     * -----------------42|\r\n     * ```\r\n     *\r\n     * @factory true\r\n     * @param {Promise} promise The promise to be converted as a stream.\r\n     * @return {Stream}\r\n     */\r\n    Stream.fromPromise = function (promise) {\r\n        return new Stream(new FromPromiseProducer(promise));\r\n    };\r\n    /**\r\n     * Converts an Observable into a Stream.\r\n     *\r\n     * @factory true\r\n     * @param {any} observable The observable to be converted as a stream.\r\n     * @return {Stream}\r\n     */\r\n    Stream.fromObservable = function (observable) {\r\n        return new Stream(new ObservableProducer(observable));\r\n    };\r\n    /**\r\n     * Creates a stream that periodically emits incremental numbers, every\r\n     * `period` milliseconds.\r\n     *\r\n     * Marble diagram:\r\n     *\r\n     * ```text\r\n     *     periodic(1000)\r\n     * ---0---1---2---3---4---...\r\n     * ```\r\n     *\r\n     * @factory true\r\n     * @param {number} period The interval in milliseconds to use as a rate of\r\n     * emission.\r\n     * @return {Stream}\r\n     */\r\n    Stream.periodic = function (period) {\r\n        return new Stream(new PeriodicProducer(period));\r\n    };\r\n    Stream.prototype._map = function (project) {\r\n        var p = this._prod;\r\n        var ctor = this.ctor();\r\n        if (p instanceof FilterOperator) {\r\n            return new ctor(new FilterMapOperator(p.passes, project, p.ins));\r\n        }\r\n        if (p instanceof FilterMapOperator) {\r\n            return new ctor(new FilterMapOperator(p.passes, compose2(project, p.project), p.ins));\r\n        }\r\n        if (p instanceof MapOperator) {\r\n            return new ctor(new MapOperator(compose2(project, p.project), p.ins));\r\n        }\r\n        return new ctor(new MapOperator(project, this));\r\n    };\r\n    /**\r\n     * Transforms each event from the input Stream through a `project` function,\r\n     * to get a Stream that emits those transformed events.\r\n     *\r\n     * Marble diagram:\r\n     *\r\n     * ```text\r\n     * --1---3--5-----7------\r\n     *    map(i => i * 10)\r\n     * --10--30-50----70-----\r\n     * ```\r\n     *\r\n     * @param {Function} project A function of type `(t: T) => U` that takes event\r\n     * `t` of type `T` from the input Stream and produces an event of type `U`, to\r\n     * be emitted on the output Stream.\r\n     * @return {Stream}\r\n     */\r\n    Stream.prototype.map = function (project) {\r\n        return this._map(project);\r\n    };\r\n    /**\r\n     * It's like `map`, but transforms each input event to always the same\r\n     * constant value on the output Stream.\r\n     *\r\n     * Marble diagram:\r\n     *\r\n     * ```text\r\n     * --1---3--5-----7-----\r\n     *       mapTo(10)\r\n     * --10--10-10----10----\r\n     * ```\r\n     *\r\n     * @param projectedValue A value to emit on the output Stream whenever the\r\n     * input Stream emits any value.\r\n     * @return {Stream}\r\n     */\r\n    Stream.prototype.mapTo = function (projectedValue) {\r\n        var s = this.map(function () { return projectedValue; });\r\n        var op = s._prod;\r\n        op.type = op.type.replace('map', 'mapTo');\r\n        return s;\r\n    };\r\n    /**\r\n     * Only allows events that pass the test given by the `passes` argument.\r\n     *\r\n     * Each event from the input stream is given to the `passes` function. If the\r\n     * function returns `true`, the event is forwarded to the output stream,\r\n     * otherwise it is ignored and not forwarded.\r\n     *\r\n     * Marble diagram:\r\n     *\r\n     * ```text\r\n     * --1---2--3-----4-----5---6--7-8--\r\n     *     filter(i => i % 2 === 0)\r\n     * ------2--------4---------6----8--\r\n     * ```\r\n     *\r\n     * @param {Function} passes A function of type `(t: T) +> boolean` that takes\r\n     * an event from the input stream and checks if it passes, by returning a\r\n     * boolean.\r\n     * @return {Stream}\r\n     */\r\n    Stream.prototype.filter = function (passes) {\r\n        var p = this._prod;\r\n        if (p instanceof FilterOperator) {\r\n            return new Stream(new FilterOperator(and(p.passes, passes), p.ins));\r\n        }\r\n        return new Stream(new FilterOperator(passes, this));\r\n    };\r\n    /**\r\n     * Lets the first `amount` many events from the input stream pass to the\r\n     * output stream, then makes the output stream complete.\r\n     *\r\n     * Marble diagram:\r\n     *\r\n     * ```text\r\n     * --a---b--c----d---e--\r\n     *    take(3)\r\n     * --a---b--c|\r\n     * ```\r\n     *\r\n     * @param {number} amount How many events to allow from the input stream\r\n     * before completing the output stream.\r\n     * @return {Stream}\r\n     */\r\n    Stream.prototype.take = function (amount) {\r\n        return new (this.ctor())(new TakeOperator(amount, this));\r\n    };\r\n    /**\r\n     * Ignores the first `amount` many events from the input stream, and then\r\n     * after that starts forwarding events from the input stream to the output\r\n     * stream.\r\n     *\r\n     * Marble diagram:\r\n     *\r\n     * ```text\r\n     * --a---b--c----d---e--\r\n     *       drop(3)\r\n     * --------------d---e--\r\n     * ```\r\n     *\r\n     * @param {number} amount How many events to ignore from the input stream\r\n     * before forwarding all events from the input stream to the output stream.\r\n     * @return {Stream}\r\n     */\r\n    Stream.prototype.drop = function (amount) {\r\n        return new Stream(new DropOperator(amount, this));\r\n    };\r\n    /**\r\n     * When the input stream completes, the output stream will emit the last event\r\n     * emitted by the input stream, and then will also complete.\r\n     *\r\n     * Marble diagram:\r\n     *\r\n     * ```text\r\n     * --a---b--c--d----|\r\n     *       last()\r\n     * -----------------d|\r\n     * ```\r\n     *\r\n     * @return {Stream}\r\n     */\r\n    Stream.prototype.last = function () {\r\n        return new Stream(new LastOperator(this));\r\n    };\r\n    /**\r\n     * Prepends the given `initial` value to the sequence of events emitted by the\r\n     * input stream. The returned stream is a MemoryStream, which means it is\r\n     * already `remember()`'d.\r\n     *\r\n     * Marble diagram:\r\n     *\r\n     * ```text\r\n     * ---1---2-----3---\r\n     *   startWith(0)\r\n     * 0--1---2-----3---\r\n     * ```\r\n     *\r\n     * @param initial The value or event to prepend.\r\n     * @return {MemoryStream}\r\n     */\r\n    Stream.prototype.startWith = function (initial) {\r\n        return new MemoryStream(new StartWithOperator(this, initial));\r\n    };\r\n    /**\r\n     * Uses another stream to determine when to complete the current stream.\r\n     *\r\n     * When the given `other` stream emits an event or completes, the output\r\n     * stream will complete. Before that happens, the output stream will behaves\r\n     * like the input stream.\r\n     *\r\n     * Marble diagram:\r\n     *\r\n     * ```text\r\n     * ---1---2-----3--4----5----6---\r\n     *   endWhen( --------a--b--| )\r\n     * ---1---2-----3--4--|\r\n     * ```\r\n     *\r\n     * @param other Some other stream that is used to know when should the output\r\n     * stream of this operator complete.\r\n     * @return {Stream}\r\n     */\r\n    Stream.prototype.endWhen = function (other) {\r\n        return new (this.ctor())(new EndWhenOperator(other, this));\r\n    };\r\n    /**\r\n     * \"Folds\" the stream onto itself.\r\n     *\r\n     * Combines events from the past throughout\r\n     * the entire execution of the input stream, allowing you to accumulate them\r\n     * together. It's essentially like `Array.prototype.reduce`. The returned\r\n     * stream is a MemoryStream, which means it is already `remember()`'d.\r\n     *\r\n     * The output stream starts by emitting the `seed` which you give as argument.\r\n     * Then, when an event happens on the input stream, it is combined with that\r\n     * seed value through the `accumulate` function, and the output value is\r\n     * emitted on the output stream. `fold` remembers that output value as `acc`\r\n     * (\"accumulator\"), and then when a new input event `t` happens, `acc` will be\r\n     * combined with that to produce the new `acc` and so forth.\r\n     *\r\n     * Marble diagram:\r\n     *\r\n     * ```text\r\n     * ------1-----1--2----1----1------\r\n     *   fold((acc, x) => acc + x, 3)\r\n     * 3-----4-----5--7----8----9------\r\n     * ```\r\n     *\r\n     * @param {Function} accumulate A function of type `(acc: R, t: T) => R` that\r\n     * takes the previous accumulated value `acc` and the incoming event from the\r\n     * input stream and produces the new accumulated value.\r\n     * @param seed The initial accumulated value, of type `R`.\r\n     * @return {MemoryStream}\r\n     */\r\n    Stream.prototype.fold = function (accumulate, seed) {\r\n        return new MemoryStream(new FoldOperator(accumulate, seed, this));\r\n    };\r\n    /**\r\n     * Replaces an error with another stream.\r\n     *\r\n     * When (and if) an error happens on the input stream, instead of forwarding\r\n     * that error to the output stream, *replaceError* will call the `replace`\r\n     * function which returns the stream that the output stream will replicate.\r\n     * And, in case that new stream also emits an error, `replace` will be called\r\n     * again to get another stream to start replicating.\r\n     *\r\n     * Marble diagram:\r\n     *\r\n     * ```text\r\n     * --1---2-----3--4-----X\r\n     *   replaceError( () => --10--| )\r\n     * --1---2-----3--4--------10--|\r\n     * ```\r\n     *\r\n     * @param {Function} replace A function of type `(err) => Stream` that takes\r\n     * the error that occurred on the input stream or on the previous replacement\r\n     * stream and returns a new stream. The output stream will behave like the\r\n     * stream that this function returns.\r\n     * @return {Stream}\r\n     */\r\n    Stream.prototype.replaceError = function (replace) {\r\n        return new (this.ctor())(new ReplaceErrorOperator(replace, this));\r\n    };\r\n    /**\r\n     * Flattens a \"stream of streams\", handling only one nested stream at a time\r\n     * (no concurrency).\r\n     *\r\n     * If the input stream is a stream that emits streams, then this operator will\r\n     * return an output stream which is a flat stream: emits regular events. The\r\n     * flattening happens without concurrency. It works like this: when the input\r\n     * stream emits a nested stream, *flatten* will start imitating that nested\r\n     * one. However, as soon as the next nested stream is emitted on the input\r\n     * stream, *flatten* will forget the previous nested one it was imitating, and\r\n     * will start imitating the new nested one.\r\n     *\r\n     * Marble diagram:\r\n     *\r\n     * ```text\r\n     * --+--------+---------------\r\n     *   \\        \\\r\n     *    \\       ----1----2---3--\r\n     *    --a--b----c----d--------\r\n     *           flatten\r\n     * -----a--b------1----2---3--\r\n     * ```\r\n     *\r\n     * @return {Stream}\r\n     */\r\n    Stream.prototype.flatten = function () {\r\n        var p = this._prod;\r\n        return new Stream(p instanceof MapOperator && !(p instanceof FilterMapOperator) ?\r\n            new MapFlattenOperator(p) :\r\n            new FlattenOperator(this));\r\n    };\r\n    /**\r\n     * Passes the input stream to a custom operator, to produce an output stream.\r\n     *\r\n     * *compose* is a handy way of using an existing function in a chained style.\r\n     * Instead of writing `outStream = f(inStream)` you can write\r\n     * `outStream = inStream.compose(f)`.\r\n     *\r\n     * @param {function} operator A function that takes a stream as input and\r\n     * returns a stream as well.\r\n     * @return {Stream}\r\n     */\r\n    Stream.prototype.compose = function (operator) {\r\n        return operator(this);\r\n    };\r\n    /**\r\n     * Returns an output stream that behaves like the input stream, but also\r\n     * remembers the most recent event that happens on the input stream, so that a\r\n     * newly added listener will immediately receive that memorised event.\r\n     *\r\n     * @return {MemoryStream}\r\n     */\r\n    Stream.prototype.remember = function () {\r\n        return new MemoryStream(new RememberOperator(this));\r\n    };\r\n    /**\r\n     * Returns an output stream that identically behaves like the input stream,\r\n     * but also runs a `spy` function fo each event, to help you debug your app.\r\n     *\r\n     * *debug* takes a `spy` function as argument, and runs that for each event\r\n     * happening on the input stream. If you don't provide the `spy` argument,\r\n     * then *debug* will just `console.log` each event. This helps you to\r\n     * understand the flow of events through some operator chain.\r\n     *\r\n     * Please note that if the output stream has no listeners, then it will not\r\n     * start, which means `spy` will never run because no actual event happens in\r\n     * that case.\r\n     *\r\n     * Marble diagram:\r\n     *\r\n     * ```text\r\n     * --1----2-----3-----4--\r\n     *         debug\r\n     * --1----2-----3-----4--\r\n     * ```\r\n     *\r\n     * @param {function} labelOrSpy A string to use as the label when printing\r\n     * debug information on the console, or a 'spy' function that takes an event\r\n     * as argument, and does not need to return anything.\r\n     * @return {Stream}\r\n     */\r\n    Stream.prototype.debug = function (labelOrSpy) {\r\n        return new (this.ctor())(new DebugOperator(labelOrSpy, this));\r\n    };\r\n    /**\r\n     * *imitate* changes this current Stream to emit the same events that the\r\n     * `other` given Stream does. This method returns nothing.\r\n     *\r\n     * This method exists to allow one thing: **circular dependency of streams**.\r\n     * For instance, let's imagine that for some reason you need to create a\r\n     * circular dependency where stream `first$` depends on stream `second$`\r\n     * which in turn depends on `first$`:\r\n     *\r\n     * <!-- skip-example -->\r\n     * ```js\r\n     * import delay from 'xstream/extra/delay'\r\n     *\r\n     * var first$ = second$.map(x => x * 10).take(3);\r\n     * var second$ = first$.map(x => x + 1).startWith(1).compose(delay(100));\r\n     * ```\r\n     *\r\n     * However, that is invalid JavaScript, because `second$` is undefined\r\n     * on the first line. This is how *imitate* can help solve it:\r\n     *\r\n     * ```js\r\n     * import delay from 'xstream/extra/delay'\r\n     *\r\n     * var secondProxy$ = xs.create();\r\n     * var first$ = secondProxy$.map(x => x * 10).take(3);\r\n     * var second$ = first$.map(x => x + 1).startWith(1).compose(delay(100));\r\n     * secondProxy$.imitate(second$);\r\n     * ```\r\n     *\r\n     * We create `secondProxy$` before the others, so it can be used in the\r\n     * declaration of `first$`. Then, after both `first$` and `second$` are\r\n     * defined, we hook `secondProxy$` with `second$` with `imitate()` to tell\r\n     * that they are \"the same\". `imitate` will not trigger the start of any\r\n     * stream, it just binds `secondProxy$` and `second$` together.\r\n     *\r\n     * The following is an example where `imitate()` is important in Cycle.js\r\n     * applications. A parent component contains some child components. A child\r\n     * has an action stream which is given to the parent to define its state:\r\n     *\r\n     * <!-- skip-example -->\r\n     * ```js\r\n     * const childActionProxy$ = xs.create();\r\n     * const parent = Parent({...sources, childAction$: childActionProxy$});\r\n     * const childAction$ = parent.state$.map(s => s.child.action$).flatten();\r\n     * childActionProxy$.imitate(childAction$);\r\n     * ```\r\n     *\r\n     * Note, though, that **`imitate()` does not support MemoryStreams**. If we\r\n     * would attempt to imitate a MemoryStream in a circular dependency, we would\r\n     * either get a race condition (where the symptom would be \"nothing happens\")\r\n     * or an infinite cyclic emission of values. It's useful to think about\r\n     * MemoryStreams as cells in a spreadsheet. It doesn't make any sense to\r\n     * define a spreadsheet cell `A1` with a formula that depends on `B1` and\r\n     * cell `B1` defined with a formula that depends on `A1`.\r\n     *\r\n     * If you find yourself wanting to use `imitate()` with a\r\n     * MemoryStream, you should rework your code around `imitate()` to use a\r\n     * Stream instead. Look for the stream in the circular dependency that\r\n     * represents an event stream, and that would be a candidate for creating a\r\n     * proxy Stream which then imitates the target Stream.\r\n     *\r\n     * @param {Stream} target The other stream to imitate on the current one. Must\r\n     * not be a MemoryStream.\r\n     */\r\n    Stream.prototype.imitate = function (target) {\r\n        if (target instanceof MemoryStream) {\r\n            throw new Error('A MemoryStream was given to imitate(), but it only ' +\r\n                'supports a Stream. Read more about this restriction here: ' +\r\n                'https://github.com/staltz/xstream#faq');\r\n        }\r\n        this._target = target;\r\n        for (var ils = this._ils, N = ils.length, i = 0; i < N; i++) {\r\n            target._add(ils[i]);\r\n        }\r\n        this._ils = [];\r\n    };\r\n    /**\r\n     * Forces the Stream to emit the given value to its listeners.\r\n     *\r\n     * As the name indicates, if you use this, you are most likely doing something\r\n     * The Wrong Way. Please try to understand the reactive way before using this\r\n     * method. Use it only when you know what you are doing.\r\n     *\r\n     * @param value The \"next\" value you want to broadcast to all listeners of\r\n     * this Stream.\r\n     */\r\n    Stream.prototype.shamefullySendNext = function (value) {\r\n        this._n(value);\r\n    };\r\n    /**\r\n     * Forces the Stream to emit the given error to its listeners.\r\n     *\r\n     * As the name indicates, if you use this, you are most likely doing something\r\n     * The Wrong Way. Please try to understand the reactive way before using this\r\n     * method. Use it only when you know what you are doing.\r\n     *\r\n     * @param {any} error The error you want to broadcast to all the listeners of\r\n     * this Stream.\r\n     */\r\n    Stream.prototype.shamefullySendError = function (error) {\r\n        this._e(error);\r\n    };\r\n    /**\r\n     * Forces the Stream to emit the \"completed\" event to its listeners.\r\n     *\r\n     * As the name indicates, if you use this, you are most likely doing something\r\n     * The Wrong Way. Please try to understand the reactive way before using this\r\n     * method. Use it only when you know what you are doing.\r\n     */\r\n    Stream.prototype.shamefullySendComplete = function () {\r\n        this._c();\r\n    };\r\n    /**\r\n     * Adds a \"debug\" listener to the stream. There can only be one debug\r\n     * listener, that's why this is 'setDebugListener'. To remove the debug\r\n     * listener, just call setDebugListener(null).\r\n     *\r\n     * A debug listener is like any other listener. The only difference is that a\r\n     * debug listener is \"stealthy\": its presence/absence does not trigger the\r\n     * start/stop of the stream (or the producer inside the stream). This is\r\n     * useful so you can inspect what is going on without changing the behavior\r\n     * of the program. If you have an idle stream and you add a normal listener to\r\n     * it, the stream will start executing. But if you set a debug listener on an\r\n     * idle stream, it won't start executing (not until the first normal listener\r\n     * is added).\r\n     *\r\n     * As the name indicates, we don't recommend using this method to build app\r\n     * logic. In fact, in most cases the debug operator works just fine. Only use\r\n     * this one if you know what you're doing.\r\n     *\r\n     * @param {Listener<T>} listener\r\n     */\r\n    Stream.prototype.setDebugListener = function (listener) {\r\n        if (!listener) {\r\n            this._d = false;\r\n            this._dl = NO;\r\n        }\r\n        else {\r\n            this._d = true;\r\n            listener._n = listener.next;\r\n            listener._e = listener.error;\r\n            listener._c = listener.complete;\r\n            this._dl = listener;\r\n        }\r\n    };\r\n    /**\r\n     * Blends multiple streams together, emitting events from all of them\r\n     * concurrently.\r\n     *\r\n     * *merge* takes multiple streams as arguments, and creates a stream that\r\n     * behaves like each of the argument streams, in parallel.\r\n     *\r\n     * Marble diagram:\r\n     *\r\n     * ```text\r\n     * --1----2-----3--------4---\r\n     * ----a-----b----c---d------\r\n     *            merge\r\n     * --1-a--2--b--3-c---d--4---\r\n     * ```\r\n     *\r\n     * @factory true\r\n     * @param {Stream} stream1 A stream to merge together with other streams.\r\n     * @param {Stream} stream2 A stream to merge together with other streams. Two\r\n     * or more streams may be given as arguments.\r\n     * @return {Stream}\r\n     */\r\n    Stream.merge = function merge() {\r\n        var streams = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            streams[_i - 0] = arguments[_i];\r\n        }\r\n        return new Stream(new MergeProducer(streams));\r\n    };\r\n    /**\r\n     * Combines multiple input streams together to return a stream whose events\r\n     * are arrays that collect the latest events from each input stream.\r\n     *\r\n     * *combine* internally remembers the most recent event from each of the input\r\n     * streams. When any of the input streams emits an event, that event together\r\n     * with all the other saved events are combined into an array. That array will\r\n     * be emitted on the output stream. It's essentially a way of joining together\r\n     * the events from multiple streams.\r\n     *\r\n     * Marble diagram:\r\n     *\r\n     * ```text\r\n     * --1----2-----3--------4---\r\n     * ----a-----b-----c--d------\r\n     *          combine\r\n     * ----1a-2a-2b-3b-3c-3d-4d--\r\n     * ```\r\n     *\r\n     * @factory true\r\n     * @param {Stream} stream1 A stream to combine together with other streams.\r\n     * @param {Stream} stream2 A stream to combine together with other streams.\r\n     * Multiple streams, not just two, may be given as arguments.\r\n     * @return {Stream}\r\n     */\r\n    Stream.combine = function combine() {\r\n        var streams = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            streams[_i - 0] = arguments[_i];\r\n        }\r\n        return new Stream(new CombineProducer(streams));\r\n    };\r\n    return Stream;\r\n}());\r\nexports.Stream = Stream;\r\nvar MemoryStream = (function (_super) {\r\n    __extends(MemoryStream, _super);\r\n    function MemoryStream(producer) {\r\n        _super.call(this, producer);\r\n        this._has = false;\r\n    }\r\n    MemoryStream.prototype._n = function (x) {\r\n        this._v = x;\r\n        this._has = true;\r\n        _super.prototype._n.call(this, x);\r\n    };\r\n    MemoryStream.prototype._add = function (il) {\r\n        if (this._has) {\r\n            il._n(this._v);\r\n        }\r\n        _super.prototype._add.call(this, il);\r\n    };\r\n    MemoryStream.prototype._stopNow = function () {\r\n        this._has = false;\r\n        _super.prototype._stopNow.call(this);\r\n    };\r\n    MemoryStream.prototype._x = function () {\r\n        this._has = false;\r\n        _super.prototype._x.call(this);\r\n    };\r\n    MemoryStream.prototype.map = function (project) {\r\n        return this._map(project);\r\n    };\r\n    MemoryStream.prototype.mapTo = function (projectedValue) {\r\n        return _super.prototype.mapTo.call(this, projectedValue);\r\n    };\r\n    MemoryStream.prototype.take = function (amount) {\r\n        return _super.prototype.take.call(this, amount);\r\n    };\r\n    MemoryStream.prototype.endWhen = function (other) {\r\n        return _super.prototype.endWhen.call(this, other);\r\n    };\r\n    MemoryStream.prototype.replaceError = function (replace) {\r\n        return _super.prototype.replaceError.call(this, replace);\r\n    };\r\n    MemoryStream.prototype.remember = function () {\r\n        return this;\r\n    };\r\n    MemoryStream.prototype.debug = function (labelOrSpy) {\r\n        return _super.prototype.debug.call(this, labelOrSpy);\r\n    };\r\n    return MemoryStream;\r\n}(Stream));\r\nexports.MemoryStream = MemoryStream;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.default = Stream;\r\n//# sourceMappingURL=core.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/xstream/core.js\n ** module id = 40\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\n\r\nvar _toDate = require('./lib/toDate');\r\n\r\nvar _toDate2 = _interopRequireDefault(_toDate);\r\n\r\nvar _toFloat = require('./lib/toFloat');\r\n\r\nvar _toFloat2 = _interopRequireDefault(_toFloat);\r\n\r\nvar _toInt = require('./lib/toInt');\r\n\r\nvar _toInt2 = _interopRequireDefault(_toInt);\r\n\r\nvar _toBoolean = require('./lib/toBoolean');\r\n\r\nvar _toBoolean2 = _interopRequireDefault(_toBoolean);\r\n\r\nvar _equals = require('./lib/equals');\r\n\r\nvar _equals2 = _interopRequireDefault(_equals);\r\n\r\nvar _contains = require('./lib/contains');\r\n\r\nvar _contains2 = _interopRequireDefault(_contains);\r\n\r\nvar _matches = require('./lib/matches');\r\n\r\nvar _matches2 = _interopRequireDefault(_matches);\r\n\r\nvar _isEmail = require('./lib/isEmail');\r\n\r\nvar _isEmail2 = _interopRequireDefault(_isEmail);\r\n\r\nvar _isURL = require('./lib/isURL');\r\n\r\nvar _isURL2 = _interopRequireDefault(_isURL);\r\n\r\nvar _isMACAddress = require('./lib/isMACAddress');\r\n\r\nvar _isMACAddress2 = _interopRequireDefault(_isMACAddress);\r\n\r\nvar _isIP = require('./lib/isIP');\r\n\r\nvar _isIP2 = _interopRequireDefault(_isIP);\r\n\r\nvar _isFQDN = require('./lib/isFQDN');\r\n\r\nvar _isFQDN2 = _interopRequireDefault(_isFQDN);\r\n\r\nvar _isBoolean = require('./lib/isBoolean');\r\n\r\nvar _isBoolean2 = _interopRequireDefault(_isBoolean);\r\n\r\nvar _isAlpha = require('./lib/isAlpha');\r\n\r\nvar _isAlpha2 = _interopRequireDefault(_isAlpha);\r\n\r\nvar _isAlphanumeric = require('./lib/isAlphanumeric');\r\n\r\nvar _isAlphanumeric2 = _interopRequireDefault(_isAlphanumeric);\r\n\r\nvar _isNumeric = require('./lib/isNumeric');\r\n\r\nvar _isNumeric2 = _interopRequireDefault(_isNumeric);\r\n\r\nvar _isLowercase = require('./lib/isLowercase');\r\n\r\nvar _isLowercase2 = _interopRequireDefault(_isLowercase);\r\n\r\nvar _isUppercase = require('./lib/isUppercase');\r\n\r\nvar _isUppercase2 = _interopRequireDefault(_isUppercase);\r\n\r\nvar _isAscii = require('./lib/isAscii');\r\n\r\nvar _isAscii2 = _interopRequireDefault(_isAscii);\r\n\r\nvar _isFullWidth = require('./lib/isFullWidth');\r\n\r\nvar _isFullWidth2 = _interopRequireDefault(_isFullWidth);\r\n\r\nvar _isHalfWidth = require('./lib/isHalfWidth');\r\n\r\nvar _isHalfWidth2 = _interopRequireDefault(_isHalfWidth);\r\n\r\nvar _isVariableWidth = require('./lib/isVariableWidth');\r\n\r\nvar _isVariableWidth2 = _interopRequireDefault(_isVariableWidth);\r\n\r\nvar _isMultibyte = require('./lib/isMultibyte');\r\n\r\nvar _isMultibyte2 = _interopRequireDefault(_isMultibyte);\r\n\r\nvar _isSurrogatePair = require('./lib/isSurrogatePair');\r\n\r\nvar _isSurrogatePair2 = _interopRequireDefault(_isSurrogatePair);\r\n\r\nvar _isInt = require('./lib/isInt');\r\n\r\nvar _isInt2 = _interopRequireDefault(_isInt);\r\n\r\nvar _isFloat = require('./lib/isFloat');\r\n\r\nvar _isFloat2 = _interopRequireDefault(_isFloat);\r\n\r\nvar _isDecimal = require('./lib/isDecimal');\r\n\r\nvar _isDecimal2 = _interopRequireDefault(_isDecimal);\r\n\r\nvar _isHexadecimal = require('./lib/isHexadecimal');\r\n\r\nvar _isHexadecimal2 = _interopRequireDefault(_isHexadecimal);\r\n\r\nvar _isDivisibleBy = require('./lib/isDivisibleBy');\r\n\r\nvar _isDivisibleBy2 = _interopRequireDefault(_isDivisibleBy);\r\n\r\nvar _isHexColor = require('./lib/isHexColor');\r\n\r\nvar _isHexColor2 = _interopRequireDefault(_isHexColor);\r\n\r\nvar _isMD = require('./lib/isMD5');\r\n\r\nvar _isMD2 = _interopRequireDefault(_isMD);\r\n\r\nvar _isJSON = require('./lib/isJSON');\r\n\r\nvar _isJSON2 = _interopRequireDefault(_isJSON);\r\n\r\nvar _isNull = require('./lib/isNull');\r\n\r\nvar _isNull2 = _interopRequireDefault(_isNull);\r\n\r\nvar _isLength = require('./lib/isLength');\r\n\r\nvar _isLength2 = _interopRequireDefault(_isLength);\r\n\r\nvar _isByteLength = require('./lib/isByteLength');\r\n\r\nvar _isByteLength2 = _interopRequireDefault(_isByteLength);\r\n\r\nvar _isUUID = require('./lib/isUUID');\r\n\r\nvar _isUUID2 = _interopRequireDefault(_isUUID);\r\n\r\nvar _isMongoId = require('./lib/isMongoId');\r\n\r\nvar _isMongoId2 = _interopRequireDefault(_isMongoId);\r\n\r\nvar _isDate = require('./lib/isDate');\r\n\r\nvar _isDate2 = _interopRequireDefault(_isDate);\r\n\r\nvar _isAfter = require('./lib/isAfter');\r\n\r\nvar _isAfter2 = _interopRequireDefault(_isAfter);\r\n\r\nvar _isBefore = require('./lib/isBefore');\r\n\r\nvar _isBefore2 = _interopRequireDefault(_isBefore);\r\n\r\nvar _isIn = require('./lib/isIn');\r\n\r\nvar _isIn2 = _interopRequireDefault(_isIn);\r\n\r\nvar _isCreditCard = require('./lib/isCreditCard');\r\n\r\nvar _isCreditCard2 = _interopRequireDefault(_isCreditCard);\r\n\r\nvar _isISIN = require('./lib/isISIN');\r\n\r\nvar _isISIN2 = _interopRequireDefault(_isISIN);\r\n\r\nvar _isISBN = require('./lib/isISBN');\r\n\r\nvar _isISBN2 = _interopRequireDefault(_isISBN);\r\n\r\nvar _isMobilePhone = require('./lib/isMobilePhone');\r\n\r\nvar _isMobilePhone2 = _interopRequireDefault(_isMobilePhone);\r\n\r\nvar _isCurrency = require('./lib/isCurrency');\r\n\r\nvar _isCurrency2 = _interopRequireDefault(_isCurrency);\r\n\r\nvar _isISO = require('./lib/isISO8601');\r\n\r\nvar _isISO2 = _interopRequireDefault(_isISO);\r\n\r\nvar _isBase = require('./lib/isBase64');\r\n\r\nvar _isBase2 = _interopRequireDefault(_isBase);\r\n\r\nvar _isDataURI = require('./lib/isDataURI');\r\n\r\nvar _isDataURI2 = _interopRequireDefault(_isDataURI);\r\n\r\nvar _ltrim = require('./lib/ltrim');\r\n\r\nvar _ltrim2 = _interopRequireDefault(_ltrim);\r\n\r\nvar _rtrim = require('./lib/rtrim');\r\n\r\nvar _rtrim2 = _interopRequireDefault(_rtrim);\r\n\r\nvar _trim = require('./lib/trim');\r\n\r\nvar _trim2 = _interopRequireDefault(_trim);\r\n\r\nvar _escape = require('./lib/escape');\r\n\r\nvar _escape2 = _interopRequireDefault(_escape);\r\n\r\nvar _unescape = require('./lib/unescape');\r\n\r\nvar _unescape2 = _interopRequireDefault(_unescape);\r\n\r\nvar _stripLow = require('./lib/stripLow');\r\n\r\nvar _stripLow2 = _interopRequireDefault(_stripLow);\r\n\r\nvar _whitelist = require('./lib/whitelist');\r\n\r\nvar _whitelist2 = _interopRequireDefault(_whitelist);\r\n\r\nvar _blacklist = require('./lib/blacklist');\r\n\r\nvar _blacklist2 = _interopRequireDefault(_blacklist);\r\n\r\nvar _isWhitelisted = require('./lib/isWhitelisted');\r\n\r\nvar _isWhitelisted2 = _interopRequireDefault(_isWhitelisted);\r\n\r\nvar _normalizeEmail = require('./lib/normalizeEmail');\r\n\r\nvar _normalizeEmail2 = _interopRequireDefault(_normalizeEmail);\r\n\r\nvar _toString = require('./lib/util/toString');\r\n\r\nvar _toString2 = _interopRequireDefault(_toString);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nvar version = '5.7.0';\r\n\r\nvar validator = {\r\n  version: version,\r\n  toDate: _toDate2.default,\r\n  toFloat: _toFloat2.default, toInt: _toInt2.default,\r\n  toBoolean: _toBoolean2.default,\r\n  equals: _equals2.default, contains: _contains2.default, matches: _matches2.default,\r\n  isEmail: _isEmail2.default, isURL: _isURL2.default, isMACAddress: _isMACAddress2.default, isIP: _isIP2.default, isFQDN: _isFQDN2.default,\r\n  isBoolean: _isBoolean2.default,\r\n  isAlpha: _isAlpha2.default, isAlphanumeric: _isAlphanumeric2.default, isNumeric: _isNumeric2.default, isLowercase: _isLowercase2.default, isUppercase: _isUppercase2.default,\r\n  isAscii: _isAscii2.default, isFullWidth: _isFullWidth2.default, isHalfWidth: _isHalfWidth2.default, isVariableWidth: _isVariableWidth2.default,\r\n  isMultibyte: _isMultibyte2.default, isSurrogatePair: _isSurrogatePair2.default,\r\n  isInt: _isInt2.default, isFloat: _isFloat2.default, isDecimal: _isDecimal2.default, isHexadecimal: _isHexadecimal2.default, isDivisibleBy: _isDivisibleBy2.default,\r\n  isHexColor: _isHexColor2.default,\r\n  isMD5: _isMD2.default,\r\n  isJSON: _isJSON2.default,\r\n  isNull: _isNull2.default,\r\n  isLength: _isLength2.default, isByteLength: _isByteLength2.default,\r\n  isUUID: _isUUID2.default, isMongoId: _isMongoId2.default,\r\n  isDate: _isDate2.default, isAfter: _isAfter2.default, isBefore: _isBefore2.default,\r\n  isIn: _isIn2.default,\r\n  isCreditCard: _isCreditCard2.default,\r\n  isISIN: _isISIN2.default, isISBN: _isISBN2.default,\r\n  isMobilePhone: _isMobilePhone2.default,\r\n  isCurrency: _isCurrency2.default,\r\n  isISO8601: _isISO2.default,\r\n  isBase64: _isBase2.default, isDataURI: _isDataURI2.default,\r\n  ltrim: _ltrim2.default, rtrim: _rtrim2.default, trim: _trim2.default,\r\n  escape: _escape2.default, unescape: _unescape2.default, stripLow: _stripLow2.default,\r\n  whitelist: _whitelist2.default, blacklist: _blacklist2.default,\r\n  isWhitelisted: _isWhitelisted2.default,\r\n  normalizeEmail: _normalizeEmail2.default,\r\n  toString: _toString2.default\r\n};\r\n\r\nexports.default = validator;\r\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/index.js\n ** module id = 79\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nvar alpha = exports.alpha = {\r\n  'en-US': /^[A-Z]+$/i,\r\n  'cs-CZ': /^[A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ]+$/i,\r\n  'de-DE': /^[A-ZÄÖÜß]+$/i,\r\n  'es-ES': /^[A-ZÁÉÍÑÓÚÜ]+$/i,\r\n  'fr-FR': /^[A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ]+$/i,\r\n  'nl-NL': /^[A-ZÉËÏÓÖÜ]+$/i,\r\n  'hu-HU': /^[A-ZÁÉÍÓÖŐÚÜŰ]+$/i,\r\n  'pl-PL': /^[A-ZĄĆĘŚŁŃÓŻŹ]+$/i,\r\n  'pt-PT': /^[A-ZÃÁÀÂÇÉÊÍÕÓÔÚÜ]+$/i,\r\n  'ru-RU': /^[А-ЯЁ]+$/i,\r\n  'sr-RS@latin': /^[A-ZČĆŽŠĐ]+$/i,\r\n  'sr-RS': /^[А-ЯЂЈЉЊЋЏ]+$/i,\r\n  'tr-TR': /^[A-ZÇĞİıÖŞÜ]+$/i,\r\n  ar: /^[ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ]+$/\r\n};\r\n\r\nvar alphanumeric = exports.alphanumeric = {\r\n  'en-US': /^[0-9A-Z]+$/i,\r\n  'cs-CZ': /^[0-9A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ]+$/i,\r\n  'de-DE': /^[0-9A-ZÄÖÜß]+$/i,\r\n  'es-ES': /^[0-9A-ZÁÉÍÑÓÚÜ]+$/i,\r\n  'fr-FR': /^[0-9A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ]+$/i,\r\n  'hu-HU': /^[0-9A-ZÁÉÍÓÖŐÚÜŰ]+$/i,\r\n  'nl-NL': /^[0-9A-ZÉËÏÓÖÜ]+$/i,\r\n  'pl-PL': /^[0-9A-ZĄĆĘŚŁŃÓŻŹ]+$/i,\r\n  'pt-PT': /^[0-9A-ZÃÁÀÂÇÉÊÍÕÓÔÚÜ]+$/i,\r\n  'ru-RU': /^[0-9А-ЯЁ]+$/i,\r\n  'sr-RS@latin': /^[0-9A-ZČĆŽŠĐ]+$/i,\r\n  'sr-RS': /^[0-9А-ЯЂЈЉЊЋЏ]+$/i,\r\n  'tr-TR': /^[0-9A-ZÇĞİıÖŞÜ]+$/i,\r\n  ar: /^[٠١٢٣٤٥٦٧٨٩0-9ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ]+$/\r\n};\r\n\r\nvar englishLocales = exports.englishLocales = ['AU', 'GB', 'HK', 'IN', 'NZ', 'ZA', 'ZM'];\r\n\r\nfor (var locale, i = 0; i < englishLocales.length; i++) {\r\n  locale = 'en-' + englishLocales[i];\r\n  alpha[locale] = alpha['en-US'];\r\n  alphanumeric[locale] = alphanumeric['en-US'];\r\n}\r\n\r\nalpha['pt-BR'] = alpha['pt-PT'];\r\nalphanumeric['pt-BR'] = alphanumeric['pt-PT'];\r\n\r\n// Source: http://www.localeplanet.com/java/\r\nvar arabicLocales = exports.arabicLocales = ['AE', 'BH', 'DZ', 'EG', 'IQ', 'JO', 'KW', 'LB', 'LY', 'MA', 'QM', 'QA', 'SA', 'SD', 'SY', 'TN', 'YE'];\r\n\r\nfor (var _locale, _i = 0; _i < arabicLocales.length; _i++) {\r\n  _locale = 'ar-' + arabicLocales[_i];\r\n  alpha[_locale] = alpha.ar;\r\n  alphanumeric[_locale] = alphanumeric.ar;\r\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/lib/alpha.js\n ** module id = 80\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = blacklist;\r\n\r\nvar _assertString = require('./util/assertString');\r\n\r\nvar _assertString2 = _interopRequireDefault(_assertString);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nfunction blacklist(str, chars) {\r\n  (0, _assertString2.default)(str);\r\n  return str.replace(new RegExp('[' + chars + ']+', 'g'), '');\r\n}\r\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/lib/blacklist.js\n ** module id = 81\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\n\r\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\r\n\r\nexports.default = isByteLength;\r\n\r\nvar _assertString = require('./util/assertString');\r\n\r\nvar _assertString2 = _interopRequireDefault(_assertString);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\n/* eslint-disable prefer-rest-params */\r\nfunction isByteLength(str, options) {\r\n  (0, _assertString2.default)(str);\r\n  var min = void 0;\r\n  var max = void 0;\r\n  if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\r\n    min = options.min || 0;\r\n    max = options.max;\r\n  } else {\r\n    // backwards compatibility: isByteLength(str, min [, max])\r\n    min = arguments[1];\r\n    max = arguments[2];\r\n  }\r\n  var len = encodeURI(str).split(/%..|./).length - 1;\r\n  return len >= min && (typeof max === 'undefined' || len <= max);\r\n}\r\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/lib/isByteLength.js\n ** module id = 82\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = isEmail;\r\n\r\nvar _assertString = require('./util/assertString');\r\n\r\nvar _assertString2 = _interopRequireDefault(_assertString);\r\n\r\nvar _merge = require('./util/merge');\r\n\r\nvar _merge2 = _interopRequireDefault(_merge);\r\n\r\nvar _isByteLength = require('./isByteLength');\r\n\r\nvar _isByteLength2 = _interopRequireDefault(_isByteLength);\r\n\r\nvar _isFQDN = require('./isFQDN');\r\n\r\nvar _isFQDN2 = _interopRequireDefault(_isFQDN);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nvar default_email_options = {\r\n  allow_display_name: false,\r\n  allow_utf8_local_part: true,\r\n  require_tld: true\r\n};\r\n\r\n/* eslint-disable max-len */\r\n/* eslint-disable no-control-regex */\r\nvar displayName = /^[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~\\.\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~\\.\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF\\s]*<(.+)>$/i;\r\nvar emailUserPart = /^[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]+$/i;\r\nvar quotedEmailUser = /^([\\s\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e]|(\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]))*$/i;\r\nvar emailUserUtf8Part = /^[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+$/i;\r\nvar quotedEmailUserUtf8 = /^([\\s\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|(\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))*$/i;\r\n/* eslint-enable max-len */\r\n/* eslint-enable no-control-regex */\r\n\r\nfunction isEmail(str, options) {\r\n  (0, _assertString2.default)(str);\r\n  options = (0, _merge2.default)(options, default_email_options);\r\n\r\n  if (options.allow_display_name) {\r\n    var display_email = str.match(displayName);\r\n    if (display_email) {\r\n      str = display_email[1];\r\n    }\r\n  }\r\n\r\n  var parts = str.split('@');\r\n  var domain = parts.pop();\r\n  var user = parts.join('@');\r\n\r\n  var lower_domain = domain.toLowerCase();\r\n  if (lower_domain === 'gmail.com' || lower_domain === 'googlemail.com') {\r\n    user = user.replace(/\\./g, '').toLowerCase();\r\n  }\r\n\r\n  if (!(0, _isByteLength2.default)(user, { max: 64 }) || !(0, _isByteLength2.default)(domain, { max: 256 })) {\r\n    return false;\r\n  }\r\n\r\n  if (!(0, _isFQDN2.default)(domain, { require_tld: options.require_tld })) {\r\n    return false;\r\n  }\r\n\r\n  if (user[0] === '\"') {\r\n    user = user.slice(1, user.length - 1);\r\n    return options.allow_utf8_local_part ? quotedEmailUserUtf8.test(user) : quotedEmailUser.test(user);\r\n  }\r\n\r\n  var pattern = options.allow_utf8_local_part ? emailUserUtf8Part : emailUserPart;\r\n\r\n  var user_parts = user.split('.');\r\n  for (var i = 0; i < user_parts.length; i++) {\r\n    if (!pattern.test(user_parts[i])) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/lib/isEmail.js\n ** module id = 83\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.fullWidth = undefined;\r\nexports.default = isFullWidth;\r\n\r\nvar _assertString = require('./util/assertString');\r\n\r\nvar _assertString2 = _interopRequireDefault(_assertString);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nvar fullWidth = exports.fullWidth = /[^\\u0020-\\u007E\\uFF61-\\uFF9F\\uFFA0-\\uFFDC\\uFFE8-\\uFFEE0-9a-zA-Z]/;\r\n\r\nfunction isFullWidth(str) {\r\n  (0, _assertString2.default)(str);\r\n  return fullWidth.test(str);\r\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/lib/isFullWidth.js\n ** module id = 84\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.halfWidth = undefined;\r\nexports.default = isHalfWidth;\r\n\r\nvar _assertString = require('./util/assertString');\r\n\r\nvar _assertString2 = _interopRequireDefault(_assertString);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nvar halfWidth = exports.halfWidth = /[\\u0020-\\u007E\\uFF61-\\uFF9F\\uFFA0-\\uFFDC\\uFFE8-\\uFFEE0-9a-zA-Z]/;\r\n\r\nfunction isHalfWidth(str) {\r\n  (0, _assertString2.default)(str);\r\n  return halfWidth.test(str);\r\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/lib/isHalfWidth.js\n ** module id = 85\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = isHexadecimal;\r\n\r\nvar _assertString = require('./util/assertString');\r\n\r\nvar _assertString2 = _interopRequireDefault(_assertString);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nvar hexadecimal = /^[0-9A-F]+$/i;\r\n\r\nfunction isHexadecimal(str) {\r\n  (0, _assertString2.default)(str);\r\n  return hexadecimal.test(str);\r\n}\r\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/lib/isHexadecimal.js\n ** module id = 86\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = isIP;\r\n\r\nvar _assertString = require('./util/assertString');\r\n\r\nvar _assertString2 = _interopRequireDefault(_assertString);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nvar ipv4Maybe = /^(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})$/;\r\nvar ipv6Block = /^[0-9A-F]{1,4}$/i;\r\n\r\nfunction isIP(str) {\r\n  var version = arguments.length <= 1 || arguments[1] === undefined ? '' : arguments[1];\r\n\r\n  (0, _assertString2.default)(str);\r\n  version = String(version);\r\n  if (!version) {\r\n    return isIP(str, 4) || isIP(str, 6);\r\n  } else if (version === '4') {\r\n    if (!ipv4Maybe.test(str)) {\r\n      return false;\r\n    }\r\n    var parts = str.split('.').sort(function (a, b) {\r\n      return a - b;\r\n    });\r\n    return parts[3] <= 255;\r\n  } else if (version === '6') {\r\n    var blocks = str.split(':');\r\n    var foundOmissionBlock = false; // marker to indicate ::\r\n\r\n    // At least some OS accept the last 32 bits of an IPv6 address\r\n    // (i.e. 2 of the blocks) in IPv4 notation, and RFC 3493 says\r\n    // that '::ffff:a.b.c.d' is valid for IPv4-mapped IPv6 addresses,\r\n    // and '::a.b.c.d' is deprecated, but also valid.\r\n    var foundIPv4TransitionBlock = isIP(blocks[blocks.length - 1], 4);\r\n    var expectedNumberOfBlocks = foundIPv4TransitionBlock ? 7 : 8;\r\n\r\n    if (blocks.length > expectedNumberOfBlocks) {\r\n      return false;\r\n    }\r\n    // initial or final ::\r\n    if (str === '::') {\r\n      return true;\r\n    } else if (str.substr(0, 2) === '::') {\r\n      blocks.shift();\r\n      blocks.shift();\r\n      foundOmissionBlock = true;\r\n    } else if (str.substr(str.length - 2) === '::') {\r\n      blocks.pop();\r\n      blocks.pop();\r\n      foundOmissionBlock = true;\r\n    }\r\n\r\n    for (var i = 0; i < blocks.length; ++i) {\r\n      // test for a :: which can not be at the string start/end\r\n      // since those cases have been handled above\r\n      if (blocks[i] === '' && i > 0 && i < blocks.length - 1) {\r\n        if (foundOmissionBlock) {\r\n          return false; // multiple :: in address\r\n        }\r\n        foundOmissionBlock = true;\r\n      } else if (foundIPv4TransitionBlock && i === blocks.length - 1) {\r\n        // it has been checked before that the last\r\n        // block is a valid IPv4 address\r\n      } else if (!ipv6Block.test(blocks[i])) {\r\n        return false;\r\n      }\r\n    }\r\n    if (foundOmissionBlock) {\r\n      return blocks.length >= 1;\r\n    }\r\n    return blocks.length === expectedNumberOfBlocks;\r\n  }\r\n  return false;\r\n}\r\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/lib/isIP.js\n ** module id = 87\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.iso8601 = undefined;\r\n\r\nexports.default = function (str) {\r\n  (0, _assertString2.default)(str);\r\n  return iso8601.test(str);\r\n};\r\n\r\nvar _assertString = require('./util/assertString');\r\n\r\nvar _assertString2 = _interopRequireDefault(_assertString);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\n/* eslint-disable max-len */\r\n// from http://goo.gl/0ejHHW\r\nvar iso8601 = exports.iso8601 = /^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$/;\r\n/* eslint-enable max-len */\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/lib/isISO8601.js\n ** module id = 88\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = ltrim;\r\n\r\nvar _assertString = require('./util/assertString');\r\n\r\nvar _assertString2 = _interopRequireDefault(_assertString);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nfunction ltrim(str, chars) {\r\n  (0, _assertString2.default)(str);\r\n  var pattern = chars ? new RegExp('^[' + chars + ']+', 'g') : /^\\s+/g;\r\n  return str.replace(pattern, '');\r\n}\r\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/lib/ltrim.js\n ** module id = 89\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = rtrim;\r\n\r\nvar _assertString = require('./util/assertString');\r\n\r\nvar _assertString2 = _interopRequireDefault(_assertString);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nfunction rtrim(str, chars) {\r\n  (0, _assertString2.default)(str);\r\n  var pattern = chars ? new RegExp('[' + chars + ']') : /\\s/;\r\n\r\n  var idx = str.length - 1;\r\n  while (idx >= 0 && pattern.test(str[idx])) {\r\n    idx--;\r\n  }\r\n\r\n  return idx < str.length ? str.substr(0, idx + 1) : str;\r\n}\r\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/lib/rtrim.js\n ** module id = 90\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = toFloat;\r\n\r\nvar _assertString = require('./util/assertString');\r\n\r\nvar _assertString2 = _interopRequireDefault(_assertString);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nfunction toFloat(str) {\r\n  (0, _assertString2.default)(str);\r\n  return parseFloat(str);\r\n}\r\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/lib/toFloat.js\n ** module id = 91\n ** module chunks = 0\n **/","\"use strict\";\nvar core_1 = require('../core');\nvar empty = {};\nvar DropRepeatsOperator = (function () {\n    function DropRepeatsOperator(fn, ins) {\n        this.fn = fn;\n        this.ins = ins;\n        this.type = 'dropRepeats';\n        this.out = null;\n        this.v = empty;\n    }\n    DropRepeatsOperator.prototype._start = function (out) {\n        this.out = out;\n        this.ins._add(this);\n    };\n    DropRepeatsOperator.prototype._stop = function () {\n        this.ins._remove(this);\n        this.out = null;\n        this.v = empty;\n    };\n    DropRepeatsOperator.prototype.isEq = function (x, y) {\n        return this.fn ? this.fn(x, y) : x === y;\n    };\n    DropRepeatsOperator.prototype._n = function (t) {\n        var u = this.out;\n        if (!u)\n            return;\n        var v = this.v;\n        if (v !== empty && this.isEq(t, v))\n            return;\n        this.v = Array.isArray(t) ? t.slice() : t;\n        u._n(t);\n    };\n    DropRepeatsOperator.prototype._e = function (err) {\n        var u = this.out;\n        if (!u)\n            return;\n        u._e(err);\n    };\n    DropRepeatsOperator.prototype._c = function () {\n        var u = this.out;\n        if (!u)\n            return;\n        u._c();\n    };\n    return DropRepeatsOperator;\n}());\nexports.DropRepeatsOperator = DropRepeatsOperator;\n/**\n * Drops consecutive duplicate values in a stream.\n *\n * Marble diagram:\n *\n * ```text\n * --1--2--1--1--1--2--3--4--3--3|\n *     dropRepeats\n * --1--2--1--------2--3--4--3---|\n * ```\n *\n * Example:\n *\n * ```js\n * import dropRepeats from 'xstream/extra/dropRepeats'\n *\n * const stream = xs.of(1, 2, 1, 1, 1, 2, 3, 4, 3, 3)\n *   .compose(dropRepeats())\n *\n * stream.addListener({\n *   next: i => console.log(i),\n *   error: err => console.error(err),\n *   complete: () => console.log('completed')\n * })\n * ```\n *\n * ```text\n * > 1\n * > 2\n * > 1\n * > 2\n * > 3\n * > 4\n * > 3\n * > completed\n * ```\n *\n * Example with a custom isEqual function:\n *\n * ```js\n * import dropRepeats from 'xstream/extra/dropRepeats'\n *\n * const stream = xs.of('a', 'b', 'a', 'A', 'B', 'b')\n *   .compose(dropRepeats((x, y) => x.toLowerCase() === y.toLowerCase()))\n *\n * stream.addListener({\n *   next: i => console.log(i),\n *   error: err => console.error(err),\n *   complete: () => console.log('completed')\n * })\n * ```\n *\n * ```text\n * > a\n * > b\n * > a\n * > B\n * > completed\n * ```\n *\n * @param {Function} isEqual An optional function of type\n * `(x: T, y: T) => boolean` that takes an event from the input stream and\n * checks if it is equal to previous event, by returning a boolean.\n * @return {Stream}\n */\nfunction dropRepeats(isEqual) {\n    if (isEqual === void 0) { isEqual = null; }\n    return function dropRepeatsOperator(ins) {\n        return new core_1.Stream(new DropRepeatsOperator(isEqual, ins));\n    };\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = dropRepeats;\n//# sourceMappingURL=dropRepeats.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/xstream/extra/dropRepeats.js\n ** module id = 92\n ** module chunks = 0\n **/","module.exports = require('./lib/index');\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/symbol-observable/index.js\n ** module id = 226\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n\tvalue: true\r\n});\r\n\r\nvar _ponyfill = require('./ponyfill');\r\n\r\nvar _ponyfill2 = _interopRequireDefault(_ponyfill);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\r\n\r\nvar root = undefined; /* global window */\r\n\r\nif (typeof global !== 'undefined') {\r\n\troot = global;\r\n} else if (typeof window !== 'undefined') {\r\n\troot = window;\r\n}\r\n\r\nvar result = (0, _ponyfill2['default'])(root);\r\nexports['default'] = result;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/symbol-observable/lib/index.js\n ** module id = 227\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n\tvalue: true\r\n});\r\nexports['default'] = symbolObservablePonyfill;\r\nfunction symbolObservablePonyfill(root) {\r\n\tvar result;\r\n\tvar _Symbol = root.Symbol;\r\n\r\n\tif (typeof _Symbol === 'function') {\r\n\t\tif (_Symbol.observable) {\r\n\t\t\tresult = _Symbol.observable;\r\n\t\t} else {\r\n\t\t\tresult = _Symbol('observable');\r\n\t\t\t_Symbol.observable = result;\r\n\t\t}\r\n\t} else {\r\n\t\tresult = '@@observable';\r\n\t}\r\n\r\n\treturn result;\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/symbol-observable/lib/ponyfill.js\n ** module id = 228\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = contains;\r\n\r\nvar _assertString = require('./util/assertString');\r\n\r\nvar _assertString2 = _interopRequireDefault(_assertString);\r\n\r\nvar _toString = require('./util/toString');\r\n\r\nvar _toString2 = _interopRequireDefault(_toString);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nfunction contains(str, elem) {\r\n  (0, _assertString2.default)(str);\r\n  return str.indexOf((0, _toString2.default)(elem)) >= 0;\r\n}\r\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/lib/contains.js\n ** module id = 229\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = equals;\r\n\r\nvar _assertString = require('./util/assertString');\r\n\r\nvar _assertString2 = _interopRequireDefault(_assertString);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nfunction equals(str, comparison) {\r\n  (0, _assertString2.default)(str);\r\n  return str === comparison;\r\n}\r\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/lib/equals.js\n ** module id = 230\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n      value: true\r\n});\r\nexports.default = escape;\r\n\r\nvar _assertString = require('./util/assertString');\r\n\r\nvar _assertString2 = _interopRequireDefault(_assertString);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nfunction escape(str) {\r\n      (0, _assertString2.default)(str);\r\n      return str.replace(/&/g, '&amp;').replace(/\"/g, '&quot;').replace(/'/g, '&#x27;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\\//g, '&#x2F;').replace(/`/g, '&#96;');\r\n}\r\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/lib/escape.js\n ** module id = 231\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = isAfter;\r\n\r\nvar _assertString = require('./util/assertString');\r\n\r\nvar _assertString2 = _interopRequireDefault(_assertString);\r\n\r\nvar _toDate = require('./toDate');\r\n\r\nvar _toDate2 = _interopRequireDefault(_toDate);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nfunction isAfter(str) {\r\n  var date = arguments.length <= 1 || arguments[1] === undefined ? String(new Date()) : arguments[1];\r\n\r\n  (0, _assertString2.default)(str);\r\n  var comparison = (0, _toDate2.default)(date);\r\n  var original = (0, _toDate2.default)(str);\r\n  return !!(original && comparison && original > comparison);\r\n}\r\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/lib/isAfter.js\n ** module id = 232\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = isAlpha;\r\n\r\nvar _assertString = require('./util/assertString');\r\n\r\nvar _assertString2 = _interopRequireDefault(_assertString);\r\n\r\nvar _alpha = require('./alpha');\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nfunction isAlpha(str) {\r\n  var locale = arguments.length <= 1 || arguments[1] === undefined ? 'en-US' : arguments[1];\r\n\r\n  (0, _assertString2.default)(str);\r\n  if (locale in _alpha.alpha) {\r\n    return _alpha.alpha[locale].test(str);\r\n  }\r\n  throw new Error('Invalid locale \\'' + locale + '\\'');\r\n}\r\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/lib/isAlpha.js\n ** module id = 233\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = isAlphanumeric;\r\n\r\nvar _assertString = require('./util/assertString');\r\n\r\nvar _assertString2 = _interopRequireDefault(_assertString);\r\n\r\nvar _alpha = require('./alpha');\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nfunction isAlphanumeric(str) {\r\n  var locale = arguments.length <= 1 || arguments[1] === undefined ? 'en-US' : arguments[1];\r\n\r\n  (0, _assertString2.default)(str);\r\n  if (locale in _alpha.alphanumeric) {\r\n    return _alpha.alphanumeric[locale].test(str);\r\n  }\r\n  throw new Error('Invalid locale \\'' + locale + '\\'');\r\n}\r\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/lib/isAlphanumeric.js\n ** module id = 234\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = isAscii;\r\n\r\nvar _assertString = require('./util/assertString');\r\n\r\nvar _assertString2 = _interopRequireDefault(_assertString);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\n/* eslint-disable no-control-regex */\r\nvar ascii = /^[\\x00-\\x7F]+$/;\r\n/* eslint-enable no-control-regex */\r\n\r\nfunction isAscii(str) {\r\n  (0, _assertString2.default)(str);\r\n  return ascii.test(str);\r\n}\r\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/lib/isAscii.js\n ** module id = 235\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = isBase64;\r\n\r\nvar _assertString = require('./util/assertString');\r\n\r\nvar _assertString2 = _interopRequireDefault(_assertString);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nvar notBase64 = /[^A-Z0-9+\\/=]/i;\r\n\r\nfunction isBase64(str) {\r\n  (0, _assertString2.default)(str);\r\n  var len = str.length;\r\n  if (!len || len % 4 !== 0 || notBase64.test(str)) {\r\n    return false;\r\n  }\r\n  var firstPaddingChar = str.indexOf('=');\r\n  return firstPaddingChar === -1 || firstPaddingChar === len - 1 || firstPaddingChar === len - 2 && str[len - 1] === '=';\r\n}\r\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/lib/isBase64.js\n ** module id = 236\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = isBefore;\r\n\r\nvar _assertString = require('./util/assertString');\r\n\r\nvar _assertString2 = _interopRequireDefault(_assertString);\r\n\r\nvar _toDate = require('./toDate');\r\n\r\nvar _toDate2 = _interopRequireDefault(_toDate);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nfunction isBefore(str) {\r\n  var date = arguments.length <= 1 || arguments[1] === undefined ? String(new Date()) : arguments[1];\r\n\r\n  (0, _assertString2.default)(str);\r\n  var comparison = (0, _toDate2.default)(date);\r\n  var original = (0, _toDate2.default)(str);\r\n  return !!(original && comparison && original < comparison);\r\n}\r\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/lib/isBefore.js\n ** module id = 237\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = isBoolean;\r\n\r\nvar _assertString = require('./util/assertString');\r\n\r\nvar _assertString2 = _interopRequireDefault(_assertString);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nfunction isBoolean(str) {\r\n  (0, _assertString2.default)(str);\r\n  return ['true', 'false', '1', '0'].indexOf(str) >= 0;\r\n}\r\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/lib/isBoolean.js\n ** module id = 238\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = isCreditCard;\r\n\r\nvar _assertString = require('./util/assertString');\r\n\r\nvar _assertString2 = _interopRequireDefault(_assertString);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\n/* eslint-disable max-len */\r\nvar creditCard = /^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|(222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})|62[0-9]{14}$/;\r\n/* eslint-enable max-len */\r\n\r\nfunction isCreditCard(str) {\r\n  (0, _assertString2.default)(str);\r\n  var sanitized = str.replace(/[^0-9]+/g, '');\r\n  if (!creditCard.test(sanitized)) {\r\n    return false;\r\n  }\r\n  var sum = 0;\r\n  var digit = void 0;\r\n  var tmpNum = void 0;\r\n  var shouldDouble = void 0;\r\n  for (var i = sanitized.length - 1; i >= 0; i--) {\r\n    digit = sanitized.substring(i, i + 1);\r\n    tmpNum = parseInt(digit, 10);\r\n    if (shouldDouble) {\r\n      tmpNum *= 2;\r\n      if (tmpNum >= 10) {\r\n        sum += tmpNum % 10 + 1;\r\n      } else {\r\n        sum += tmpNum;\r\n      }\r\n    } else {\r\n      sum += tmpNum;\r\n    }\r\n    shouldDouble = !shouldDouble;\r\n  }\r\n  return !!(sum % 10 === 0 ? sanitized : false);\r\n}\r\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/lib/isCreditCard.js\n ** module id = 239\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = isCurrency;\r\n\r\nvar _merge = require('./util/merge');\r\n\r\nvar _merge2 = _interopRequireDefault(_merge);\r\n\r\nvar _assertString = require('./util/assertString');\r\n\r\nvar _assertString2 = _interopRequireDefault(_assertString);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nfunction currencyRegex(options) {\r\n  var symbol = '(\\\\' + options.symbol.replace(/\\./g, '\\\\.') + ')' + (options.require_symbol ? '' : '?'),\r\n      negative = '-?',\r\n      whole_dollar_amount_without_sep = '[1-9]\\\\d*',\r\n      whole_dollar_amount_with_sep = '[1-9]\\\\d{0,2}(\\\\' + options.thousands_separator + '\\\\d{3})*',\r\n      valid_whole_dollar_amounts = ['0', whole_dollar_amount_without_sep, whole_dollar_amount_with_sep],\r\n      whole_dollar_amount = '(' + valid_whole_dollar_amounts.join('|') + ')?',\r\n      decimal_amount = '(\\\\' + options.decimal_separator + '\\\\d{2})?';\r\n  var pattern = whole_dollar_amount + decimal_amount;\r\n\r\n  // default is negative sign before symbol, but there are two other options (besides parens)\r\n  if (options.allow_negatives && !options.parens_for_negatives) {\r\n    if (options.negative_sign_after_digits) {\r\n      pattern += negative;\r\n    } else if (options.negative_sign_before_digits) {\r\n      pattern = negative + pattern;\r\n    }\r\n  }\r\n\r\n  // South African Rand, for example, uses R 123 (space) and R-123 (no space)\r\n  if (options.allow_negative_sign_placeholder) {\r\n    pattern = '( (?!\\\\-))?' + pattern;\r\n  } else if (options.allow_space_after_symbol) {\r\n    pattern = ' ?' + pattern;\r\n  } else if (options.allow_space_after_digits) {\r\n    pattern += '( (?!$))?';\r\n  }\r\n\r\n  if (options.symbol_after_digits) {\r\n    pattern += symbol;\r\n  } else {\r\n    pattern = symbol + pattern;\r\n  }\r\n\r\n  if (options.allow_negatives) {\r\n    if (options.parens_for_negatives) {\r\n      pattern = '(\\\\(' + pattern + '\\\\)|' + pattern + ')';\r\n    } else if (!(options.negative_sign_before_digits || options.negative_sign_after_digits)) {\r\n      pattern = negative + pattern;\r\n    }\r\n  }\r\n\r\n  /* eslint-disable prefer-template */\r\n  return new RegExp('^' +\r\n  // ensure there's a dollar and/or decimal amount, and that\r\n  // it doesn't start with a space or a negative sign followed by a space\r\n  '(?!-? )(?=.*\\\\d)' + pattern + '$');\r\n  /* eslint-enable prefer-template */\r\n}\r\n\r\nvar default_currency_options = {\r\n  symbol: '$',\r\n  require_symbol: false,\r\n  allow_space_after_symbol: false,\r\n  symbol_after_digits: false,\r\n  allow_negatives: true,\r\n  parens_for_negatives: false,\r\n  negative_sign_before_digits: false,\r\n  negative_sign_after_digits: false,\r\n  allow_negative_sign_placeholder: false,\r\n  thousands_separator: ',',\r\n  decimal_separator: '.',\r\n  allow_space_after_digits: false\r\n};\r\n\r\nfunction isCurrency(str, options) {\r\n  (0, _assertString2.default)(str);\r\n  options = (0, _merge2.default)(options, default_currency_options);\r\n  return currencyRegex(options).test(str);\r\n}\r\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/lib/isCurrency.js\n ** module id = 240\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = isDataURI;\r\n\r\nvar _assertString = require('./util/assertString');\r\n\r\nvar _assertString2 = _interopRequireDefault(_assertString);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nvar dataURI = /^\\s*data:([a-z]+\\/[a-z0-9\\-\\+]+(;[a-z\\-]+=[a-z0-9\\-]+)?)?(;base64)?,[a-z0-9!\\$&',\\(\\)\\*\\+,;=\\-\\._~:@\\/\\?%\\s]*\\s*$/i; // eslint-disable-line max-len\r\n\r\nfunction isDataURI(str) {\r\n  (0, _assertString2.default)(str);\r\n  return dataURI.test(str);\r\n}\r\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/lib/isDataURI.js\n ** module id = 241\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = isDate;\r\n\r\nvar _assertString = require('./util/assertString');\r\n\r\nvar _assertString2 = _interopRequireDefault(_assertString);\r\n\r\nvar _isISO = require('./isISO8601');\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nfunction getTimezoneOffset(str) {\r\n  var iso8601Parts = str.match(_isISO.iso8601);\r\n  var timezone = void 0,\r\n      sign = void 0,\r\n      hours = void 0,\r\n      minutes = void 0;\r\n  if (!iso8601Parts) {\r\n    str = str.toLowerCase();\r\n    timezone = str.match(/(?:\\s|gmt\\s*)(-|\\+)(\\d{1,4})(\\s|$)/);\r\n    if (!timezone) {\r\n      return str.indexOf('gmt') !== -1 ? 0 : null;\r\n    }\r\n    sign = timezone[1];\r\n    var offset = timezone[2];\r\n    if (offset.length === 3) {\r\n      offset = '0' + offset;\r\n    }\r\n    if (offset.length <= 2) {\r\n      hours = 0;\r\n      minutes = parseInt(offset, 10);\r\n    } else {\r\n      hours = parseInt(offset.slice(0, 2), 10);\r\n      minutes = parseInt(offset.slice(2, 4), 10);\r\n    }\r\n  } else {\r\n    timezone = iso8601Parts[21];\r\n    if (!timezone) {\r\n      // if no hour/minute was provided, the date is GMT\r\n      return !iso8601Parts[12] ? 0 : null;\r\n    }\r\n    if (timezone === 'z' || timezone === 'Z') {\r\n      return 0;\r\n    }\r\n    sign = iso8601Parts[22];\r\n    if (timezone.indexOf(':') !== -1) {\r\n      hours = parseInt(iso8601Parts[23], 10);\r\n      minutes = parseInt(iso8601Parts[24], 10);\r\n    } else {\r\n      hours = 0;\r\n      minutes = parseInt(iso8601Parts[23], 10);\r\n    }\r\n  }\r\n  return (hours * 60 + minutes) * (sign === '-' ? 1 : -1);\r\n}\r\n\r\nfunction isDate(str) {\r\n  (0, _assertString2.default)(str);\r\n  var normalizedDate = new Date(Date.parse(str));\r\n  if (isNaN(normalizedDate)) {\r\n    return false;\r\n  }\r\n\r\n  // normalizedDate is in the user's timezone. Apply the input\r\n  // timezone offset to the date so that the year and day match\r\n  // the input\r\n  var timezoneOffset = getTimezoneOffset(str);\r\n  if (timezoneOffset !== null) {\r\n    var timezoneDifference = normalizedDate.getTimezoneOffset() - timezoneOffset;\r\n    normalizedDate = new Date(normalizedDate.getTime() + 60000 * timezoneDifference);\r\n  }\r\n\r\n  var day = String(normalizedDate.getDate());\r\n  var dayOrYear = void 0,\r\n      dayOrYearMatches = void 0,\r\n      year = void 0;\r\n  // check for valid double digits that could be late days\r\n  // check for all matches since a string like '12/23' is a valid date\r\n  // ignore everything with nearby colons\r\n  dayOrYearMatches = str.match(/(^|[^:\\d])[23]\\d([^T:\\d]|$)/g);\r\n  if (!dayOrYearMatches) {\r\n    return true;\r\n  }\r\n  dayOrYear = dayOrYearMatches.map(function (digitString) {\r\n    return digitString.match(/\\d+/g)[0];\r\n  }).join('/');\r\n\r\n  year = String(normalizedDate.getFullYear()).slice(-2);\r\n  if (dayOrYear === day || dayOrYear === year) {\r\n    return true;\r\n  } else if (dayOrYear === '' + day / year || dayOrYear === '' + year / day) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/lib/isDate.js\n ** module id = 242\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = isDecimal;\r\n\r\nvar _assertString = require('./util/assertString');\r\n\r\nvar _assertString2 = _interopRequireDefault(_assertString);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nvar decimal = /^[-+]?([0-9]+|\\.[0-9]+|[0-9]+\\.[0-9]+)$/;\r\n\r\nfunction isDecimal(str) {\r\n  (0, _assertString2.default)(str);\r\n  return str !== '' && decimal.test(str);\r\n}\r\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/lib/isDecimal.js\n ** module id = 243\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = isDivisibleBy;\r\n\r\nvar _assertString = require('./util/assertString');\r\n\r\nvar _assertString2 = _interopRequireDefault(_assertString);\r\n\r\nvar _toFloat = require('./toFloat');\r\n\r\nvar _toFloat2 = _interopRequireDefault(_toFloat);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nfunction isDivisibleBy(str, num) {\r\n  (0, _assertString2.default)(str);\r\n  return (0, _toFloat2.default)(str) % parseInt(num, 10) === 0;\r\n}\r\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/lib/isDivisibleBy.js\n ** module id = 244\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = isFloat;\r\n\r\nvar _assertString = require('./util/assertString');\r\n\r\nvar _assertString2 = _interopRequireDefault(_assertString);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nvar float = /^(?:[-+]?(?:[0-9]+))?(?:\\.[0-9]*)?(?:[eE][\\+\\-]?(?:[0-9]+))?$/;\r\n\r\nfunction isFloat(str, options) {\r\n  (0, _assertString2.default)(str);\r\n  options = options || {};\r\n  if (str === '' || str === '.') {\r\n    return false;\r\n  }\r\n  return float.test(str) && (!options.hasOwnProperty('min') || str >= options.min) && (!options.hasOwnProperty('max') || str <= options.max);\r\n}\r\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/lib/isFloat.js\n ** module id = 245\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = isHexColor;\r\n\r\nvar _assertString = require('./util/assertString');\r\n\r\nvar _assertString2 = _interopRequireDefault(_assertString);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nvar hexcolor = /^#?([0-9A-F]{3}|[0-9A-F]{6})$/i;\r\n\r\nfunction isHexColor(str) {\r\n  (0, _assertString2.default)(str);\r\n  return hexcolor.test(str);\r\n}\r\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/lib/isHexColor.js\n ** module id = 246\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = isISBN;\r\n\r\nvar _assertString = require('./util/assertString');\r\n\r\nvar _assertString2 = _interopRequireDefault(_assertString);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nvar isbn10Maybe = /^(?:[0-9]{9}X|[0-9]{10})$/;\r\nvar isbn13Maybe = /^(?:[0-9]{13})$/;\r\nvar factor = [1, 3];\r\n\r\nfunction isISBN(str) {\r\n  var version = arguments.length <= 1 || arguments[1] === undefined ? '' : arguments[1];\r\n\r\n  (0, _assertString2.default)(str);\r\n  version = String(version);\r\n  if (!version) {\r\n    return isISBN(str, 10) || isISBN(str, 13);\r\n  }\r\n  var sanitized = str.replace(/[\\s-]+/g, '');\r\n  var checksum = 0;\r\n  var i = void 0;\r\n  if (version === '10') {\r\n    if (!isbn10Maybe.test(sanitized)) {\r\n      return false;\r\n    }\r\n    for (i = 0; i < 9; i++) {\r\n      checksum += (i + 1) * sanitized.charAt(i);\r\n    }\r\n    if (sanitized.charAt(9) === 'X') {\r\n      checksum += 10 * 10;\r\n    } else {\r\n      checksum += 10 * sanitized.charAt(9);\r\n    }\r\n    if (checksum % 11 === 0) {\r\n      return !!sanitized;\r\n    }\r\n  } else if (version === '13') {\r\n    if (!isbn13Maybe.test(sanitized)) {\r\n      return false;\r\n    }\r\n    for (i = 0; i < 12; i++) {\r\n      checksum += factor[i % 2] * sanitized.charAt(i);\r\n    }\r\n    if (sanitized.charAt(12) - (10 - checksum % 10) % 10 === 0) {\r\n      return !!sanitized;\r\n    }\r\n  }\r\n  return false;\r\n}\r\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/lib/isISBN.js\n ** module id = 247\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = isISIN;\r\n\r\nvar _assertString = require('./util/assertString');\r\n\r\nvar _assertString2 = _interopRequireDefault(_assertString);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nvar isin = /^[A-Z]{2}[0-9A-Z]{9}[0-9]$/;\r\n\r\nfunction isISIN(str) {\r\n  (0, _assertString2.default)(str);\r\n  if (!isin.test(str)) {\r\n    return false;\r\n  }\r\n\r\n  var checksumStr = str.replace(/[A-Z]/g, function (character) {\r\n    return parseInt(character, 36);\r\n  });\r\n\r\n  var sum = 0;\r\n  var digit = void 0;\r\n  var tmpNum = void 0;\r\n  var shouldDouble = true;\r\n  for (var i = checksumStr.length - 2; i >= 0; i--) {\r\n    digit = checksumStr.substring(i, i + 1);\r\n    tmpNum = parseInt(digit, 10);\r\n    if (shouldDouble) {\r\n      tmpNum *= 2;\r\n      if (tmpNum >= 10) {\r\n        sum += tmpNum + 1;\r\n      } else {\r\n        sum += tmpNum;\r\n      }\r\n    } else {\r\n      sum += tmpNum;\r\n    }\r\n    shouldDouble = !shouldDouble;\r\n  }\r\n\r\n  return parseInt(str.substr(str.length - 1), 10) === (10000 - sum) % 10;\r\n}\r\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/lib/isISIN.js\n ** module id = 248\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\n\r\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\r\n\r\nexports.default = isIn;\r\n\r\nvar _assertString = require('./util/assertString');\r\n\r\nvar _assertString2 = _interopRequireDefault(_assertString);\r\n\r\nvar _toString = require('./util/toString');\r\n\r\nvar _toString2 = _interopRequireDefault(_toString);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nfunction isIn(str, options) {\r\n  (0, _assertString2.default)(str);\r\n  var i = void 0;\r\n  if (Object.prototype.toString.call(options) === '[object Array]') {\r\n    var array = [];\r\n    for (i in options) {\r\n      if ({}.hasOwnProperty.call(options, i)) {\r\n        array[i] = (0, _toString2.default)(options[i]);\r\n      }\r\n    }\r\n    return array.indexOf(str) >= 0;\r\n  } else if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\r\n    return options.hasOwnProperty(str);\r\n  } else if (options && typeof options.indexOf === 'function') {\r\n    return options.indexOf(str) >= 0;\r\n  }\r\n  return false;\r\n}\r\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/lib/isIn.js\n ** module id = 249\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = isInt;\r\n\r\nvar _assertString = require('./util/assertString');\r\n\r\nvar _assertString2 = _interopRequireDefault(_assertString);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nvar int = /^(?:[-+]?(?:0|[1-9][0-9]*))$/;\r\nvar intLeadingZeroes = /^[-+]?[0-9]+$/;\r\n\r\nfunction isInt(str, options) {\r\n  (0, _assertString2.default)(str);\r\n  options = options || {};\r\n\r\n  // Get the regex to use for testing, based on whether\r\n  // leading zeroes are allowed or not.\r\n  var regex = options.hasOwnProperty('allow_leading_zeroes') && options.allow_leading_zeroes ? intLeadingZeroes : int;\r\n\r\n  // Check min/max\r\n  var minCheckPassed = !options.hasOwnProperty('min') || str >= options.min;\r\n  var maxCheckPassed = !options.hasOwnProperty('max') || str <= options.max;\r\n\r\n  return regex.test(str) && minCheckPassed && maxCheckPassed;\r\n}\r\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/lib/isInt.js\n ** module id = 250\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\n\r\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\r\n\r\nexports.default = isJSON;\r\n\r\nvar _assertString = require('./util/assertString');\r\n\r\nvar _assertString2 = _interopRequireDefault(_assertString);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nfunction isJSON(str) {\r\n  (0, _assertString2.default)(str);\r\n  try {\r\n    var obj = JSON.parse(str);\r\n    return !!obj && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object';\r\n  } catch (e) {/* ignore */}\r\n  return false;\r\n}\r\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/lib/isJSON.js\n ** module id = 251\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\n\r\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\r\n\r\nexports.default = isLength;\r\n\r\nvar _assertString = require('./util/assertString');\r\n\r\nvar _assertString2 = _interopRequireDefault(_assertString);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\n/* eslint-disable prefer-rest-params */\r\nfunction isLength(str, options) {\r\n  (0, _assertString2.default)(str);\r\n  var min = void 0;\r\n  var max = void 0;\r\n  if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\r\n    min = options.min || 0;\r\n    max = options.max;\r\n  } else {\r\n    // backwards compatibility: isLength(str, min [, max])\r\n    min = arguments[1];\r\n    max = arguments[2];\r\n  }\r\n  var surrogatePairs = str.match(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g) || [];\r\n  var len = str.length - surrogatePairs.length;\r\n  return len >= min && (typeof max === 'undefined' || len <= max);\r\n}\r\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/lib/isLength.js\n ** module id = 252\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = isLowercase;\r\n\r\nvar _assertString = require('./util/assertString');\r\n\r\nvar _assertString2 = _interopRequireDefault(_assertString);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nfunction isLowercase(str) {\r\n  (0, _assertString2.default)(str);\r\n  return str === str.toLowerCase();\r\n}\r\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/lib/isLowercase.js\n ** module id = 253\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = isMACAddress;\r\n\r\nvar _assertString = require('./util/assertString');\r\n\r\nvar _assertString2 = _interopRequireDefault(_assertString);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nvar macAddress = /^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$/;\r\n\r\nfunction isMACAddress(str) {\r\n  (0, _assertString2.default)(str);\r\n  return macAddress.test(str);\r\n}\r\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/lib/isMACAddress.js\n ** module id = 254\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = isMD5;\r\n\r\nvar _assertString = require('./util/assertString');\r\n\r\nvar _assertString2 = _interopRequireDefault(_assertString);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nvar md5 = /^[a-f0-9]{32}$/;\r\n\r\nfunction isMD5(str) {\r\n  (0, _assertString2.default)(str);\r\n  return md5.test(str);\r\n}\r\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/lib/isMD5.js\n ** module id = 255\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = isMobilePhone;\r\n\r\nvar _assertString = require('./util/assertString');\r\n\r\nvar _assertString2 = _interopRequireDefault(_assertString);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\n/* eslint-disable max-len */\r\nvar phones = {\r\n  'ar-DZ': /^(\\+?213|0)(5|6|7)\\d{8}$/,\r\n  'ar-SY': /^(!?(\\+?963)|0)?9\\d{8}$/,\r\n  'ar-SA': /^(!?(\\+?966)|0)?5\\d{8}$/,\r\n  'en-US': /^(\\+?1)?[2-9]\\d{2}[2-9](?!11)\\d{6}$/,\r\n  'cs-CZ': /^(\\+?420)? ?[1-9][0-9]{2} ?[0-9]{3} ?[0-9]{3}$/,\r\n  'de-DE': /^(\\+?49[ \\.\\-])?([\\(]{1}[0-9]{1,6}[\\)])?([0-9 \\.\\-\\/]{3,20})((x|ext|extension)[ ]?[0-9]{1,4})?$/,\r\n  'da-DK': /^(\\+?45)?(\\d{8})$/,\r\n  'el-GR': /^(\\+?30)?(69\\d{8})$/,\r\n  'en-AU': /^(\\+?61|0)4\\d{8}$/,\r\n  'en-GB': /^(\\+?44|0)7\\d{9}$/,\r\n  'en-HK': /^(\\+?852\\-?)?[569]\\d{3}\\-?\\d{4}$/,\r\n  'en-IN': /^(\\+?91|0)?[789]\\d{9}$/,\r\n  'en-NZ': /^(\\+?64|0)2\\d{7,9}$/,\r\n  'en-ZA': /^(\\+?27|0)\\d{9}$/,\r\n  'en-ZM': /^(\\+?26)?09[567]\\d{7}$/,\r\n  'es-ES': /^(\\+?34)?(6\\d{1}|7[1234])\\d{7}$/,\r\n  'fi-FI': /^(\\+?358|0)\\s?(4(0|1|2|4|5)?|50)\\s?(\\d\\s?){4,8}\\d$/,\r\n  'fr-FR': /^(\\+?33|0)[67]\\d{8}$/,\r\n  'hu-HU': /^(\\+?36)(20|30|70)\\d{7}$/,\r\n  'it-IT': /^(\\+?39)?\\s?3\\d{2} ?\\d{6,7}$/,\r\n  'ja-JP': /^(\\+?81|0)\\d{1,4}[ \\-]?\\d{1,4}[ \\-]?\\d{4}$/,\r\n  'ms-MY': /^(\\+?6?01){1}(([145]{1}(\\-|\\s)?\\d{7,8})|([236789]{1}(\\s|\\-)?\\d{7}))$/,\r\n  'nb-NO': /^(\\+?47)?[49]\\d{7}$/,\r\n  'nl-BE': /^(\\+?32|0)4?\\d{8}$/,\r\n  'nn-NO': /^(\\+?47)?[49]\\d{7}$/,\r\n  'pl-PL': /^(\\+?48)? ?[5-8]\\d ?\\d{3} ?\\d{2} ?\\d{2}$/,\r\n  'pt-BR': /^(\\+?55|0)\\-?[1-9]{2}\\-?[2-9]{1}\\d{3,4}\\-?\\d{4}$/,\r\n  'pt-PT': /^(\\+?351)?9[1236]\\d{7}$/,\r\n  'ru-RU': /^(\\+?7|8)?9\\d{9}$/,\r\n  'sr-RS': /^(\\+3816|06)[- \\d]{5,9}$/,\r\n  'tr-TR': /^(\\+?90|0)?5\\d{9}$/,\r\n  'vi-VN': /^(\\+?84|0)?((1(2([0-9])|6([2-9])|88|99))|(9((?!5)[0-9])))([0-9]{7})$/,\r\n  'zh-CN': /^(\\+?0?86\\-?)?1[345789]\\d{9}$/,\r\n  'zh-TW': /^(\\+?886\\-?|0)?9\\d{8}$/\r\n};\r\n/* eslint-enable max-len */\r\n\r\n// aliases\r\nphones['en-CA'] = phones['en-US'];\r\nphones['fr-BE'] = phones['nl-BE'];\r\n\r\nfunction isMobilePhone(str, locale) {\r\n  (0, _assertString2.default)(str);\r\n  if (locale in phones) {\r\n    return phones[locale].test(str);\r\n  }\r\n  return false;\r\n}\r\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/lib/isMobilePhone.js\n ** module id = 256\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = isMongoId;\r\n\r\nvar _assertString = require('./util/assertString');\r\n\r\nvar _assertString2 = _interopRequireDefault(_assertString);\r\n\r\nvar _isHexadecimal = require('./isHexadecimal');\r\n\r\nvar _isHexadecimal2 = _interopRequireDefault(_isHexadecimal);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nfunction isMongoId(str) {\r\n  (0, _assertString2.default)(str);\r\n  return (0, _isHexadecimal2.default)(str) && str.length === 24;\r\n}\r\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/lib/isMongoId.js\n ** module id = 257\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = isMultibyte;\r\n\r\nvar _assertString = require('./util/assertString');\r\n\r\nvar _assertString2 = _interopRequireDefault(_assertString);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\n/* eslint-disable no-control-regex */\r\nvar multibyte = /[^\\x00-\\x7F]/;\r\n/* eslint-enable no-control-regex */\r\n\r\nfunction isMultibyte(str) {\r\n  (0, _assertString2.default)(str);\r\n  return multibyte.test(str);\r\n}\r\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/lib/isMultibyte.js\n ** module id = 258\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = isNull;\r\n\r\nvar _assertString = require('./util/assertString');\r\n\r\nvar _assertString2 = _interopRequireDefault(_assertString);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nfunction isNull(str) {\r\n  (0, _assertString2.default)(str);\r\n  return str.length === 0;\r\n}\r\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/lib/isNull.js\n ** module id = 259\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = isNumeric;\r\n\r\nvar _assertString = require('./util/assertString');\r\n\r\nvar _assertString2 = _interopRequireDefault(_assertString);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nvar numeric = /^[-+]?[0-9]+$/;\r\n\r\nfunction isNumeric(str) {\r\n  (0, _assertString2.default)(str);\r\n  return numeric.test(str);\r\n}\r\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/lib/isNumeric.js\n ** module id = 260\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = isSurrogatePair;\r\n\r\nvar _assertString = require('./util/assertString');\r\n\r\nvar _assertString2 = _interopRequireDefault(_assertString);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nvar surrogatePair = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/;\r\n\r\nfunction isSurrogatePair(str) {\r\n  (0, _assertString2.default)(str);\r\n  return surrogatePair.test(str);\r\n}\r\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/lib/isSurrogatePair.js\n ** module id = 261\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = isURL;\r\n\r\nvar _assertString = require('./util/assertString');\r\n\r\nvar _assertString2 = _interopRequireDefault(_assertString);\r\n\r\nvar _isFQDN = require('./isFQDN');\r\n\r\nvar _isFQDN2 = _interopRequireDefault(_isFQDN);\r\n\r\nvar _isIP = require('./isIP');\r\n\r\nvar _isIP2 = _interopRequireDefault(_isIP);\r\n\r\nvar _merge = require('./util/merge');\r\n\r\nvar _merge2 = _interopRequireDefault(_merge);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nvar default_url_options = {\r\n  protocols: ['http', 'https', 'ftp'],\r\n  require_tld: true,\r\n  require_protocol: false,\r\n  require_host: true,\r\n  require_valid_protocol: true,\r\n  allow_underscores: false,\r\n  allow_trailing_dot: false,\r\n  allow_protocol_relative_urls: false\r\n};\r\n\r\nvar wrapped_ipv6 = /^\\[([^\\]]+)\\](?::([0-9]+))?$/;\r\n\r\nfunction isRegExp(obj) {\r\n  return Object.prototype.toString.call(obj) === '[object RegExp]';\r\n}\r\n\r\nfunction checkHost(host, matches) {\r\n  for (var i = 0; i < matches.length; i++) {\r\n    var match = matches[i];\r\n    if (host === match || isRegExp(match) && match.test(host)) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction isURL(url, options) {\r\n  (0, _assertString2.default)(url);\r\n  if (!url || url.length >= 2083 || /\\s/.test(url)) {\r\n    return false;\r\n  }\r\n  if (url.indexOf('mailto:') === 0) {\r\n    return false;\r\n  }\r\n  options = (0, _merge2.default)(options, default_url_options);\r\n  var protocol = void 0,\r\n      auth = void 0,\r\n      host = void 0,\r\n      hostname = void 0,\r\n      port = void 0,\r\n      port_str = void 0,\r\n      split = void 0,\r\n      ipv6 = void 0;\r\n\r\n  split = url.split('#');\r\n  url = split.shift();\r\n\r\n  split = url.split('?');\r\n  url = split.shift();\r\n\r\n  split = url.split('://');\r\n  if (split.length > 1) {\r\n    protocol = split.shift();\r\n    if (options.require_valid_protocol && options.protocols.indexOf(protocol) === -1) {\r\n      return false;\r\n    }\r\n  } else if (options.require_protocol) {\r\n    return false;\r\n  } else if (options.allow_protocol_relative_urls && url.substr(0, 2) === '//') {\r\n    split[0] = url.substr(2);\r\n  }\r\n  url = split.join('://');\r\n\r\n  split = url.split('/');\r\n  url = split.shift();\r\n\r\n  if (url === '' && !options.require_host) {\r\n    return true;\r\n  }\r\n\r\n  split = url.split('@');\r\n  if (split.length > 1) {\r\n    auth = split.shift();\r\n    if (auth.indexOf(':') >= 0 && auth.split(':').length > 2) {\r\n      return false;\r\n    }\r\n  }\r\n  hostname = split.join('@');\r\n\r\n  port_str = ipv6 = null;\r\n  var ipv6_match = hostname.match(wrapped_ipv6);\r\n  if (ipv6_match) {\r\n    host = '';\r\n    ipv6 = ipv6_match[1];\r\n    port_str = ipv6_match[2] || null;\r\n  } else {\r\n    split = hostname.split(':');\r\n    host = split.shift();\r\n    if (split.length) {\r\n      port_str = split.join(':');\r\n    }\r\n  }\r\n\r\n  if (port_str !== null) {\r\n    port = parseInt(port_str, 10);\r\n    if (!/^[0-9]+$/.test(port_str) || port <= 0 || port > 65535) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  if (!(0, _isIP2.default)(host) && !(0, _isFQDN2.default)(host, options) && (!ipv6 || !(0, _isIP2.default)(ipv6, 6)) && host !== 'localhost') {\r\n    return false;\r\n  }\r\n\r\n  host = host || ipv6;\r\n\r\n  if (options.host_whitelist && !checkHost(host, options.host_whitelist)) {\r\n    return false;\r\n  }\r\n  if (options.host_blacklist && checkHost(host, options.host_blacklist)) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/lib/isURL.js\n ** module id = 262\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = isUUID;\r\n\r\nvar _assertString = require('./util/assertString');\r\n\r\nvar _assertString2 = _interopRequireDefault(_assertString);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nvar uuid = {\r\n  3: /^[0-9A-F]{8}-[0-9A-F]{4}-3[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,\r\n  4: /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,\r\n  5: /^[0-9A-F]{8}-[0-9A-F]{4}-5[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,\r\n  all: /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i\r\n};\r\n\r\nfunction isUUID(str) {\r\n  var version = arguments.length <= 1 || arguments[1] === undefined ? 'all' : arguments[1];\r\n\r\n  (0, _assertString2.default)(str);\r\n  var pattern = uuid[version];\r\n  return pattern && pattern.test(str);\r\n}\r\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/lib/isUUID.js\n ** module id = 263\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = isUppercase;\r\n\r\nvar _assertString = require('./util/assertString');\r\n\r\nvar _assertString2 = _interopRequireDefault(_assertString);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nfunction isUppercase(str) {\r\n  (0, _assertString2.default)(str);\r\n  return str === str.toUpperCase();\r\n}\r\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/lib/isUppercase.js\n ** module id = 264\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = isVariableWidth;\r\n\r\nvar _assertString = require('./util/assertString');\r\n\r\nvar _assertString2 = _interopRequireDefault(_assertString);\r\n\r\nvar _isFullWidth = require('./isFullWidth');\r\n\r\nvar _isHalfWidth = require('./isHalfWidth');\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nfunction isVariableWidth(str) {\r\n  (0, _assertString2.default)(str);\r\n  return _isFullWidth.fullWidth.test(str) && _isHalfWidth.halfWidth.test(str);\r\n}\r\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/lib/isVariableWidth.js\n ** module id = 265\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = isWhitelisted;\r\n\r\nvar _assertString = require('./util/assertString');\r\n\r\nvar _assertString2 = _interopRequireDefault(_assertString);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nfunction isWhitelisted(str, chars) {\r\n  (0, _assertString2.default)(str);\r\n  for (var i = str.length - 1; i >= 0; i--) {\r\n    if (chars.indexOf(str[i]) === -1) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/lib/isWhitelisted.js\n ** module id = 266\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = matches;\r\n\r\nvar _assertString = require('./util/assertString');\r\n\r\nvar _assertString2 = _interopRequireDefault(_assertString);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nfunction matches(str, pattern, modifiers) {\r\n  (0, _assertString2.default)(str);\r\n  if (Object.prototype.toString.call(pattern) !== '[object RegExp]') {\r\n    pattern = new RegExp(pattern, modifiers);\r\n  }\r\n  return pattern.test(str);\r\n}\r\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/lib/matches.js\n ** module id = 267\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = normalizeEmail;\r\n\r\nvar _isEmail = require('./isEmail');\r\n\r\nvar _isEmail2 = _interopRequireDefault(_isEmail);\r\n\r\nvar _merge = require('./util/merge');\r\n\r\nvar _merge2 = _interopRequireDefault(_merge);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nvar default_normalize_email_options = {\r\n  lowercase: true,\r\n  remove_dots: true,\r\n  remove_extension: true\r\n};\r\n\r\nfunction normalizeEmail(email, options) {\r\n  options = (0, _merge2.default)(options, default_normalize_email_options);\r\n  if (!(0, _isEmail2.default)(email)) {\r\n    return false;\r\n  }\r\n  var parts = email.split('@', 2);\r\n  parts[1] = parts[1].toLowerCase();\r\n  if (parts[1] === 'gmail.com' || parts[1] === 'googlemail.com') {\r\n    if (options.remove_extension) {\r\n      parts[0] = parts[0].split('+')[0];\r\n    }\r\n    if (options.remove_dots) {\r\n      parts[0] = parts[0].replace(/\\./g, '');\r\n    }\r\n    if (!parts[0].length) {\r\n      return false;\r\n    }\r\n    parts[0] = parts[0].toLowerCase();\r\n    parts[1] = 'gmail.com';\r\n  } else if (options.lowercase) {\r\n    parts[0] = parts[0].toLowerCase();\r\n  }\r\n  return parts.join('@');\r\n}\r\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/lib/normalizeEmail.js\n ** module id = 268\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = stripLow;\r\n\r\nvar _assertString = require('./util/assertString');\r\n\r\nvar _assertString2 = _interopRequireDefault(_assertString);\r\n\r\nvar _blacklist = require('./blacklist');\r\n\r\nvar _blacklist2 = _interopRequireDefault(_blacklist);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nfunction stripLow(str, keep_new_lines) {\r\n  (0, _assertString2.default)(str);\r\n  var chars = keep_new_lines ? '\\\\x00-\\\\x09\\\\x0B\\\\x0C\\\\x0E-\\\\x1F\\\\x7F' : '\\\\x00-\\\\x1F\\\\x7F';\r\n  return (0, _blacklist2.default)(str, chars);\r\n}\r\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/lib/stripLow.js\n ** module id = 269\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = toBoolean;\r\n\r\nvar _assertString = require('./util/assertString');\r\n\r\nvar _assertString2 = _interopRequireDefault(_assertString);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nfunction toBoolean(str, strict) {\r\n  (0, _assertString2.default)(str);\r\n  if (strict) {\r\n    return str === '1' || str === 'true';\r\n  }\r\n  return str !== '0' && str !== 'false' && str !== '';\r\n}\r\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/lib/toBoolean.js\n ** module id = 270\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = toInt;\r\n\r\nvar _assertString = require('./util/assertString');\r\n\r\nvar _assertString2 = _interopRequireDefault(_assertString);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nfunction toInt(str, radix) {\r\n  (0, _assertString2.default)(str);\r\n  return parseInt(str, radix || 10);\r\n}\r\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/lib/toInt.js\n ** module id = 271\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = trim;\r\n\r\nvar _rtrim = require('./rtrim');\r\n\r\nvar _rtrim2 = _interopRequireDefault(_rtrim);\r\n\r\nvar _ltrim = require('./ltrim');\r\n\r\nvar _ltrim2 = _interopRequireDefault(_ltrim);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nfunction trim(str, chars) {\r\n  return (0, _rtrim2.default)((0, _ltrim2.default)(str, chars), chars);\r\n}\r\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/lib/trim.js\n ** module id = 272\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n      value: true\r\n});\r\nexports.default = unescape;\r\n\r\nvar _assertString = require('./util/assertString');\r\n\r\nvar _assertString2 = _interopRequireDefault(_assertString);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nfunction unescape(str) {\r\n      (0, _assertString2.default)(str);\r\n      return str.replace(/&amp;/g, '&').replace(/&quot;/g, '\"').replace(/&#x27;/g, \"'\").replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/&#x2F;/g, '/').replace(/&#96;/g, '`');\r\n}\r\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/lib/unescape.js\n ** module id = 273\n ** module chunks = 0\n **/","'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = whitelist;\r\n\r\nvar _assertString = require('./util/assertString');\r\n\r\nvar _assertString2 = _interopRequireDefault(_assertString);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nfunction whitelist(str, chars) {\r\n  (0, _assertString2.default)(str);\r\n  return str.replace(new RegExp('[^' + chars + ']+', 'g'), '');\r\n}\r\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/validator/lib/whitelist.js\n ** module id = 274\n ** module chunks = 0\n **/"],"sourceRoot":""}